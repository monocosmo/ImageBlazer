{"version":3,"file":"dash.mss.min.js","sourceRoot":"./src/","sources":["../node_modules/browserify/node_modules/browser-pack/_prelude.js","../externals/BigInteger.js","core/errors/ErrorsBase.js","core/events/EventsBase.js","mss/MssFragmentInfoController.js","mss/MssFragmentMoofProcessor.js","mss/MssFragmentMoovProcessor.js","mss/MssFragmentProcessor.js","mss/MssHandler.js","mss/errors/MssErrors.js","mss/index.js","mss/parser/MssParser.js","streaming/MediaPlayerEvents.js","streaming/vo/DashJSError.js","streaming/vo/DataChunk.js","streaming/vo/FragmentRequest.js","streaming/vo/metrics/HTTPRequest.js"],"sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","var bigInt=function(undefined){\"use strict\";var BASE=1e7,LOG_BASE=7,MAX_INT=9007199254740992,MAX_INT_ARR=smallToArray(MAX_INT),DEFAULT_ALPHABET=\"0123456789abcdefghijklmnopqrstuvwxyz\";var supportsNativeBigInt=typeof BigInt===\"function\";function Integer(v,radix,alphabet,caseSensitive){if(typeof v===\"undefined\")return Integer[0];if(typeof radix!==\"undefined\")return+radix===10&&!alphabet?parseValue(v):parseBase(v,radix,alphabet,caseSensitive);return parseValue(v)}function BigInteger(value,sign){this.value=value;this.sign=sign;this.isSmall=false}BigInteger.prototype=Object.create(Integer.prototype);function SmallInteger(value){this.value=value;this.sign=value<0;this.isSmall=true}SmallInteger.prototype=Object.create(Integer.prototype);function NativeBigInt(value){this.value=value}NativeBigInt.prototype=Object.create(Integer.prototype);function isPrecise(n){return-MAX_INT<n&&n<MAX_INT}function smallToArray(n){if(n<1e7)return[n];if(n<1e14)return[n%1e7,Math.floor(n/1e7)];return[n%1e7,Math.floor(n/1e7)%1e7,Math.floor(n/1e14)]}function arrayToSmall(arr){trim(arr);var length=arr.length;if(length<4&&compareAbs(arr,MAX_INT_ARR)<0){switch(length){case 0:return 0;case 1:return arr[0];case 2:return arr[0]+arr[1]*BASE;default:return arr[0]+(arr[1]+arr[2]*BASE)*BASE}}return arr}function trim(v){var i=v.length;while(v[--i]===0);v.length=i+1}function createArray(length){var x=new Array(length);var i=-1;while(++i<length){x[i]=0}return x}function truncate(n){if(n>0)return Math.floor(n);return Math.ceil(n)}function add(a,b){var l_a=a.length,l_b=b.length,r=new Array(l_a),carry=0,base=BASE,sum,i;for(i=0;i<l_b;i++){sum=a[i]+b[i]+carry;carry=sum>=base?1:0;r[i]=sum-carry*base}while(i<l_a){sum=a[i]+carry;carry=sum===base?1:0;r[i++]=sum-carry*base}if(carry>0)r.push(carry);return r}function addAny(a,b){if(a.length>=b.length)return add(a,b);return add(b,a)}function addSmall(a,carry){var l=a.length,r=new Array(l),base=BASE,sum,i;for(i=0;i<l;i++){sum=a[i]-base+carry;carry=Math.floor(sum/base);r[i]=sum-carry*base;carry+=1}while(carry>0){r[i++]=carry%base;carry=Math.floor(carry/base)}return r}BigInteger.prototype.add=function(v){var n=parseValue(v);if(this.sign!==n.sign){return this.subtract(n.negate())}var a=this.value,b=n.value;if(n.isSmall){return new BigInteger(addSmall(a,Math.abs(b)),this.sign)}return new BigInteger(addAny(a,b),this.sign)};BigInteger.prototype.plus=BigInteger.prototype.add;SmallInteger.prototype.add=function(v){var n=parseValue(v);var a=this.value;if(a<0!==n.sign){return this.subtract(n.negate())}var b=n.value;if(n.isSmall){if(isPrecise(a+b))return new SmallInteger(a+b);b=smallToArray(Math.abs(b))}return new BigInteger(addSmall(b,Math.abs(a)),a<0)};SmallInteger.prototype.plus=SmallInteger.prototype.add;NativeBigInt.prototype.add=function(v){return new NativeBigInt(this.value+parseValue(v).value)};NativeBigInt.prototype.plus=NativeBigInt.prototype.add;function subtract(a,b){var a_l=a.length,b_l=b.length,r=new Array(a_l),borrow=0,base=BASE,i,difference;for(i=0;i<b_l;i++){difference=a[i]-borrow-b[i];if(difference<0){difference+=base;borrow=1}else borrow=0;r[i]=difference}for(i=b_l;i<a_l;i++){difference=a[i]-borrow;if(difference<0)difference+=base;else{r[i++]=difference;break}r[i]=difference}for(;i<a_l;i++){r[i]=a[i]}trim(r);return r}function subtractAny(a,b,sign){var value;if(compareAbs(a,b)>=0){value=subtract(a,b)}else{value=subtract(b,a);sign=!sign}value=arrayToSmall(value);if(typeof value===\"number\"){if(sign)value=-value;return new SmallInteger(value)}return new BigInteger(value,sign)}function subtractSmall(a,b,sign){var l=a.length,r=new Array(l),carry=-b,base=BASE,i,difference;for(i=0;i<l;i++){difference=a[i]+carry;carry=Math.floor(difference/base);difference%=base;r[i]=difference<0?difference+base:difference}r=arrayToSmall(r);if(typeof r===\"number\"){if(sign)r=-r;return new SmallInteger(r)}return new BigInteger(r,sign)}BigInteger.prototype.subtract=function(v){var n=parseValue(v);if(this.sign!==n.sign){return this.add(n.negate())}var a=this.value,b=n.value;if(n.isSmall)return subtractSmall(a,Math.abs(b),this.sign);return subtractAny(a,b,this.sign)};BigInteger.prototype.minus=BigInteger.prototype.subtract;SmallInteger.prototype.subtract=function(v){var n=parseValue(v);var a=this.value;if(a<0!==n.sign){return this.add(n.negate())}var b=n.value;if(n.isSmall){return new SmallInteger(a-b)}return subtractSmall(b,Math.abs(a),a>=0)};SmallInteger.prototype.minus=SmallInteger.prototype.subtract;NativeBigInt.prototype.subtract=function(v){return new NativeBigInt(this.value-parseValue(v).value)};NativeBigInt.prototype.minus=NativeBigInt.prototype.subtract;BigInteger.prototype.negate=function(){return new BigInteger(this.value,!this.sign)};SmallInteger.prototype.negate=function(){var sign=this.sign;var small=new SmallInteger(-this.value);small.sign=!sign;return small};NativeBigInt.prototype.negate=function(){return new NativeBigInt(-this.value)};BigInteger.prototype.abs=function(){return new BigInteger(this.value,false)};SmallInteger.prototype.abs=function(){return new SmallInteger(Math.abs(this.value))};NativeBigInt.prototype.abs=function(){return new NativeBigInt(this.value>=0?this.value:-this.value)};function multiplyLong(a,b){var a_l=a.length,b_l=b.length,l=a_l+b_l,r=createArray(l),base=BASE,product,carry,i,a_i,b_j;for(i=0;i<a_l;++i){a_i=a[i];for(var j=0;j<b_l;++j){b_j=b[j];product=a_i*b_j+r[i+j];carry=Math.floor(product/base);r[i+j]=product-carry*base;r[i+j+1]+=carry}}trim(r);return r}function multiplySmall(a,b){var l=a.length,r=new Array(l),base=BASE,carry=0,product,i;for(i=0;i<l;i++){product=a[i]*b+carry;carry=Math.floor(product/base);r[i]=product-carry*base}while(carry>0){r[i++]=carry%base;carry=Math.floor(carry/base)}return r}function shiftLeft(x,n){var r=[];while(n-- >0)r.push(0);return r.concat(x)}function multiplyKaratsuba(x,y){var n=Math.max(x.length,y.length);if(n<=30)return multiplyLong(x,y);n=Math.ceil(n/2);var b=x.slice(n),a=x.slice(0,n),d=y.slice(n),c=y.slice(0,n);var ac=multiplyKaratsuba(a,c),bd=multiplyKaratsuba(b,d),abcd=multiplyKaratsuba(addAny(a,b),addAny(c,d));var product=addAny(addAny(ac,shiftLeft(subtract(subtract(abcd,ac),bd),n)),shiftLeft(bd,2*n));trim(product);return product}function useKaratsuba(l1,l2){return-.012*l1-.012*l2+15e-6*l1*l2>0}BigInteger.prototype.multiply=function(v){var n=parseValue(v),a=this.value,b=n.value,sign=this.sign!==n.sign,abs;if(n.isSmall){if(b===0)return Integer[0];if(b===1)return this;if(b===-1)return this.negate();abs=Math.abs(b);if(abs<BASE){return new BigInteger(multiplySmall(a,abs),sign)}b=smallToArray(abs)}if(useKaratsuba(a.length,b.length))return new BigInteger(multiplyKaratsuba(a,b),sign);return new BigInteger(multiplyLong(a,b),sign)};BigInteger.prototype.times=BigInteger.prototype.multiply;function multiplySmallAndArray(a,b,sign){if(a<BASE){return new BigInteger(multiplySmall(b,a),sign)}return new BigInteger(multiplyLong(b,smallToArray(a)),sign)}SmallInteger.prototype._multiplyBySmall=function(a){if(isPrecise(a.value*this.value)){return new SmallInteger(a.value*this.value)}return multiplySmallAndArray(Math.abs(a.value),smallToArray(Math.abs(this.value)),this.sign!==a.sign)};BigInteger.prototype._multiplyBySmall=function(a){if(a.value===0)return Integer[0];if(a.value===1)return this;if(a.value===-1)return this.negate();return multiplySmallAndArray(Math.abs(a.value),this.value,this.sign!==a.sign)};SmallInteger.prototype.multiply=function(v){return parseValue(v)._multiplyBySmall(this)};SmallInteger.prototype.times=SmallInteger.prototype.multiply;NativeBigInt.prototype.multiply=function(v){return new NativeBigInt(this.value*parseValue(v).value)};NativeBigInt.prototype.times=NativeBigInt.prototype.multiply;function square(a){var l=a.length,r=createArray(l+l),base=BASE,product,carry,i,a_i,a_j;for(i=0;i<l;i++){a_i=a[i];carry=0-a_i*a_i;for(var j=i;j<l;j++){a_j=a[j];product=2*(a_i*a_j)+r[i+j]+carry;carry=Math.floor(product/base);r[i+j]=product-carry*base}r[i+l]=carry}trim(r);return r}BigInteger.prototype.square=function(){return new BigInteger(square(this.value),false)};SmallInteger.prototype.square=function(){var value=this.value*this.value;if(isPrecise(value))return new SmallInteger(value);return new BigInteger(square(smallToArray(Math.abs(this.value))),false)};NativeBigInt.prototype.square=function(v){return new NativeBigInt(this.value*this.value)};function divMod1(a,b){var a_l=a.length,b_l=b.length,base=BASE,result=createArray(b.length),divisorMostSignificantDigit=b[b_l-1],lambda=Math.ceil(base/(2*divisorMostSignificantDigit)),remainder=multiplySmall(a,lambda),divisor=multiplySmall(b,lambda),quotientDigit,shift,carry,borrow,i,l,q;if(remainder.length<=a_l)remainder.push(0);divisor.push(0);divisorMostSignificantDigit=divisor[b_l-1];for(shift=a_l-b_l;shift>=0;shift--){quotientDigit=base-1;if(remainder[shift+b_l]!==divisorMostSignificantDigit){quotientDigit=Math.floor((remainder[shift+b_l]*base+remainder[shift+b_l-1])/divisorMostSignificantDigit)}carry=0;borrow=0;l=divisor.length;for(i=0;i<l;i++){carry+=quotientDigit*divisor[i];q=Math.floor(carry/base);borrow+=remainder[shift+i]-(carry-q*base);carry=q;if(borrow<0){remainder[shift+i]=borrow+base;borrow=-1}else{remainder[shift+i]=borrow;borrow=0}}while(borrow!==0){quotientDigit-=1;carry=0;for(i=0;i<l;i++){carry+=remainder[shift+i]-base+divisor[i];if(carry<0){remainder[shift+i]=carry+base;carry=0}else{remainder[shift+i]=carry;carry=1}}borrow+=carry}result[shift]=quotientDigit}remainder=divModSmall(remainder,lambda)[0];return[arrayToSmall(result),arrayToSmall(remainder)]}function divMod2(a,b){var a_l=a.length,b_l=b.length,result=[],part=[],base=BASE,guess,xlen,highx,highy,check;while(a_l){part.unshift(a[--a_l]);trim(part);if(compareAbs(part,b)<0){result.push(0);continue}xlen=part.length;highx=part[xlen-1]*base+part[xlen-2];highy=b[b_l-1]*base+b[b_l-2];if(xlen>b_l){highx=(highx+1)*base}guess=Math.ceil(highx/highy);do{check=multiplySmall(b,guess);if(compareAbs(check,part)<=0)break;guess--}while(guess);result.push(guess);part=subtract(part,check)}result.reverse();return[arrayToSmall(result),arrayToSmall(part)]}function divModSmall(value,lambda){var length=value.length,quotient=createArray(length),base=BASE,i,q,remainder,divisor;remainder=0;for(i=length-1;i>=0;--i){divisor=remainder*base+value[i];q=truncate(divisor/lambda);remainder=divisor-q*lambda;quotient[i]=q|0}return[quotient,remainder|0]}function divModAny(self,v){var value,n=parseValue(v);if(supportsNativeBigInt){return[new NativeBigInt(self.value/n.value),new NativeBigInt(self.value%n.value)]}var a=self.value,b=n.value;var quotient;if(b===0)throw new Error(\"Cannot divide by zero\");if(self.isSmall){if(n.isSmall){return[new SmallInteger(truncate(a/b)),new SmallInteger(a%b)]}return[Integer[0],self]}if(n.isSmall){if(b===1)return[self,Integer[0]];if(b==-1)return[self.negate(),Integer[0]];var abs=Math.abs(b);if(abs<BASE){value=divModSmall(a,abs);quotient=arrayToSmall(value[0]);var remainder=value[1];if(self.sign)remainder=-remainder;if(typeof quotient===\"number\"){if(self.sign!==n.sign)quotient=-quotient;return[new SmallInteger(quotient),new SmallInteger(remainder)]}return[new BigInteger(quotient,self.sign!==n.sign),new SmallInteger(remainder)]}b=smallToArray(abs)}var comparison=compareAbs(a,b);if(comparison===-1)return[Integer[0],self];if(comparison===0)return[Integer[self.sign===n.sign?1:-1],Integer[0]];if(a.length+b.length<=200)value=divMod1(a,b);else value=divMod2(a,b);quotient=value[0];var qSign=self.sign!==n.sign,mod=value[1],mSign=self.sign;if(typeof quotient===\"number\"){if(qSign)quotient=-quotient;quotient=new SmallInteger(quotient)}else quotient=new BigInteger(quotient,qSign);if(typeof mod===\"number\"){if(mSign)mod=-mod;mod=new SmallInteger(mod)}else mod=new BigInteger(mod,mSign);return[quotient,mod]}BigInteger.prototype.divmod=function(v){var result=divModAny(this,v);return{quotient:result[0],remainder:result[1]}};NativeBigInt.prototype.divmod=SmallInteger.prototype.divmod=BigInteger.prototype.divmod;BigInteger.prototype.divide=function(v){return divModAny(this,v)[0]};NativeBigInt.prototype.over=NativeBigInt.prototype.divide=function(v){return new NativeBigInt(this.value/parseValue(v).value)};SmallInteger.prototype.over=SmallInteger.prototype.divide=BigInteger.prototype.over=BigInteger.prototype.divide;BigInteger.prototype.mod=function(v){return divModAny(this,v)[1]};NativeBigInt.prototype.mod=NativeBigInt.prototype.remainder=function(v){return new NativeBigInt(this.value%parseValue(v).value)};SmallInteger.prototype.remainder=SmallInteger.prototype.mod=BigInteger.prototype.remainder=BigInteger.prototype.mod;BigInteger.prototype.pow=function(v){var n=parseValue(v),a=this.value,b=n.value,value,x,y;if(b===0)return Integer[1];if(a===0)return Integer[0];if(a===1)return Integer[1];if(a===-1)return n.isEven()?Integer[1]:Integer[-1];if(n.sign){return Integer[0]}if(!n.isSmall)throw new Error(\"The exponent \"+n.toString()+\" is too large.\");if(this.isSmall){if(isPrecise(value=Math.pow(a,b)))return new SmallInteger(truncate(value))}x=this;y=Integer[1];while(true){if(b&1===1){y=y.times(x);--b}if(b===0)break;b/=2;x=x.square()}return y};SmallInteger.prototype.pow=BigInteger.prototype.pow;NativeBigInt.prototype.pow=function(v){var n=parseValue(v);var a=this.value,b=n.value;var _0=BigInt(0),_1=BigInt(1),_2=BigInt(2);if(b===_0)return Integer[1];if(a===_0)return Integer[0];if(a===_1)return Integer[1];if(a===BigInt(-1))return n.isEven()?Integer[1]:Integer[-1];if(n.isNegative())return new NativeBigInt(_0);var x=this;var y=Integer[1];while(true){if((b&_1)===_1){y=y.times(x);--b}if(b===_0)break;b/=_2;x=x.square()}return y};BigInteger.prototype.modPow=function(exp,mod){exp=parseValue(exp);mod=parseValue(mod);if(mod.isZero())throw new Error(\"Cannot take modPow with modulus 0\");var r=Integer[1],base=this.mod(mod);while(exp.isPositive()){if(base.isZero())return Integer[0];if(exp.isOdd())r=r.multiply(base).mod(mod);exp=exp.divide(2);base=base.square().mod(mod)}return r};NativeBigInt.prototype.modPow=SmallInteger.prototype.modPow=BigInteger.prototype.modPow;function compareAbs(a,b){if(a.length!==b.length){return a.length>b.length?1:-1}for(var i=a.length-1;i>=0;i--){if(a[i]!==b[i])return a[i]>b[i]?1:-1}return 0}BigInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=this.value,b=n.value;if(n.isSmall)return 1;return compareAbs(a,b)};SmallInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=Math.abs(this.value),b=n.value;if(n.isSmall){b=Math.abs(b);return a===b?0:a>b?1:-1}return-1};NativeBigInt.prototype.compareAbs=function(v){var a=this.value;var b=parseValue(v).value;a=a>=0?a:-a;b=b>=0?b:-b;return a===b?0:a>b?1:-1};BigInteger.prototype.compare=function(v){if(v===Infinity){return-1}if(v===-Infinity){return 1}var n=parseValue(v),a=this.value,b=n.value;if(this.sign!==n.sign){return n.sign?1:-1}if(n.isSmall){return this.sign?-1:1}return compareAbs(a,b)*(this.sign?-1:1)};BigInteger.prototype.compareTo=BigInteger.prototype.compare;SmallInteger.prototype.compare=function(v){if(v===Infinity){return-1}if(v===-Infinity){return 1}var n=parseValue(v),a=this.value,b=n.value;if(n.isSmall){return a==b?0:a>b?1:-1}if(a<0!==n.sign){return a<0?-1:1}return a<0?1:-1};SmallInteger.prototype.compareTo=SmallInteger.prototype.compare;NativeBigInt.prototype.compare=function(v){if(v===Infinity){return-1}if(v===-Infinity){return 1}var a=this.value;var b=parseValue(v).value;return a===b?0:a>b?1:-1};NativeBigInt.prototype.compareTo=NativeBigInt.prototype.compare;BigInteger.prototype.equals=function(v){return this.compare(v)===0};NativeBigInt.prototype.eq=NativeBigInt.prototype.equals=SmallInteger.prototype.eq=SmallInteger.prototype.equals=BigInteger.prototype.eq=BigInteger.prototype.equals;BigInteger.prototype.notEquals=function(v){return this.compare(v)!==0};NativeBigInt.prototype.neq=NativeBigInt.prototype.notEquals=SmallInteger.prototype.neq=SmallInteger.prototype.notEquals=BigInteger.prototype.neq=BigInteger.prototype.notEquals;BigInteger.prototype.greater=function(v){return this.compare(v)>0};NativeBigInt.prototype.gt=NativeBigInt.prototype.greater=SmallInteger.prototype.gt=SmallInteger.prototype.greater=BigInteger.prototype.gt=BigInteger.prototype.greater;BigInteger.prototype.lesser=function(v){return this.compare(v)<0};NativeBigInt.prototype.lt=NativeBigInt.prototype.lesser=SmallInteger.prototype.lt=SmallInteger.prototype.lesser=BigInteger.prototype.lt=BigInteger.prototype.lesser;BigInteger.prototype.greaterOrEquals=function(v){return this.compare(v)>=0};NativeBigInt.prototype.geq=NativeBigInt.prototype.greaterOrEquals=SmallInteger.prototype.geq=SmallInteger.prototype.greaterOrEquals=BigInteger.prototype.geq=BigInteger.prototype.greaterOrEquals;BigInteger.prototype.lesserOrEquals=function(v){return this.compare(v)<=0};NativeBigInt.prototype.leq=NativeBigInt.prototype.lesserOrEquals=SmallInteger.prototype.leq=SmallInteger.prototype.lesserOrEquals=BigInteger.prototype.leq=BigInteger.prototype.lesserOrEquals;BigInteger.prototype.isEven=function(){return(this.value[0]&1)===0};SmallInteger.prototype.isEven=function(){return(this.value&1)===0};NativeBigInt.prototype.isEven=function(){return(this.value&BigInt(1))===BigInt(0)};BigInteger.prototype.isOdd=function(){return(this.value[0]&1)===1};SmallInteger.prototype.isOdd=function(){return(this.value&1)===1};NativeBigInt.prototype.isOdd=function(){return(this.value&BigInt(1))===BigInt(1)};BigInteger.prototype.isPositive=function(){return!this.sign};SmallInteger.prototype.isPositive=function(){return this.value>0};NativeBigInt.prototype.isPositive=SmallInteger.prototype.isPositive;BigInteger.prototype.isNegative=function(){return this.sign};SmallInteger.prototype.isNegative=function(){return this.value<0};NativeBigInt.prototype.isNegative=SmallInteger.prototype.isNegative;BigInteger.prototype.isUnit=function(){return false};SmallInteger.prototype.isUnit=function(){return Math.abs(this.value)===1};NativeBigInt.prototype.isUnit=function(){return this.abs().value===BigInt(1)};BigInteger.prototype.isZero=function(){return false};SmallInteger.prototype.isZero=function(){return this.value===0};NativeBigInt.prototype.isZero=function(){return this.value===BigInt(0)};BigInteger.prototype.isDivisibleBy=function(v){var n=parseValue(v);if(n.isZero())return false;if(n.isUnit())return true;if(n.compareAbs(2)===0)return this.isEven();return this.mod(n).isZero()};NativeBigInt.prototype.isDivisibleBy=SmallInteger.prototype.isDivisibleBy=BigInteger.prototype.isDivisibleBy;function isBasicPrime(v){var n=v.abs();if(n.isUnit())return false;if(n.equals(2)||n.equals(3)||n.equals(5))return true;if(n.isEven()||n.isDivisibleBy(3)||n.isDivisibleBy(5))return false;if(n.lesser(49))return true}function millerRabinTest(n,a){var nPrev=n.prev(),b=nPrev,r=0,d,t,i,x;while(b.isEven())b=b.divide(2),r++;next:for(i=0;i<a.length;i++){if(n.lesser(a[i]))continue;x=bigInt(a[i]).modPow(b,n);if(x.isUnit()||x.equals(nPrev))continue;for(d=r-1;d!=0;d--){x=x.square().mod(n);if(x.isUnit())return false;if(x.equals(nPrev))continue next}return false}return true}BigInteger.prototype.isPrime=function(strict){var isPrime=isBasicPrime(this);if(isPrime!==undefined)return isPrime;var n=this.abs();var bits=n.bitLength();if(bits<=64)return millerRabinTest(n,[2,3,5,7,11,13,17,19,23,29,31,37]);var logN=Math.log(2)*bits.toJSNumber();var t=Math.ceil(strict===true?2*Math.pow(logN,2):logN);for(var a=[],i=0;i<t;i++){a.push(bigInt(i+2))}return millerRabinTest(n,a)};NativeBigInt.prototype.isPrime=SmallInteger.prototype.isPrime=BigInteger.prototype.isPrime;BigInteger.prototype.isProbablePrime=function(iterations){var isPrime=isBasicPrime(this);if(isPrime!==undefined)return isPrime;var n=this.abs();var t=iterations===undefined?5:iterations;for(var a=[],i=0;i<t;i++){a.push(bigInt.randBetween(2,n.minus(2)))}return millerRabinTest(n,a)};NativeBigInt.prototype.isProbablePrime=SmallInteger.prototype.isProbablePrime=BigInteger.prototype.isProbablePrime;BigInteger.prototype.modInv=function(n){var t=bigInt.zero,newT=bigInt.one,r=parseValue(n),newR=this.abs(),q,lastT,lastR;while(!newR.isZero()){q=r.divide(newR);lastT=t;lastR=r;t=newT;r=newR;newT=lastT.subtract(q.multiply(newT));newR=lastR.subtract(q.multiply(newR))}if(!r.isUnit())throw new Error(this.toString()+\" and \"+n.toString()+\" are not co-prime\");if(t.compare(0)===-1){t=t.add(n)}if(this.isNegative()){return t.negate()}return t};NativeBigInt.prototype.modInv=SmallInteger.prototype.modInv=BigInteger.prototype.modInv;BigInteger.prototype.next=function(){var value=this.value;if(this.sign){return subtractSmall(value,1,this.sign)}return new BigInteger(addSmall(value,1),this.sign)};SmallInteger.prototype.next=function(){var value=this.value;if(value+1<MAX_INT)return new SmallInteger(value+1);return new BigInteger(MAX_INT_ARR,false)};NativeBigInt.prototype.next=function(){return new NativeBigInt(this.value+BigInt(1))};BigInteger.prototype.prev=function(){var value=this.value;if(this.sign){return new BigInteger(addSmall(value,1),true)}return subtractSmall(value,1,this.sign)};SmallInteger.prototype.prev=function(){var value=this.value;if(value-1>-MAX_INT)return new SmallInteger(value-1);return new BigInteger(MAX_INT_ARR,true)};NativeBigInt.prototype.prev=function(){return new NativeBigInt(this.value-BigInt(1))};var powersOfTwo=[1];while(2*powersOfTwo[powersOfTwo.length-1]<=BASE)powersOfTwo.push(2*powersOfTwo[powersOfTwo.length-1]);var powers2Length=powersOfTwo.length,highestPower2=powersOfTwo[powers2Length-1];function shift_isSmall(n){return Math.abs(n)<=BASE}BigInteger.prototype.shiftLeft=function(v){var n=parseValue(v).toJSNumber();if(!shift_isSmall(n)){throw new Error(String(n)+\" is too large for shifting.\")}if(n<0)return this.shiftRight(-n);var result=this;if(result.isZero())return result;while(n>=powers2Length){result=result.multiply(highestPower2);n-=powers2Length-1}return result.multiply(powersOfTwo[n])};NativeBigInt.prototype.shiftLeft=SmallInteger.prototype.shiftLeft=BigInteger.prototype.shiftLeft;BigInteger.prototype.shiftRight=function(v){var remQuo;var n=parseValue(v).toJSNumber();if(!shift_isSmall(n)){throw new Error(String(n)+\" is too large for shifting.\")}if(n<0)return this.shiftLeft(-n);var result=this;while(n>=powers2Length){if(result.isZero()||result.isNegative()&&result.isUnit())return result;remQuo=divModAny(result,highestPower2);result=remQuo[1].isNegative()?remQuo[0].prev():remQuo[0];n-=powers2Length-1}remQuo=divModAny(result,powersOfTwo[n]);return remQuo[1].isNegative()?remQuo[0].prev():remQuo[0]};NativeBigInt.prototype.shiftRight=SmallInteger.prototype.shiftRight=BigInteger.prototype.shiftRight;function bitwise(x,y,fn){y=parseValue(y);var xSign=x.isNegative(),ySign=y.isNegative();var xRem=xSign?x.not():x,yRem=ySign?y.not():y;var xDigit=0,yDigit=0;var xDivMod=null,yDivMod=null;var result=[];while(!xRem.isZero()||!yRem.isZero()){xDivMod=divModAny(xRem,highestPower2);xDigit=xDivMod[1].toJSNumber();if(xSign){xDigit=highestPower2-1-xDigit}yDivMod=divModAny(yRem,highestPower2);yDigit=yDivMod[1].toJSNumber();if(ySign){yDigit=highestPower2-1-yDigit}xRem=xDivMod[0];yRem=yDivMod[0];result.push(fn(xDigit,yDigit))}var sum=fn(xSign?1:0,ySign?1:0)!==0?bigInt(-1):bigInt(0);for(var i=result.length-1;i>=0;i-=1){sum=sum.multiply(highestPower2).add(bigInt(result[i]))}return sum}BigInteger.prototype.not=function(){return this.negate().prev()};NativeBigInt.prototype.not=SmallInteger.prototype.not=BigInteger.prototype.not;BigInteger.prototype.and=function(n){return bitwise(this,n,function(a,b){return a&b})};NativeBigInt.prototype.and=SmallInteger.prototype.and=BigInteger.prototype.and;BigInteger.prototype.or=function(n){return bitwise(this,n,function(a,b){return a|b})};NativeBigInt.prototype.or=SmallInteger.prototype.or=BigInteger.prototype.or;BigInteger.prototype.xor=function(n){return bitwise(this,n,function(a,b){return a^b})};NativeBigInt.prototype.xor=SmallInteger.prototype.xor=BigInteger.prototype.xor;var LOBMASK_I=1<<30,LOBMASK_BI=(BASE&-BASE)*(BASE&-BASE)|LOBMASK_I;function roughLOB(n){var v=n.value,x=typeof v===\"number\"?v|LOBMASK_I:typeof v===\"bigint\"?v|BigInt(LOBMASK_I):v[0]+v[1]*BASE|LOBMASK_BI;return x&-x}function integerLogarithm(value,base){if(base.compareTo(value)<=0){var tmp=integerLogarithm(value,base.square(base));var p=tmp.p;var e=tmp.e;var t=p.multiply(base);return t.compareTo(value)<=0?{p:t,e:e*2+1}:{p:p,e:e*2}}return{p:bigInt(1),e:0}}BigInteger.prototype.bitLength=function(){var n=this;if(n.compareTo(bigInt(0))<0){n=n.negate().subtract(bigInt(1))}if(n.compareTo(bigInt(0))===0){return bigInt(0)}return bigInt(integerLogarithm(n,bigInt(2)).e).add(bigInt(1))};NativeBigInt.prototype.bitLength=SmallInteger.prototype.bitLength=BigInteger.prototype.bitLength;function max(a,b){a=parseValue(a);b=parseValue(b);return a.greater(b)?a:b}function min(a,b){a=parseValue(a);b=parseValue(b);return a.lesser(b)?a:b}function gcd(a,b){a=parseValue(a).abs();b=parseValue(b).abs();if(a.equals(b))return a;if(a.isZero())return b;if(b.isZero())return a;var c=Integer[1],d,t;while(a.isEven()&&b.isEven()){d=min(roughLOB(a),roughLOB(b));a=a.divide(d);b=b.divide(d);c=c.multiply(d)}while(a.isEven()){a=a.divide(roughLOB(a))}do{while(b.isEven()){b=b.divide(roughLOB(b))}if(a.greater(b)){t=b;b=a;a=t}b=b.subtract(a)}while(!b.isZero());return c.isUnit()?a:a.multiply(c)}function lcm(a,b){a=parseValue(a).abs();b=parseValue(b).abs();return a.divide(gcd(a,b)).multiply(b)}function randBetween(a,b){a=parseValue(a);b=parseValue(b);var low=min(a,b),high=max(a,b);var range=high.subtract(low).add(1);if(range.isSmall)return low.add(Math.floor(Math.random()*range));var digits=toBase(range,BASE).value;var result=[],restricted=true;for(var i=0;i<digits.length;i++){var top=restricted?digits[i]:BASE;var digit=truncate(Math.random()*top);result.push(digit);if(digit<top)restricted=false}return low.add(Integer.fromArray(result,BASE,false))}var parseBase=function(text,base,alphabet,caseSensitive){alphabet=alphabet||DEFAULT_ALPHABET;text=String(text);if(!caseSensitive){text=text.toLowerCase();alphabet=alphabet.toLowerCase()}var length=text.length;var i;var absBase=Math.abs(base);var alphabetValues={};for(i=0;i<alphabet.length;i++){alphabetValues[alphabet[i]]=i}for(i=0;i<length;i++){var c=text[i];if(c===\"-\")continue;if(c in alphabetValues){if(alphabetValues[c]>=absBase){if(c===\"1\"&&absBase===1)continue;throw new Error(c+\" is not a valid digit in base \"+base+\".\")}}}base=parseValue(base);var digits=[];var isNegative=text[0]===\"-\";for(i=isNegative?1:0;i<text.length;i++){var c=text[i];if(c in alphabetValues)digits.push(parseValue(alphabetValues[c]));else if(c===\"<\"){var start=i;do{i++}while(text[i]!==\">\"&&i<text.length);digits.push(parseValue(text.slice(start+1,i)))}else throw new Error(c+\" is not a valid character\")}return parseBaseFromArray(digits,base,isNegative)};function parseBaseFromArray(digits,base,isNegative){var val=Integer[0],pow=Integer[1],i;for(i=digits.length-1;i>=0;i--){val=val.add(digits[i].times(pow));pow=pow.times(base)}return isNegative?val.negate():val}function stringify(digit,alphabet){alphabet=alphabet||DEFAULT_ALPHABET;if(digit<alphabet.length){return alphabet[digit]}return\"<\"+digit+\">\"}function toBase(n,base){base=bigInt(base);if(base.isZero()){if(n.isZero())return{value:[0],isNegative:false};throw new Error(\"Cannot convert nonzero numbers to base 0.\")}if(base.equals(-1)){if(n.isZero())return{value:[0],isNegative:false};if(n.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-n.toJSNumber())).map(Array.prototype.valueOf,[1,0])),isNegative:false};var arr=Array.apply(null,Array(n.toJSNumber()-1)).map(Array.prototype.valueOf,[0,1]);arr.unshift([1]);return{value:[].concat.apply([],arr),isNegative:false}}var neg=false;if(n.isNegative()&&base.isPositive()){neg=true;n=n.abs()}if(base.isUnit()){if(n.isZero())return{value:[0],isNegative:false};return{value:Array.apply(null,Array(n.toJSNumber())).map(Number.prototype.valueOf,1),isNegative:neg}}var out=[];var left=n,divmod;while(left.isNegative()||left.compareAbs(base)>=0){divmod=left.divmod(base);left=divmod.quotient;var digit=divmod.remainder;if(digit.isNegative()){digit=base.minus(digit).abs();left=left.next()}out.push(digit.toJSNumber())}out.push(left.toJSNumber());return{value:out.reverse(),isNegative:neg}}function toBaseString(n,base,alphabet){var arr=toBase(n,base);return(arr.isNegative?\"-\":\"\")+arr.value.map(function(x){return stringify(x,alphabet)}).join(\"\")}BigInteger.prototype.toArray=function(radix){return toBase(this,radix)};SmallInteger.prototype.toArray=function(radix){return toBase(this,radix)};NativeBigInt.prototype.toArray=function(radix){return toBase(this,radix)};BigInteger.prototype.toString=function(radix,alphabet){if(radix===undefined)radix=10;if(radix!==10)return toBaseString(this,radix,alphabet);var v=this.value,l=v.length,str=String(v[--l]),zeros=\"0000000\",digit;while(--l>=0){digit=String(v[l]);str+=zeros.slice(digit.length)+digit}var sign=this.sign?\"-\":\"\";return sign+str};SmallInteger.prototype.toString=function(radix,alphabet){if(radix===undefined)radix=10;if(radix!=10)return toBaseString(this,radix,alphabet);return String(this.value)};NativeBigInt.prototype.toString=SmallInteger.prototype.toString;NativeBigInt.prototype.toJSON=BigInteger.prototype.toJSON=SmallInteger.prototype.toJSON=function(){return this.toString()};BigInteger.prototype.valueOf=function(){return parseInt(this.toString(),10)};BigInteger.prototype.toJSNumber=BigInteger.prototype.valueOf;SmallInteger.prototype.valueOf=function(){return this.value};SmallInteger.prototype.toJSNumber=SmallInteger.prototype.valueOf;NativeBigInt.prototype.valueOf=NativeBigInt.prototype.toJSNumber=function(){return parseInt(this.toString(),10)};function parseStringValue(v){if(isPrecise(+v)){var x=+v;if(x===truncate(x))return supportsNativeBigInt?new NativeBigInt(BigInt(x)):new SmallInteger(x);throw new Error(\"Invalid integer: \"+v)}var sign=v[0]===\"-\";if(sign)v=v.slice(1);var split=v.split(/e/i);if(split.length>2)throw new Error(\"Invalid integer: \"+split.join(\"e\"));if(split.length===2){var exp=split[1];if(exp[0]===\"+\")exp=exp.slice(1);exp=+exp;if(exp!==truncate(exp)||!isPrecise(exp))throw new Error(\"Invalid integer: \"+exp+\" is not a valid exponent.\");var text=split[0];var decimalPlace=text.indexOf(\".\");if(decimalPlace>=0){exp-=text.length-decimalPlace-1;text=text.slice(0,decimalPlace)+text.slice(decimalPlace+1)}if(exp<0)throw new Error(\"Cannot include negative exponent part for integers\");text+=new Array(exp+1).join(\"0\");v=text}var isValid=/^([0-9][0-9]*)$/.test(v);if(!isValid)throw new Error(\"Invalid integer: \"+v);if(supportsNativeBigInt){return new NativeBigInt(BigInt(sign?\"-\"+v:v))}var r=[],max=v.length,l=LOG_BASE,min=max-l;while(max>0){r.push(+v.slice(min,max));min-=l;if(min<0)min=0;max-=l}trim(r);return new BigInteger(r,sign)}function parseNumberValue(v){if(supportsNativeBigInt){return new NativeBigInt(BigInt(v))}if(isPrecise(v)){if(v!==truncate(v))throw new Error(v+\" is not an integer.\");return new SmallInteger(v)}return parseStringValue(v.toString())}function parseValue(v){if(typeof v===\"number\"){return parseNumberValue(v)}if(typeof v===\"string\"){return parseStringValue(v)}if(typeof v===\"bigint\"){return new NativeBigInt(v)}return v}for(var i=0;i<1e3;i++){Integer[i]=parseValue(i);if(i>0)Integer[-i]=parseValue(-i)}Integer.one=Integer[1];Integer.zero=Integer[0];Integer.minusOne=Integer[-1];Integer.max=max;Integer.min=min;Integer.gcd=gcd;Integer.lcm=lcm;Integer.isInstance=function(x){return x instanceof BigInteger||x instanceof SmallInteger||x instanceof NativeBigInt};Integer.randBetween=randBetween;Integer.fromArray=function(digits,base,isNegative){return parseBaseFromArray(digits.map(parseValue),parseValue(base||10),isNegative)};return Integer}();if(typeof module!==\"undefined\"&&module.hasOwnProperty(\"exports\")){module.exports=bigInt}if(typeof define===\"function\"&&define.amd){define(\"big-integer\",[],function(){return bigInt})}","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass ErrorsBase {\n    extend (errors, config) {\n        if (!errors) return;\n\n        let override = config ? config.override : false;\n        let publicOnly = config ? config.publicOnly : false;\n\n\n        for (const err in errors) {\n            if (!errors.hasOwnProperty(err) || (this[err] && !override)) continue;\n            if (publicOnly && errors[err].indexOf('public_') === -1) continue;\n            this[err] = errors[err];\n\n        }\n    }\n}\n\nexport default ErrorsBase;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass EventsBase {\n    extend (events, config) {\n        if (!events) return;\n\n        let override = config ? config.override : false;\n        let publicOnly = config ? config.publicOnly : false;\n\n\n        for (const evt in events) {\n            if (!events.hasOwnProperty(evt) || (this[evt] && !override)) continue;\n            if (publicOnly && events[evt].indexOf('public_') === -1) continue;\n            this[evt] = events[evt];\n\n        }\n    }\n}\n\nexport default EventsBase;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FragmentRequest from '../streaming/vo/FragmentRequest';\n\nfunction MssFragmentInfoController(config) {\n\n    config = config || {};\n\n    let instance,\n        logger,\n        fragmentModel,\n        started,\n        type,\n        loadFragmentTimeout,\n        startTime,\n        startFragmentTime,\n        index;\n\n    const streamProcessor = config.streamProcessor;\n    const baseURLController = config.baseURLController;\n    const debug = config.debug;\n    const controllerType = 'MssFragmentInfoController';\n\n    function setup() {\n        logger = debug.getLogger(instance);\n    }\n\n    function initialize() {\n        type = streamProcessor.getType();\n        fragmentModel = streamProcessor.getFragmentModel();\n\n        started = false;\n        startTime = null;\n        startFragmentTime = null;\n    }\n\n    function start() {\n        if (started) return;\n\n        logger.debug('Start');\n\n        started = true;\n        startTime = new Date().getTime();\n        index = 0;\n\n        loadNextFragmentInfo();\n    }\n\n    function stop() {\n        if (!started) return;\n\n        logger.debug('Stop');\n\n        clearTimeout(loadFragmentTimeout);\n        started = false;\n        startTime = null;\n        startFragmentTime = null;\n    }\n\n    function reset() {\n        stop();\n    }\n\n    function loadNextFragmentInfo() {\n        if (!started) return;\n\n        // Get last segment from SegmentTimeline\n        const representation = getCurrentRepresentation();\n        const manifest = representation.adaptation.period.mpd.manifest;\n        const adaptation = manifest.Period_asArray[representation.adaptation.period.index].AdaptationSet_asArray[representation.adaptation.index];\n        const segments = adaptation.SegmentTemplate.SegmentTimeline.S_asArray;\n        const segment = segments[segments.length - 1];\n\n        // logger.debug('Last fragment time: ' + (segment.t / adaptation.SegmentTemplate.timescale));\n\n        // Generate segment request\n        const request = getRequestForSegment(adaptation, representation, segment);\n\n        // Send segment request\n        requestFragment.call(this, request);\n    }\n\n    function getRequestForSegment(adaptation, representation, segment) {\n        let timescale = adaptation.SegmentTemplate.timescale;\n        let request = new FragmentRequest();\n\n        request.mediaType = type;\n        request.type = 'FragmentInfoSegment';\n        // request.range = segment.mediaRange;\n        request.startTime = segment.t / timescale;\n        request.duration = segment.d / timescale;\n        request.timescale = timescale;\n        // request.availabilityStartTime = segment.availabilityStartTime;\n        // request.availabilityEndTime = segment.availabilityEndTime;\n        // request.wallStartTime = segment.wallStartTime;\n        request.quality = representation.index;\n        request.index = index++;\n        request.mediaInfo = streamProcessor.getMediaInfo();\n        request.adaptationIndex = representation.adaptation.index;\n        request.representationId = representation.id;\n        request.url = baseURLController.resolve(representation.path).url + adaptation.SegmentTemplate.media;\n        request.url = request.url.replace('$Bandwidth$', representation.bandwidth);\n        request.url = request.url.replace('$Time$', segment.tManifest ? segment.tManifest : segment.t);\n        request.url = request.url.replace('/Fragments(', '/FragmentInfo(');\n\n        return request;\n    }\n\n    function getCurrentRepresentation() {\n        const representationController = streamProcessor.getRepresentationController();\n        const representation = representationController.getCurrentRepresentation();\n        return representation;\n    }\n\n    function requestFragment(request) {\n        // logger.debug('Load FragmentInfo for time: ' + request.startTime);\n        if (streamProcessor.getFragmentModel().isFragmentLoadedOrPending(request)) {\n            // We may have reached end of timeline in case of start-over streams\n            logger.debug('End of timeline');\n            stop();\n            return;\n        }\n\n        fragmentModel.executeRequest(request);\n    }\n\n    function fragmentInfoLoaded (e) {\n        if (!started) return;\n\n        const request = e.request;\n        if (!e.response) {\n            logger.error('Load error', request.url);\n            return;\n        }\n\n        let deltaFragmentTime,\n            deltaTime,\n            delay;\n\n        // logger.debug('FragmentInfo loaded: ', request.url);\n\n        if (!startFragmentTime) {\n            startFragmentTime = request.startTime;\n        }\n\n        // Determine delay before requesting next FragmentInfo\n        deltaTime = (new Date().getTime() - startTime) / 1000;\n        deltaFragmentTime = (request.startTime + request.duration) - startFragmentTime;\n        delay = Math.max(0, (deltaFragmentTime - deltaTime));\n\n        // Set timeout for requesting next FragmentInfo\n        clearTimeout(loadFragmentTimeout);\n        loadFragmentTimeout = setTimeout(function () {\n            loadFragmentTimeout = null;\n            loadNextFragmentInfo();\n        }, delay * 1000);\n    }\n\n    function getType() {\n        return type;\n    }\n\n    instance = {\n        initialize: initialize,\n        controllerType: controllerType,\n        start: start,\n        fragmentInfoLoaded: fragmentInfoLoaded,\n        getType: getType,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nMssFragmentInfoController.__dashjs_factory_name = 'MssFragmentInfoController';\nexport default dashjs.FactoryMaker.getClassFactory(MssFragmentInfoController); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport DashJSError from '../streaming/vo/DashJSError';\nimport MssErrors from './errors/MssErrors';\n\nimport Events from '../streaming/MediaPlayerEvents';\n\n/**\n * @module MssFragmentMoofProcessor\n * @ignore\n * @param {Object} config object\n */\nfunction MssFragmentMoofProcessor(config) {\n\n    config = config || {};\n    let instance,\n        type,\n        logger;\n    const dashMetrics = config.dashMetrics;\n    const playbackController = config.playbackController;\n    const errorHandler = config.errHandler;\n    const eventBus = config.eventBus;\n    const ISOBoxer = config.ISOBoxer;\n    const debug = config.debug;\n\n    function setup() {\n        logger = debug.getLogger(instance);\n        type = '';\n    }\n\n    function processTfrf(request, tfrf, tfdt, streamProcessor) {\n        const representationController = streamProcessor.getRepresentationController();\n        const representation = representationController.getCurrentRepresentation();\n\n        const manifest = representation.adaptation.period.mpd.manifest;\n        const adaptation = manifest.Period_asArray[representation.adaptation.period.index].AdaptationSet_asArray[representation.adaptation.index];\n        const timescale = adaptation.SegmentTemplate.timescale;\n\n        type = streamProcessor.getType();\n\n        // Process tfrf only for live streams or start-over static streams (timeShiftBufferDepth > 0)\n        if (manifest.type !== 'dynamic' && !manifest.timeShiftBufferDepth) {\n            return;\n        }\n\n        if (!tfrf) {\n            errorHandler.error(new DashJSError(MssErrors.MSS_NO_TFRF_CODE, MssErrors.MSS_NO_TFRF_MESSAGE));\n            return;\n        }\n\n        // Get adaptation's segment timeline (always a SegmentTimeline in Smooth Streaming use case)\n        const segments = adaptation.SegmentTemplate.SegmentTimeline.S;\n        const entries = tfrf.entry;\n        let entry,\n            segmentTime,\n            range;\n        let segment = null;\n        let t = 0;\n        let availabilityStartTime = null;\n\n        if (entries.length === 0) {\n            return;\n        }\n\n        // Consider only first tfrf entry (to avoid pre-condition failure on fragment info requests)\n        entry = entries[0];\n\n        // In case of start-over streams, check if we have reached end of original manifest duration (set in timeShiftBufferDepth)\n        // => then do not update anymore timeline\n        if (manifest.type === 'static') {\n            // Get first segment time\n            segmentTime = segments[0].tManifest ? parseFloat(segments[0].tManifest) : segments[0].t;\n            if (entry.fragment_absolute_time > (segmentTime + (manifest.timeShiftBufferDepth * timescale))) {\n                return;\n            }\n        }\n\n        // logger.debug('entry - t = ', (entry.fragment_absolute_time / timescale));\n\n        // Get last segment time\n        segmentTime = segments[segments.length - 1].tManifest ? parseFloat(segments[segments.length - 1].tManifest) : segments[segments.length - 1].t;\n        // logger.debug('Last segment - t = ', (segmentTime / timescale));\n\n        // Check if we have to append new segment to timeline\n        if (entry.fragment_absolute_time <= segmentTime) {\n            // Update DVR window range => set range end to end time of current segment\n            range = {\n                start: segments[0].t / timescale,\n                end: (tfdt.baseMediaDecodeTime / timescale) + request.duration\n            };\n\n            updateDVR(request.mediaType, range, streamProcessor.getStreamInfo().manifestInfo);\n            return;\n        }\n\n        // logger.debug('Add new segment - t = ', (entry.fragment_absolute_time / timescale));\n        segment = {};\n        segment.t = entry.fragment_absolute_time;\n        segment.d = entry.fragment_duration;\n        // If timestamps starts at 0 relative to 1st segment (dynamic to static) then update segment time\n        if (segments[0].tManifest) {\n            segment.t -= parseFloat(segments[0].tManifest) - segments[0].t;\n            segment.tManifest = entry.fragment_absolute_time;\n        }\n        segments.push(segment);\n\n        // In case of static start-over streams, update content duration\n        if (manifest.type === 'static') {\n            if (type === 'video') {\n                segment = segments[segments.length - 1];\n                var end = (segment.t + segment.d) / timescale;\n                if (end > representation.adaptation.period.duration) {\n                    eventBus.trigger(Events.MANIFEST_VALIDITY_CHANGED, { sender: this, newDuration: end });\n                }\n            }\n            return;\n        }\n        // In case of live streams, update segment timeline according to DVR window\n        else if (manifest.timeShiftBufferDepth && manifest.timeShiftBufferDepth > 0) {\n            // Get timestamp of the last segment\n            segment = segments[segments.length - 1];\n            t = segment.t;\n\n            // Determine the segments' availability start time\n            availabilityStartTime = Math.round((t - (manifest.timeShiftBufferDepth * timescale)) / timescale);\n\n            // Remove segments prior to availability start time\n            segment = segments[0];\n            while (Math.round(segment.t / timescale) < availabilityStartTime) {\n                // logger.debug('Remove segment  - t = ' + (segment.t / timescale));\n                segments.splice(0, 1);\n                segment = segments[0];\n            }\n\n            // Update DVR window range => set range end to end time of current segment\n            range = {\n                start: segments[0].t / timescale,\n                end: (tfdt.baseMediaDecodeTime / timescale) + request.duration\n            };\n\n            updateDVR(type, range, streamProcessor.getStreamInfo().manifestInfo);\n        }\n\n        representationController.updateRepresentation(representation, true);\n    }\n\n    function updateDVR(type, range, manifestInfo) {\n        const dvrInfos = dashMetrics.getCurrentDVRInfo(type);\n        if (!dvrInfos || (range.end > dvrInfos.range.end)) {\n            logger.debug('Update DVR range: [' + range.start + ' - ' + range.end + ']');\n            dashMetrics.addDVRInfo(type, playbackController.getTime(), manifestInfo, range);\n        }\n    }\n\n    // This function returns the offset of the 1st byte of a child box within a container box\n    function getBoxOffset(parent, type) {\n        let offset = 8;\n        let i = 0;\n\n        for (i = 0; i < parent.boxes.length; i++) {\n            if (parent.boxes[i].type === type) {\n                return offset;\n            }\n            offset += parent.boxes[i].size;\n        }\n        return offset;\n    }\n\n    function convertFragment(e, streamProcessor) {\n        let i;\n\n        // e.request contains request description object\n        // e.response contains fragment bytes\n        const isoFile = ISOBoxer.parseBuffer(e.response);\n        // Update track_Id in tfhd box\n        const tfhd = isoFile.fetch('tfhd');\n        tfhd.track_ID = e.request.mediaInfo.index + 1;\n\n        // Add tfdt box\n        let tfdt = isoFile.fetch('tfdt');\n        const traf = isoFile.fetch('traf');\n        if (tfdt === null) {\n            tfdt = ISOBoxer.createFullBox('tfdt', traf, tfhd);\n            tfdt.version = 1;\n            tfdt.flags = 0;\n            tfdt.baseMediaDecodeTime = Math.floor(e.request.startTime * e.request.timescale);\n        }\n\n        const trun = isoFile.fetch('trun');\n\n        // Process tfxd boxes\n        // This box provide absolute timestamp but we take the segment start time for tfdt\n        let tfxd = isoFile.fetch('tfxd');\n        if (tfxd) {\n            tfxd._parent.boxes.splice(tfxd._parent.boxes.indexOf(tfxd), 1);\n            tfxd = null;\n        }\n        let tfrf = isoFile.fetch('tfrf');\n        processTfrf(e.request, tfrf, tfdt, streamProcessor);\n        if (tfrf) {\n            tfrf._parent.boxes.splice(tfrf._parent.boxes.indexOf(tfrf), 1);\n            tfrf = null;\n        }\n\n        // If protected content in PIFF1.1 format (sepiff box = Sample Encryption PIFF)\n        // => convert sepiff box it into a senc box\n        // => create saio and saiz boxes (if not already present)\n        const sepiff = isoFile.fetch('sepiff');\n        if (sepiff !== null) {\n            sepiff.type = 'senc';\n            sepiff.usertype = undefined;\n\n            let saio = isoFile.fetch('saio');\n            if (saio === null) {\n                // Create Sample Auxiliary Information Offsets Box box (saio)\n                saio = ISOBoxer.createFullBox('saio', traf);\n                saio.version = 0;\n                saio.flags = 0;\n                saio.entry_count = 1;\n                saio.offset = [0];\n\n                const saiz = ISOBoxer.createFullBox('saiz', traf);\n                saiz.version = 0;\n                saiz.flags = 0;\n                saiz.sample_count = sepiff.sample_count;\n                saiz.default_sample_info_size = 0;\n                saiz.sample_info_size = [];\n\n                if (sepiff.flags & 0x02) {\n                    // Sub-sample encryption => set sample_info_size for each sample\n                    for (i = 0; i < sepiff.sample_count; i += 1) {\n                        // 10 = 8 (InitializationVector field size) + 2 (subsample_count field size)\n                        // 6 = 2 (BytesOfClearData field size) + 4 (BytesOfEncryptedData field size)\n                        saiz.sample_info_size[i] = 10 + (6 * sepiff.entry[i].NumberOfEntries);\n                    }\n                } else {\n                    // No sub-sample encryption => set default sample_info_size = InitializationVector field size (8)\n                    saiz.default_sample_info_size = 8;\n                }\n            }\n        }\n\n        tfhd.flags &= 0xFFFFFE; // set tfhd.base-data-offset-present to false\n        tfhd.flags |= 0x020000; // set tfhd.default-base-is-moof to true\n        trun.flags |= 0x000001; // set trun.data-offset-present to true\n\n        // Update trun.data_offset field that corresponds to first data byte (inside mdat box)\n        const moof = isoFile.fetch('moof');\n        let length = moof.getLength();\n        trun.data_offset = length + 8;\n\n        // Update saio box offset field according to new senc box offset\n        let saio = isoFile.fetch('saio');\n        if (saio !== null) {\n            let trafPosInMoof = getBoxOffset(moof, 'traf');\n            let sencPosInTraf = getBoxOffset(traf, 'senc');\n            // Set offset from begin fragment to the first IV field in senc box\n            saio.offset[0] = trafPosInMoof + sencPosInTraf + 16; // 16 = box header (12) + sample_count field size (4)\n        }\n\n        // Write transformed/processed fragment into request reponse data\n        e.response = isoFile.write();\n    }\n\n    function updateSegmentList(e, streamProcessor) {\n        // e.request contains request description object\n        // e.response contains fragment bytes\n        if (!e.response) {\n            throw new Error('e.response parameter is missing');\n        }\n\n        const isoFile = ISOBoxer.parseBuffer(e.response);\n        // Update track_Id in tfhd box\n        const tfhd = isoFile.fetch('tfhd');\n        tfhd.track_ID = e.request.mediaInfo.index + 1;\n\n        // Add tfdt box\n        let tfdt = isoFile.fetch('tfdt');\n        let traf = isoFile.fetch('traf');\n        if (tfdt === null) {\n            tfdt = ISOBoxer.createFullBox('tfdt', traf, tfhd);\n            tfdt.version = 1;\n            tfdt.flags = 0;\n            tfdt.baseMediaDecodeTime = Math.floor(e.request.startTime * e.request.timescale);\n        }\n\n        let tfrf = isoFile.fetch('tfrf');\n        processTfrf(e.request, tfrf, tfdt, streamProcessor);\n        if (tfrf) {\n            tfrf._parent.boxes.splice(tfrf._parent.boxes.indexOf(tfrf), 1);\n            tfrf = null;\n        }\n    }\n\n    function getType() {\n        return type;\n    }\n\n    instance = {\n        convertFragment: convertFragment,\n        updateSegmentList: updateSegmentList,\n        getType: getType\n    };\n\n    setup();\n    return instance;\n}\n\nMssFragmentMoofProcessor.__dashjs_factory_name = 'MssFragmentMoofProcessor';\nexport default dashjs.FactoryMaker.getClassFactory(MssFragmentMoofProcessor); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n import MssErrors from './errors/MssErrors';\n\n/**\n * @module MssFragmentMoovProcessor\n * @ignore\n * @param {Object} config object\n */\nfunction MssFragmentMoovProcessor(config) {\n    config = config || {};\n    const NALUTYPE_SPS = 7;\n    const NALUTYPE_PPS = 8;\n    const constants = config.constants;\n    const ISOBoxer = config.ISOBoxer;\n\n    let protectionController = config.protectionController;\n    let instance,\n        period,\n        adaptationSet,\n        representation,\n        contentProtection,\n        timescale,\n        trackId;\n\n    function createFtypBox(isoFile) {\n        let ftyp = ISOBoxer.createBox('ftyp', isoFile);\n        ftyp.major_brand = 'iso6';\n        ftyp.minor_version = 1; // is an informative integer for the minor version of the major brand\n        ftyp.compatible_brands = []; //is a list, to the end of the box, of brands isom, iso6 and msdh\n        ftyp.compatible_brands[0] = 'isom'; // => decimal ASCII value for isom\n        ftyp.compatible_brands[1] = 'iso6'; // => decimal ASCII value for iso6\n        ftyp.compatible_brands[2] = 'msdh'; // => decimal ASCII value for msdh\n\n        return ftyp;\n    }\n\n    function createMoovBox(isoFile) {\n\n        // moov box\n        let moov = ISOBoxer.createBox('moov', isoFile);\n\n        // moov/mvhd\n        createMvhdBox(moov);\n\n        // moov/trak\n        let trak = ISOBoxer.createBox('trak', moov);\n\n        // moov/trak/tkhd\n        createTkhdBox(trak);\n\n        // moov/trak/mdia\n        let mdia = ISOBoxer.createBox('mdia', trak);\n\n        // moov/trak/mdia/mdhd\n        createMdhdBox(mdia);\n\n        // moov/trak/mdia/hdlr\n        createHdlrBox(mdia);\n\n        // moov/trak/mdia/minf\n        let minf = ISOBoxer.createBox('minf', mdia);\n\n        switch (adaptationSet.type) {\n            case constants.VIDEO:\n                // moov/trak/mdia/minf/vmhd\n                createVmhdBox(minf);\n                break;\n            case constants.AUDIO:\n                // moov/trak/mdia/minf/smhd\n                createSmhdBox(minf);\n                break;\n            default:\n                break;\n        }\n\n        // moov/trak/mdia/minf/dinf\n        let dinf = ISOBoxer.createBox('dinf', minf);\n\n        // moov/trak/mdia/minf/dinf/dref\n        createDrefBox(dinf);\n\n        // moov/trak/mdia/minf/stbl\n        let stbl = ISOBoxer.createBox('stbl', minf);\n\n        // Create empty stts, stsc, stco and stsz boxes\n        // Use data field as for codem-isoboxer unknown boxes for setting fields value\n\n        // moov/trak/mdia/minf/stbl/stts\n        let stts = ISOBoxer.createFullBox('stts', stbl);\n        stts._data = [0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, entry_count = 0\n\n        // moov/trak/mdia/minf/stbl/stsc\n        let stsc = ISOBoxer.createFullBox('stsc', stbl);\n        stsc._data = [0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, entry_count = 0\n\n        // moov/trak/mdia/minf/stbl/stco\n        let stco = ISOBoxer.createFullBox('stco', stbl);\n        stco._data = [0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, entry_count = 0\n\n        // moov/trak/mdia/minf/stbl/stsz\n        let stsz = ISOBoxer.createFullBox('stsz', stbl);\n        stsz._data = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, sample_size = 0, sample_count = 0\n\n        // moov/trak/mdia/minf/stbl/stsd\n        createStsdBox(stbl);\n\n        // moov/mvex\n        let mvex = ISOBoxer.createBox('mvex', moov);\n\n        // moov/mvex/trex\n        createTrexBox(mvex);\n\n        if (contentProtection && protectionController) {\n            let supportedKS = protectionController.getSupportedKeySystemsFromContentProtection(contentProtection);\n            createProtectionSystemSpecificHeaderBox(moov, supportedKS);\n        }\n    }\n\n    function createMvhdBox(moov) {\n\n        let mvhd = ISOBoxer.createFullBox('mvhd', moov);\n\n        mvhd.version = 1; // version = 1  in order to have 64bits duration value\n\n        mvhd.creation_time = 0; // the creation time of the presentation => ignore (set to 0)\n        mvhd.modification_time = 0; // the most recent time the presentation was modified => ignore (set to 0)\n        mvhd.timescale = timescale; // the time-scale for the entire presentation => 10000000 for MSS\n        mvhd.duration = Math.round(period.duration * timescale); // the length of the presentation (in the indicated timescale) =>  take duration of period\n        mvhd.rate = 1.0; // 16.16 number, '1.0' = normal playback\n        mvhd.volume = 1.0; // 8.8 number, '1.0' = full volume\n        mvhd.reserved1 = 0;\n        mvhd.reserved2 = [0x0, 0x0];\n        mvhd.matrix = [\n            1, 0, 0, // provides a transformation matrix for the video;\n            0, 1, 0, // (u,v,w) are restricted here to (0,0,1)\n            0, 0, 16384\n        ];\n        mvhd.pre_defined = [0, 0, 0, 0, 0, 0];\n        mvhd.next_track_ID = trackId + 1; // indicates a value to use for the track ID of the next track to be added to this presentation\n\n        return mvhd;\n    }\n\n    function createTkhdBox(trak) {\n\n        let tkhd = ISOBoxer.createFullBox('tkhd', trak);\n\n        tkhd.version = 1; // version = 1  in order to have 64bits duration value\n        tkhd.flags = 0x1 | // Track_enabled (0x000001): Indicates that the track is enabled\n            0x2 | // Track_in_movie (0x000002):  Indicates that the track is used in the presentation\n            0x4; // Track_in_preview (0x000004):  Indicates that the track is used when previewing the presentation\n\n        tkhd.creation_time = 0; // the creation time of the presentation => ignore (set to 0)\n        tkhd.modification_time = 0; // the most recent time the presentation was modified => ignore (set to 0)\n        tkhd.track_ID = trackId; // uniquely identifies this track over the entire life-time of this presentation\n        tkhd.reserved1 = 0;\n        tkhd.duration = Math.round(period.duration * timescale); // the duration of this track (in the timescale indicated in the Movie Header Box) =>  take duration of period\n        tkhd.reserved2 = [0x0, 0x0];\n        tkhd.layer = 0; // specifies the front-to-back ordering of video tracks; tracks with lower numbers are closer to the viewer => 0 since only one video track\n        tkhd.alternate_group = 0; // specifies a group or collection of tracks => ignore\n        tkhd.volume = 1.0; // '1.0' = full volume\n        tkhd.reserved3 = 0;\n        tkhd.matrix = [\n            1, 0, 0, // provides a transformation matrix for the video;\n            0, 1, 0, // (u,v,w) are restricted here to (0,0,1)\n            0, 0, 16384\n        ];\n        tkhd.width = representation.width; // visual presentation width\n        tkhd.height = representation.height; // visual presentation height\n\n        return tkhd;\n    }\n\n    function createMdhdBox(mdia) {\n\n        let mdhd = ISOBoxer.createFullBox('mdhd', mdia);\n\n        mdhd.version = 1; // version = 1  in order to have 64bits duration value\n\n        mdhd.creation_time = 0; // the creation time of the presentation => ignore (set to 0)\n        mdhd.modification_time = 0; // the most recent time the presentation was modified => ignore (set to 0)\n        mdhd.timescale = timescale; // the time-scale for the entire presentation\n        mdhd.duration = Math.round(period.duration * timescale); // the duration of this media (in the scale of the timescale). If the duration cannot be determined then duration is set to all 1s.\n        mdhd.language = adaptationSet.lang || 'und'; // declares the language code for this media (see getLanguageCode())\n        mdhd.pre_defined = 0;\n\n        return mdhd;\n    }\n\n    function createHdlrBox(mdia) {\n\n        let hdlr = ISOBoxer.createFullBox('hdlr', mdia);\n\n        hdlr.pre_defined = 0;\n        switch (adaptationSet.type) {\n            case constants.VIDEO:\n                hdlr.handler_type = 'vide';\n                break;\n            case constants.AUDIO:\n                hdlr.handler_type = 'soun';\n                break;\n            default:\n                hdlr.handler_type = 'meta';\n                break;\n        }\n        hdlr.name = representation.id;\n        hdlr.reserved = [0, 0, 0];\n\n        return hdlr;\n    }\n\n    function createVmhdBox(minf) {\n\n        let vmhd = ISOBoxer.createFullBox('vmhd', minf);\n\n        vmhd.flags = 1;\n\n        vmhd.graphicsmode = 0; // specifies a composition mode for this video track, from the following enumerated set, which may be extended by derived specifications: copy = 0 copy over the existing image\n        vmhd.opcolor = [0, 0, 0]; // is a set of 3 colour values (red, green, blue) available for use by graphics modes\n\n        return vmhd;\n    }\n\n    function createSmhdBox(minf) {\n\n        let smhd = ISOBoxer.createFullBox('smhd', minf);\n\n        smhd.flags = 1;\n\n        smhd.balance = 0; // is a fixed-point 8.8 number that places mono audio tracks in a stereo space; 0 is centre (the normal value); full left is -1.0 and full right is 1.0.\n        smhd.reserved = 0;\n\n        return smhd;\n    }\n\n    function createDrefBox(dinf) {\n\n        let dref = ISOBoxer.createFullBox('dref', dinf);\n\n        dref.entry_count = 1;\n        dref.entries = [];\n\n        let url = ISOBoxer.createFullBox('url ', dref, false);\n        url.location = '';\n        url.flags = 1;\n\n        dref.entries.push(url);\n\n        return dref;\n    }\n\n    function createStsdBox(stbl) {\n\n        let stsd = ISOBoxer.createFullBox('stsd', stbl);\n\n        stsd.entries = [];\n        switch (adaptationSet.type) {\n            case constants.VIDEO:\n            case constants.AUDIO:\n                stsd.entries.push(createSampleEntry(stsd));\n                break;\n            default:\n                break;\n        }\n\n        stsd.entry_count = stsd.entries.length; // is an integer that counts the actual entries\n        return stsd;\n    }\n\n    function createSampleEntry(stsd) {\n        let codec = representation.codecs.substring(0, representation.codecs.indexOf('.'));\n\n        switch (codec) {\n            case 'avc1':\n                return createAVCVisualSampleEntry(stsd, codec);\n            case 'mp4a':\n                return createMP4AudioSampleEntry(stsd, codec);\n            default:\n                throw {\n                    code: MssErrors.MSS_UNSUPPORTED_CODEC_CODE,\n                    message: MssErrors.MSS_UNSUPPORTED_CODEC_MESSAGE,\n                    data: {\n                        codec: codec\n                    }\n                };\n        }\n    }\n\n    function createAVCVisualSampleEntry(stsd, codec) {\n        let avc1;\n\n        if (contentProtection) {\n            avc1 = ISOBoxer.createBox('encv', stsd, false);\n        } else {\n            avc1 = ISOBoxer.createBox('avc1', stsd, false);\n        }\n\n        // SampleEntry fields\n        avc1.reserved1 = [0x0, 0x0, 0x0, 0x0, 0x0, 0x0];\n        avc1.data_reference_index = 1;\n\n        // VisualSampleEntry fields\n        avc1.pre_defined1 = 0;\n        avc1.reserved2 = 0;\n        avc1.pre_defined2 = [0, 0, 0];\n        avc1.height = representation.height;\n        avc1.width = representation.width;\n        avc1.horizresolution = 72; // 72 dpi\n        avc1.vertresolution = 72; // 72 dpi\n        avc1.reserved3 = 0;\n        avc1.frame_count = 1; // 1 compressed video frame per sample\n        avc1.compressorname = [\n            0x0A, 0x41, 0x56, 0x43, 0x20, 0x43, 0x6F, 0x64, // = 'AVC Coding';\n            0x69, 0x6E, 0x67, 0x00, 0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\n        ];\n        avc1.depth = 0x0018; // 0x0018 – images are in colour with no alpha.\n        avc1.pre_defined3 = 65535;\n        avc1.config = createAVC1ConfigurationRecord();\n        if (contentProtection) {\n            // Create and add Protection Scheme Info Box\n            let sinf = ISOBoxer.createBox('sinf', avc1);\n\n            // Create and add Original Format Box => indicate codec type of the encrypted content\n            createOriginalFormatBox(sinf, codec);\n\n            // Create and add Scheme Type box\n            createSchemeTypeBox(sinf);\n\n            // Create and add Scheme Information Box\n            createSchemeInformationBox(sinf);\n        }\n\n        return avc1;\n    }\n\n    function createAVC1ConfigurationRecord() {\n\n        let avcC = null;\n        let avcCLength = 15; // length = 15 by default (0 SPS and 0 PPS)\n\n        // First get all SPS and PPS from codecPrivateData\n        let sps = [];\n        let pps = [];\n        let AVCProfileIndication = 0;\n        let AVCLevelIndication = 0;\n        let profile_compatibility = 0;\n\n        let nalus = representation.codecPrivateData.split('00000001').slice(1);\n        let naluBytes, naluType;\n\n        for (let i = 0; i < nalus.length; i++) {\n            naluBytes = hexStringtoBuffer(nalus[i]);\n\n            naluType = naluBytes[0] & 0x1F;\n\n            switch (naluType) {\n                case NALUTYPE_SPS:\n                    sps.push(naluBytes);\n                    avcCLength += naluBytes.length + 2; // 2 = sequenceParameterSetLength field length\n                    break;\n                case NALUTYPE_PPS:\n                    pps.push(naluBytes);\n                    avcCLength += naluBytes.length + 2; // 2 = pictureParameterSetLength field length\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        // Get profile and level from SPS\n        if (sps.length > 0) {\n            AVCProfileIndication = sps[0][1];\n            profile_compatibility = sps[0][2];\n            AVCLevelIndication = sps[0][3];\n        }\n\n        // Generate avcC buffer\n        avcC = new Uint8Array(avcCLength);\n\n        let i = 0;\n        // length\n        avcC[i++] = (avcCLength & 0xFF000000) >> 24;\n        avcC[i++] = (avcCLength & 0x00FF0000) >> 16;\n        avcC[i++] = (avcCLength & 0x0000FF00) >> 8;\n        avcC[i++] = (avcCLength & 0x000000FF);\n        avcC.set([0x61, 0x76, 0x63, 0x43], i); // type = 'avcC'\n        i += 4;\n        avcC[i++] = 1; // configurationVersion = 1\n        avcC[i++] = AVCProfileIndication;\n        avcC[i++] = profile_compatibility;\n        avcC[i++] = AVCLevelIndication;\n        avcC[i++] = 0xFF; // '11111' + lengthSizeMinusOne = 3\n        avcC[i++] = 0xE0 | sps.length; // '111' + numOfSequenceParameterSets\n        for (let n = 0; n < sps.length; n++) {\n            avcC[i++] = (sps[n].length & 0xFF00) >> 8;\n            avcC[i++] = (sps[n].length & 0x00FF);\n            avcC.set(sps[n], i);\n            i += sps[n].length;\n        }\n        avcC[i++] = pps.length; // numOfPictureParameterSets\n        for (let n = 0; n < pps.length; n++) {\n            avcC[i++] = (pps[n].length & 0xFF00) >> 8;\n            avcC[i++] = (pps[n].length & 0x00FF);\n            avcC.set(pps[n], i);\n            i += pps[n].length;\n        }\n\n        return avcC;\n    }\n\n    function createMP4AudioSampleEntry(stsd, codec) {\n        let mp4a;\n\n        if (contentProtection) {\n            mp4a = ISOBoxer.createBox('enca', stsd, false);\n        } else {\n            mp4a = ISOBoxer.createBox('mp4a', stsd, false);\n        }\n\n        // SampleEntry fields\n        mp4a.reserved1 = [0x0, 0x0, 0x0, 0x0, 0x0, 0x0];\n        mp4a.data_reference_index = 1;\n\n        // AudioSampleEntry fields\n        mp4a.reserved2 = [0x0, 0x0];\n        mp4a.channelcount = representation.audioChannels;\n        mp4a.samplesize = 16;\n        mp4a.pre_defined = 0;\n        mp4a.reserved_3 = 0;\n        mp4a.samplerate = representation.audioSamplingRate << 16;\n\n        mp4a.esds = createMPEG4AACESDescriptor();\n\n        if (contentProtection) {\n            // Create and add Protection Scheme Info Box\n            let sinf = ISOBoxer.createBox('sinf', mp4a);\n\n            // Create and add Original Format Box => indicate codec type of the encrypted content\n            createOriginalFormatBox(sinf, codec);\n\n            // Create and add Scheme Type box\n            createSchemeTypeBox(sinf);\n\n            // Create and add Scheme Information Box\n            createSchemeInformationBox(sinf);\n        }\n\n        return mp4a;\n    }\n\n    function createMPEG4AACESDescriptor() {\n\n        // AudioSpecificConfig (see ISO/IEC 14496-3, subpart 1) => corresponds to hex bytes contained in 'codecPrivateData' field\n        let audioSpecificConfig = hexStringtoBuffer(representation.codecPrivateData);\n\n        // ESDS length = esds box header length (= 12) +\n        //               ES_Descriptor header length (= 5) +\n        //               DecoderConfigDescriptor header length (= 15) +\n        //               decoderSpecificInfo header length (= 2) +\n        //               AudioSpecificConfig length (= codecPrivateData length)\n        let esdsLength = 34 + audioSpecificConfig.length;\n        let esds = new Uint8Array(esdsLength);\n\n        let i = 0;\n        // esds box\n        esds[i++] = (esdsLength & 0xFF000000) >> 24; // esds box length\n        esds[i++] = (esdsLength & 0x00FF0000) >> 16; // ''\n        esds[i++] = (esdsLength & 0x0000FF00) >> 8; // ''\n        esds[i++] = (esdsLength & 0x000000FF); // ''\n        esds.set([0x65, 0x73, 0x64, 0x73], i); // type = 'esds'\n        i += 4;\n        esds.set([0, 0, 0, 0], i); // version = 0, flags = 0\n        i += 4;\n        // ES_Descriptor (see ISO/IEC 14496-1 (Systems))\n        esds[i++] = 0x03; // tag = 0x03 (ES_DescrTag)\n        esds[i++] = 20 + audioSpecificConfig.length; // size\n        esds[i++] = (trackId & 0xFF00) >> 8; // ES_ID = track_id\n        esds[i++] = (trackId & 0x00FF); // ''\n        esds[i++] = 0; // flags and streamPriority\n\n        // DecoderConfigDescriptor (see ISO/IEC 14496-1 (Systems))\n        esds[i++] = 0x04; // tag = 0x04 (DecoderConfigDescrTag)\n        esds[i++] = 15 + audioSpecificConfig.length; // size\n        esds[i++] = 0x40; // objectTypeIndication = 0x40 (MPEG-4 AAC)\n        esds[i] = 0x05 << 2; // streamType = 0x05 (Audiostream)\n        esds[i] |= 0 << 1; // upStream = 0\n        esds[i++] |= 1; // reserved = 1\n        esds[i++] = 0xFF; // buffersizeDB = undefined\n        esds[i++] = 0xFF; // ''\n        esds[i++] = 0xFF; // ''\n        esds[i++] = (representation.bandwidth & 0xFF000000) >> 24; // maxBitrate\n        esds[i++] = (representation.bandwidth & 0x00FF0000) >> 16; // ''\n        esds[i++] = (representation.bandwidth & 0x0000FF00) >> 8; // ''\n        esds[i++] = (representation.bandwidth & 0x000000FF); // ''\n        esds[i++] = (representation.bandwidth & 0xFF000000) >> 24; // avgbitrate\n        esds[i++] = (representation.bandwidth & 0x00FF0000) >> 16; // ''\n        esds[i++] = (representation.bandwidth & 0x0000FF00) >> 8; // ''\n        esds[i++] = (representation.bandwidth & 0x000000FF); // ''\n\n        // DecoderSpecificInfo (see ISO/IEC 14496-1 (Systems))\n        esds[i++] = 0x05; // tag = 0x05 (DecSpecificInfoTag)\n        esds[i++] = audioSpecificConfig.length; // size\n        esds.set(audioSpecificConfig, i); // AudioSpecificConfig bytes\n\n        return esds;\n    }\n\n    function createOriginalFormatBox(sinf, codec) {\n        let frma = ISOBoxer.createBox('frma', sinf);\n        frma.data_format = stringToCharCode(codec);\n    }\n\n    function createSchemeTypeBox(sinf) {\n        let schm = ISOBoxer.createFullBox('schm', sinf);\n\n        schm.flags = 0;\n        schm.version = 0;\n        schm.scheme_type = 0x63656E63; // 'cenc' => common encryption\n        schm.scheme_version = 0x00010000; // version set to 0x00010000 (Major version 1, Minor version 0)\n    }\n\n    function createSchemeInformationBox(sinf) {\n        let schi = ISOBoxer.createBox('schi', sinf);\n\n        // Create and add Track Encryption Box\n        createTrackEncryptionBox(schi);\n    }\n\n    function createProtectionSystemSpecificHeaderBox(moov, keySystems) {\n        let pssh_bytes,\n            pssh,\n            i,\n            parsedBuffer;\n\n        for (i = 0; i < keySystems.length; i += 1) {\n            pssh_bytes = keySystems[i].initData;\n            if (pssh_bytes) {\n                parsedBuffer = ISOBoxer.parseBuffer(pssh_bytes);\n                pssh = parsedBuffer.fetch('pssh');\n                if (pssh) {\n                    ISOBoxer.Utils.appendBox(moov, pssh);\n                }\n            }\n        }\n    }\n\n    function createTrackEncryptionBox(schi) {\n        let tenc = ISOBoxer.createFullBox('tenc', schi);\n\n        tenc.flags = 0;\n        tenc.version = 0;\n\n        tenc.default_IsEncrypted = 0x1;\n        tenc.default_IV_size = 8;\n        tenc.default_KID = (contentProtection && (contentProtection.length) > 0 && contentProtection[0]['cenc:default_KID']) ?\n            contentProtection[0]['cenc:default_KID'] : [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0];\n    }\n\n    function createTrexBox(moov) {\n        let trex = ISOBoxer.createFullBox('trex', moov);\n\n        trex.track_ID = trackId;\n        trex.default_sample_description_index = 1;\n        trex.default_sample_duration = 0;\n        trex.default_sample_size = 0;\n        trex.default_sample_flags = 0;\n\n        return trex;\n    }\n\n    function hexStringtoBuffer(str) {\n        let buf = new Uint8Array(str.length / 2);\n        let i;\n\n        for (i = 0; i < str.length / 2; i += 1) {\n            buf[i] = parseInt('' + str[i * 2] + str[i * 2 + 1], 16);\n        }\n        return buf;\n    }\n\n    function stringToCharCode(str) {\n        let code = 0;\n        let i;\n\n        for (i = 0; i < str.length; i += 1) {\n            code |= str.charCodeAt(i) << ((str.length - i - 1) * 8);\n        }\n        return code;\n    }\n\n    function generateMoov(rep) {\n        if (!rep || !rep.adaptation) {\n            return;\n        }\n\n        let isoFile,\n            arrayBuffer;\n\n        representation = rep;\n        adaptationSet = representation.adaptation;\n\n        period = adaptationSet.period;\n        trackId = adaptationSet.index + 1;\n        contentProtection = period.mpd.manifest.Period_asArray[period.index].AdaptationSet_asArray[adaptationSet.index].ContentProtection;\n\n        timescale = period.mpd.manifest.Period_asArray[period.index].AdaptationSet_asArray[adaptationSet.index].SegmentTemplate.timescale;\n\n        isoFile = ISOBoxer.createFile();\n        createFtypBox(isoFile);\n        createMoovBox(isoFile);\n\n        arrayBuffer = isoFile.write();\n\n        return arrayBuffer;\n    }\n\n    instance = {\n        generateMoov: generateMoov\n    };\n\n    return instance;\n}\n\nMssFragmentMoovProcessor.__dashjs_factory_name = 'MssFragmentMoovProcessor';\nexport default dashjs.FactoryMaker.getClassFactory(MssFragmentMoovProcessor); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport MssFragmentMoofProcessor from './MssFragmentMoofProcessor';\nimport MssFragmentMoovProcessor from './MssFragmentMoovProcessor';\n\n// Add specific box processors not provided by codem-isoboxer library\n\nfunction arrayEqual(arr1, arr2) {\n    return (arr1.length === arr2.length) && arr1.every(function (element, index) {\n        return element === arr2[index];\n    });\n}\n\nfunction saioProcessor() {\n    this._procFullBox();\n    if (this.flags & 1) {\n        this._procField('aux_info_type', 'uint', 32);\n        this._procField('aux_info_type_parameter', 'uint', 32);\n    }\n    this._procField('entry_count', 'uint', 32);\n    this._procFieldArray('offset', this.entry_count, 'uint', (this.version === 1) ? 64 : 32);\n}\n\nfunction saizProcessor() {\n    this._procFullBox();\n    if (this.flags & 1) {\n        this._procField('aux_info_type', 'uint', 32);\n        this._procField('aux_info_type_parameter', 'uint', 32);\n    }\n    this._procField('default_sample_info_size', 'uint', 8);\n    this._procField('sample_count', 'uint', 32);\n    if (this.default_sample_info_size === 0) {\n        this._procFieldArray('sample_info_size', this.sample_count, 'uint', 8);\n    }\n}\n\nfunction sencProcessor() {\n    this._procFullBox();\n    this._procField('sample_count', 'uint', 32);\n    if (this.flags & 1) {\n        this._procField('IV_size', 'uint', 8);\n    }\n    this._procEntries('entry', this.sample_count, function (entry) {\n        this._procEntryField(entry, 'InitializationVector', 'data', 8);\n        if (this.flags & 2) {\n            this._procEntryField(entry, 'NumberOfEntries', 'uint', 16);\n            this._procSubEntries(entry, 'clearAndCryptedData', entry.NumberOfEntries, function (clearAndCryptedData) {\n                this._procEntryField(clearAndCryptedData, 'BytesOfClearData', 'uint', 16);\n                this._procEntryField(clearAndCryptedData, 'BytesOfEncryptedData', 'uint', 32);\n            });\n        }\n    });\n}\n\nfunction uuidProcessor() {\n    let tfxdUserType = [0x6D, 0x1D, 0x9B, 0x05, 0x42, 0xD5, 0x44, 0xE6, 0x80, 0xE2, 0x14, 0x1D, 0xAF, 0xF7, 0x57, 0xB2];\n    let tfrfUserType = [0xD4, 0x80, 0x7E, 0xF2, 0xCA, 0x39, 0x46, 0x95, 0x8E, 0x54, 0x26, 0xCB, 0x9E, 0x46, 0xA7, 0x9F];\n    let sepiffUserType = [0xA2, 0x39, 0x4F, 0x52, 0x5A, 0x9B, 0x4f, 0x14, 0xA2, 0x44, 0x6C, 0x42, 0x7C, 0x64, 0x8D, 0xF4];\n\n    if (arrayEqual(this.usertype, tfxdUserType)) {\n        this._procFullBox();\n        if (this._parsing) {\n            this.type = 'tfxd';\n        }\n        this._procField('fragment_absolute_time', 'uint', (this.version === 1) ? 64 : 32);\n        this._procField('fragment_duration', 'uint', (this.version === 1) ? 64 : 32);\n    }\n\n    if (arrayEqual(this.usertype, tfrfUserType)) {\n        this._procFullBox();\n        if (this._parsing) {\n            this.type = 'tfrf';\n        }\n        this._procField('fragment_count', 'uint', 8);\n        this._procEntries('entry', this.fragment_count, function (entry) {\n            this._procEntryField(entry, 'fragment_absolute_time', 'uint', (this.version === 1) ? 64 : 32);\n            this._procEntryField(entry, 'fragment_duration', 'uint', (this.version === 1) ? 64 : 32);\n        });\n    }\n\n    if (arrayEqual(this.usertype, sepiffUserType)) {\n        if (this._parsing) {\n            this.type = 'sepiff';\n        }\n        sencProcessor.call(this);\n    }\n}\n\nfunction MssFragmentProcessor(config) {\n\n    config = config || {};\n    const context = this.context;\n    const dashMetrics = config.dashMetrics;\n    const playbackController = config.playbackController;\n    const eventBus = config.eventBus;\n    const protectionController = config.protectionController;\n    const ISOBoxer = config.ISOBoxer;\n    const debug = config.debug;\n    let mssFragmentMoovProcessor,\n        mssFragmentMoofProcessor,\n        instance;\n\n    function setup() {\n        ISOBoxer.addBoxProcessor('uuid', uuidProcessor);\n        ISOBoxer.addBoxProcessor('saio', saioProcessor);\n        ISOBoxer.addBoxProcessor('saiz', saizProcessor);\n        ISOBoxer.addBoxProcessor('senc', sencProcessor);\n\n        mssFragmentMoovProcessor = MssFragmentMoovProcessor(context).create({\n            protectionController: protectionController,\n            constants: config.constants,\n            ISOBoxer: ISOBoxer});\n\n        mssFragmentMoofProcessor = MssFragmentMoofProcessor(context).create({\n            dashMetrics: dashMetrics,\n            playbackController: playbackController,\n            ISOBoxer: ISOBoxer,\n            eventBus: eventBus,\n            debug: debug,\n            errHandler: config.errHandler\n        });\n    }\n\n    function generateMoov(rep) {\n        return mssFragmentMoovProcessor.generateMoov(rep);\n    }\n\n    function processFragment(e, streamProcessor) {\n        if (!e || !e.request || !e.response) {\n            throw new Error('e parameter is missing or malformed');\n        }\n\n        if (e.request.type === 'MediaSegment') {\n            // MediaSegment => convert to Smooth Streaming moof format\n            mssFragmentMoofProcessor.convertFragment(e, streamProcessor);\n\n        } else if (e.request.type === 'FragmentInfoSegment') {\n            // FragmentInfo (live) => update segments list\n            mssFragmentMoofProcessor.updateSegmentList(e, streamProcessor);\n\n            // Stop event propagation (FragmentInfo must not be added to buffer)\n            e.sender = null;\n        }\n    }\n\n    instance = {\n        generateMoov: generateMoov,\n        processFragment: processFragment\n    };\n\n    setup();\n\n    return instance;\n}\n\nMssFragmentProcessor.__dashjs_factory_name = 'MssFragmentProcessor';\nexport default dashjs.FactoryMaker.getClassFactory(MssFragmentProcessor); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport DataChunk from '../streaming/vo/DataChunk';\nimport FragmentRequest from '../streaming/vo/FragmentRequest';\nimport MssFragmentInfoController from './MssFragmentInfoController';\nimport MssFragmentProcessor from './MssFragmentProcessor';\nimport MssParser from './parser/MssParser';\nimport MssErrors from './errors/MssErrors';\nimport DashJSError from '../streaming/vo/DashJSError';\n\nfunction MssHandler(config) {\n\n    config = config || {};\n    let context = this.context;\n    let eventBus = config.eventBus;\n    const events = config.events;\n    const constants = config.constants;\n    const initSegmentType = config.initSegmentType;\n    let dashMetrics = config.dashMetrics;\n    let playbackController = config.playbackController;\n    let streamController = config.streamController;\n    let protectionController = config.protectionController;\n    let mssFragmentProcessor = MssFragmentProcessor(context).create({\n        dashMetrics: dashMetrics,\n        playbackController: playbackController,\n        protectionController: protectionController,\n        streamController: streamController,\n        eventBus: eventBus,\n        constants: constants,\n        ISOBoxer: config.ISOBoxer,\n        debug: config.debug,\n        errHandler: config.errHandler\n    });\n    let mssParser,\n        fragmentInfoControllers,\n        instance;\n\n    function setup() {\n        fragmentInfoControllers = [];\n    }\n\n    function getStreamProcessor(type) {\n        return streamController.getActiveStreamProcessors().filter(processor => {\n            return processor.getType() === type;\n        })[0];\n    }\n\n    function getFragmentInfoController(type) {\n        return fragmentInfoControllers.filter(controller => {\n            return (controller.getType() === type);\n        })[0];\n    }\n\n    function createDataChunk(request, streamId, endFragment) {\n        const chunk = new DataChunk();\n\n        chunk.streamId = streamId;\n        chunk.mediaInfo = request.mediaInfo;\n        chunk.segmentType = request.type;\n        chunk.start = request.startTime;\n        chunk.duration = request.duration;\n        chunk.end = chunk.start + chunk.duration;\n        chunk.index = request.index;\n        chunk.quality = request.quality;\n        chunk.representationId = request.representationId;\n        chunk.endFragment = endFragment;\n\n        return chunk;\n    }\n\n    function startFragmentInfoControllers() {\n\n        // Create MssFragmentInfoControllers for each StreamProcessor of active stream (only for audio, video or fragmentedText)\n        let processors = streamController.getActiveStreamProcessors();\n        processors.forEach(function (processor) {\n            if (processor.getType() === constants.VIDEO ||\n                processor.getType() === constants.AUDIO ||\n                processor.getType() === constants.FRAGMENTED_TEXT) {\n\n                let fragmentInfoController = getFragmentInfoController(processor.getType());\n                if (!fragmentInfoController) {\n                    fragmentInfoController = MssFragmentInfoController(context).create({\n                        streamProcessor: processor,\n                        baseURLController: config.baseURLController,\n                        debug: config.debug\n                    });\n                    fragmentInfoController.initialize();\n                    fragmentInfoControllers.push(fragmentInfoController);\n                }\n                fragmentInfoController.start();\n            }\n        });\n    }\n\n    function stopFragmentInfoControllers() {\n        fragmentInfoControllers.forEach(c => {\n            c.reset();\n        });\n        fragmentInfoControllers = [];\n    }\n\n    function onInitializationRequested(e) {\n        let streamProcessor = getStreamProcessor(e.mediaType);\n        if (!streamProcessor) return;\n\n        // Create init segment request\n        let representationController = streamProcessor.getRepresentationController();\n        let representation = representationController.getCurrentRepresentation();\n        let mediaInfo = streamProcessor.getMediaInfo();\n\n        let request = new FragmentRequest();\n        request.mediaType = representation.adaptation.type;\n        request.type = initSegmentType;\n        request.range = representation.range;\n        request.quality = representation.index;\n        request.mediaInfo = mediaInfo;\n        request.representationId = representation.id;\n\n        const chunk = createDataChunk(request, mediaInfo.streamInfo.id, e.type !== events.FRAGMENT_LOADING_PROGRESS);\n\n        try {\n            // Generate init segment (moov)\n            chunk.bytes = mssFragmentProcessor.generateMoov(representation);\n\n            // Notify init segment has been loaded\n            eventBus.trigger(events.INIT_FRAGMENT_LOADED, {\n                chunk: chunk\n            });\n        } catch (e) {\n            config.errHandler.error(new DashJSError(e.code, e.message, e.data));\n        }\n\n        // Change the sender value to stop event to be propagated\n        e.sender = null;\n    }\n\n    function onSegmentMediaLoaded(e) {\n        if (e.error)  return;\n\n        let streamProcessor = getStreamProcessor(e.request.mediaType);\n        if (!streamProcessor) return;\n\n        // Process moof to transcode it from MSS to DASH (or to update segment timeline for SegmentInfo fragments)\n        mssFragmentProcessor.processFragment(e, streamProcessor);\n\n        if (e.request.type === 'FragmentInfoSegment') {\n            // If FragmentInfo loaded, then notify corresponding MssFragmentInfoController\n            let fragmentInfoController = getFragmentInfoController(e.request.mediaType);\n            if (fragmentInfoController) {\n                fragmentInfoController.fragmentInfoLoaded(e);\n            }\n        }\n\n        // Start MssFragmentInfoControllers in case of start-over streams\n        let manifestInfo = e.request.mediaInfo.streamInfo.manifestInfo;\n        if (!manifestInfo.isDynamic && manifestInfo.DVRWindowSize !== Infinity) {\n            startFragmentInfoControllers();\n        }\n    }\n\n    function onPlaybackPaused() {\n        if (playbackController.getIsDynamic() && playbackController.getTime() !== 0) {\n            startFragmentInfoControllers();\n        }\n    }\n\n    function onPlaybackSeekAsked() {\n        if (playbackController.getIsDynamic() && playbackController.getTime() !== 0) {\n            startFragmentInfoControllers();\n        }\n    }\n\n    function onTTMLPreProcess(ttmlSubtitles) {\n        if (!ttmlSubtitles || !ttmlSubtitles.data) {\n            return;\n        }\n\n        ttmlSubtitles.data = ttmlSubtitles.data.replace(/http:\\/\\/www.w3.org\\/2006\\/10\\/ttaf1/gi, 'http://www.w3.org/ns/ttml');\n    }\n\n    function registerEvents() {\n        eventBus.on(events.INIT_REQUESTED, onInitializationRequested, instance, dashjs.FactoryMaker.getSingletonFactoryByName(eventBus.getClassName()).EVENT_PRIORITY_HIGH); /* jshint ignore:line */\n        eventBus.on(events.PLAYBACK_PAUSED, onPlaybackPaused, instance, dashjs.FactoryMaker.getSingletonFactoryByName(eventBus.getClassName()).EVENT_PRIORITY_HIGH); /* jshint ignore:line */\n        eventBus.on(events.PLAYBACK_SEEK_ASKED, onPlaybackSeekAsked, instance, dashjs.FactoryMaker.getSingletonFactoryByName(eventBus.getClassName()).EVENT_PRIORITY_HIGH); /* jshint ignore:line */\n        eventBus.on(events.FRAGMENT_LOADING_COMPLETED, onSegmentMediaLoaded, instance, dashjs.FactoryMaker.getSingletonFactoryByName(eventBus.getClassName()).EVENT_PRIORITY_HIGH); /* jshint ignore:line */\n        eventBus.on(events.TTML_TO_PARSE, onTTMLPreProcess, instance);\n    }\n\n    function reset() {\n        eventBus.off(events.INIT_REQUESTED, onInitializationRequested, this);\n        eventBus.off(events.PLAYBACK_PAUSED, onPlaybackPaused, this);\n        eventBus.off(events.PLAYBACK_SEEK_ASKED, onPlaybackSeekAsked, this);\n        eventBus.off(events.FRAGMENT_LOADING_COMPLETED, onSegmentMediaLoaded, this);\n        eventBus.off(events.TTML_TO_PARSE, onTTMLPreProcess, this);\n\n        // Reset FragmentInfoControllers\n        stopFragmentInfoControllers();\n    }\n\n    function createMssParser() {\n        mssParser = MssParser(context).create(config);\n        return mssParser;\n    }\n\n    instance = {\n        reset: reset,\n        createMssParser: createMssParser,\n        registerEvents: registerEvents\n    };\n\n    setup();\n\n    return instance;\n}\n\nMssHandler.__dashjs_factory_name = 'MssHandler';\nconst factory = dashjs.FactoryMaker.getClassFactory(MssHandler); /* jshint ignore:line */\nfactory.errors = MssErrors;\ndashjs.FactoryMaker.updateClassFactory(MssHandler.__dashjs_factory_name, factory); /* jshint ignore:line */\nexport default factory; /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport ErrorsBase from '../../core/errors/ErrorsBase';\n/**\n * @class\n *\n */\nclass MssErrors extends ErrorsBase {\n\tconstructor () {\n        super();\n        /**\n         * Error code returned when no tfrf box is detected in MSS live stream\n         */\n        this.MSS_NO_TFRF_CODE = 200;\n\n        /**\n         * Error code returned when one of the codecs defined in the manifest is not supported\n         */\n        this.MSS_UNSUPPORTED_CODEC_CODE = 201;\n\n        this.MSS_NO_TFRF_MESSAGE = 'Missing tfrf in live media segment';\n        this.MSS_UNSUPPORTED_CODEC_MESSAGE = 'Unsupported codec';\n    }\n}\n\nlet mssErrors = new MssErrors();\nexport default mssErrors;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport MssHandler from './MssHandler';\n\n// Shove both of these into the global scope\nvar context = (typeof window !== 'undefined' && window) || global;\n\nvar dashjs = context.dashjs;\nif (!dashjs) {\n    dashjs = context.dashjs = {};\n}\n\ndashjs.MssHandler = MssHandler;\n\nexport default dashjs;\nexport { MssHandler };\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @module MssParser\n * @ignore\n * @param {Object} config object\n */\n\nimport BigInt from '../../../externals/BigInteger';\n\nfunction MssParser(config) {\n    config = config || {};\n    const BASE64 = config.BASE64;\n    const debug = config.debug;\n    const constants = config.constants;\n    const manifestModel = config.manifestModel;\n    const mediaPlayerModel = config.mediaPlayerModel;\n    const settings = config.settings;\n\n    const DEFAULT_TIME_SCALE = 10000000.0;\n    const SUPPORTED_CODECS = ['AAC', 'AACL', 'AVC1', 'H264', 'TTML', 'DFXP'];\n    // MPEG-DASH Role and accessibility mapping for text tracks according to ETSI TS 103 285 v1.1.1 (section 7.1.2)\n    const ROLE = {\n        'CAPT': 'main',\n        'SUBT': 'alternate',\n        'DESC': 'main'\n    };\n    const ACCESSIBILITY = {\n        'DESC': '2'\n    };\n    const samplingFrequencyIndex = {\n        96000: 0x0,\n        88200: 0x1,\n        64000: 0x2,\n        48000: 0x3,\n        44100: 0x4,\n        32000: 0x5,\n        24000: 0x6,\n        22050: 0x7,\n        16000: 0x8,\n        12000: 0x9,\n        11025: 0xA,\n        8000: 0xB,\n        7350: 0xC\n    };\n    const mimeTypeMap = {\n        'video': 'video/mp4',\n        'audio': 'audio/mp4',\n        'text': 'application/mp4'\n    };\n\n    let instance,\n        logger;\n\n\n    function setup() {\n        logger = debug.getLogger(instance);\n    }\n\n    function mapPeriod(smoothStreamingMedia, timescale) {\n        const period = {};\n        let streams,\n            adaptation;\n\n        // For each StreamIndex node, create an AdaptationSet element\n        period.AdaptationSet_asArray = [];\n        streams = smoothStreamingMedia.getElementsByTagName('StreamIndex');\n        for (let i = 0; i < streams.length; i++) {\n            adaptation = mapAdaptationSet(streams[i], timescale);\n            if (adaptation !== null) {\n                period.AdaptationSet_asArray.push(adaptation);\n            }\n        }\n\n        if (period.AdaptationSet_asArray.length > 0) {\n            period.AdaptationSet = (period.AdaptationSet_asArray.length > 1) ? period.AdaptationSet_asArray : period.AdaptationSet_asArray[0];\n        }\n\n        return period;\n    }\n\n    function mapAdaptationSet(streamIndex, timescale) {\n        const adaptationSet = {};\n        const representations = [];\n        let segmentTemplate;\n        let qualityLevels,\n            representation,\n            segments,\n            i;\n\n        const name = streamIndex.getAttribute('Name');\n        const type = streamIndex.getAttribute('Type');\n        const lang = streamIndex.getAttribute('Language');\n        const fallBackId = lang ? type + '_' + lang : type;\n\n        adaptationSet.id = name || fallBackId;\n        adaptationSet.contentType = type;\n        adaptationSet.lang = lang || 'und';\n        adaptationSet.mimeType = mimeTypeMap[type];\n        adaptationSet.subType = streamIndex.getAttribute('Subtype');\n        adaptationSet.maxWidth = streamIndex.getAttribute('MaxWidth');\n        adaptationSet.maxHeight = streamIndex.getAttribute('MaxHeight');\n\n        // Map text tracks subTypes to MPEG-DASH AdaptationSet role and accessibility (see ETSI TS 103 285 v1.1.1, section 7.1.2)\n        if (adaptationSet.subType) {\n            if (ROLE[adaptationSet.subType]) {\n                let role = {\n                    schemeIdUri: 'urn:mpeg:dash:role:2011',\n                    value: ROLE[adaptationSet.subType]\n                };\n                adaptationSet.Role = role;\n                adaptationSet.Role_asArray = [role];\n            }\n            if (ACCESSIBILITY[adaptationSet.subType]) {\n                let accessibility = {\n                    schemeIdUri: 'urn:tva:metadata:cs:AudioPurposeCS:2007',\n                    value: ACCESSIBILITY[adaptationSet.subType]\n                };\n                adaptationSet.Accessibility = accessibility;\n                adaptationSet.Accessibility_asArray = [accessibility];\n            }\n        }\n\n        // Create a SegmentTemplate with a SegmentTimeline\n        segmentTemplate = mapSegmentTemplate(streamIndex, timescale);\n\n        qualityLevels = streamIndex.getElementsByTagName('QualityLevel');\n        // For each QualityLevel node, create a Representation element\n        for (i = 0; i < qualityLevels.length; i++) {\n            // Propagate BaseURL and mimeType\n            qualityLevels[i].BaseURL = adaptationSet.BaseURL;\n            qualityLevels[i].mimeType = adaptationSet.mimeType;\n\n            // Set quality level id\n            qualityLevels[i].Id = adaptationSet.id + '_' + qualityLevels[i].getAttribute('Index');\n\n            // Map Representation to QualityLevel\n            representation = mapRepresentation(qualityLevels[i], streamIndex);\n\n            if (representation !== null) {\n                // Copy SegmentTemplate into Representation\n                representation.SegmentTemplate = segmentTemplate;\n\n                representations.push(representation);\n            }\n        }\n\n        if (representations.length === 0) {\n            return null;\n        }\n\n        adaptationSet.Representation = (representations.length > 1) ? representations : representations[0];\n        adaptationSet.Representation_asArray = representations;\n\n        // Set SegmentTemplate\n        adaptationSet.SegmentTemplate = segmentTemplate;\n\n        segments = segmentTemplate.SegmentTimeline.S_asArray;\n\n        return adaptationSet;\n    }\n\n    function mapRepresentation(qualityLevel, streamIndex) {\n        const representation = {};\n        const type = streamIndex.getAttribute('Type');\n        let fourCCValue = null;\n\n        representation.id = qualityLevel.Id;\n        representation.bandwidth = parseInt(qualityLevel.getAttribute('Bitrate'), 10);\n        representation.mimeType = qualityLevel.mimeType;\n        representation.width = parseInt(qualityLevel.getAttribute('MaxWidth'), 10);\n        representation.height = parseInt(qualityLevel.getAttribute('MaxHeight'), 10);\n\n        fourCCValue = qualityLevel.getAttribute('FourCC');\n\n        // If FourCC not defined at QualityLevel level, then get it from StreamIndex level\n        if (fourCCValue === null || fourCCValue === '') {\n            fourCCValue = streamIndex.getAttribute('FourCC');\n        }\n\n        // If still not defined (optionnal for audio stream, see https://msdn.microsoft.com/en-us/library/ff728116%28v=vs.95%29.aspx),\n        // then we consider the stream is an audio AAC stream\n        if (fourCCValue === null || fourCCValue === '') {\n            if (type === constants.AUDIO) {\n                fourCCValue = 'AAC';\n            } else if (type === constants.VIDEO) {\n                logger.debug('FourCC is not defined whereas it is required for a QualityLevel element for a StreamIndex of type \"video\"');\n                return null;\n            }\n        }\n\n        // Check if codec is supported\n        if (SUPPORTED_CODECS.indexOf(fourCCValue.toUpperCase()) === -1) {\n            // Do not send warning\n            logger.warn('Codec not supported: ' + fourCCValue);\n            return null;\n        }\n\n        // Get codecs value according to FourCC field\n        if (fourCCValue === 'H264' || fourCCValue === 'AVC1') {\n            representation.codecs = getH264Codec(qualityLevel);\n        } else if (fourCCValue.indexOf('AAC') >= 0) {\n            representation.codecs = getAACCodec(qualityLevel, fourCCValue);\n            representation.audioSamplingRate = parseInt(qualityLevel.getAttribute('SamplingRate'), 10);\n            representation.audioChannels = parseInt(qualityLevel.getAttribute('Channels'), 10);\n        } else if (fourCCValue.indexOf('TTML') || fourCCValue.indexOf('DFXP')) {\n            representation.codecs = constants.STPP;\n        }\n\n        representation.codecPrivateData = '' + qualityLevel.getAttribute('CodecPrivateData');\n        representation.BaseURL = qualityLevel.BaseURL;\n\n        return representation;\n    }\n\n    function getH264Codec(qualityLevel) {\n        let codecPrivateData = qualityLevel.getAttribute('CodecPrivateData').toString();\n        let nalHeader,\n            avcoti;\n\n\n        // Extract from the CodecPrivateData field the hexadecimal representation of the following\n        // three bytes in the sequence parameter set NAL unit.\n        // => Find the SPS nal header\n        nalHeader = /00000001[0-9]7/.exec(codecPrivateData);\n        // => Find the 6 characters after the SPS nalHeader (if it exists)\n        avcoti = nalHeader && nalHeader[0] ? (codecPrivateData.substr(codecPrivateData.indexOf(nalHeader[0]) + 10, 6)) : undefined;\n\n        return 'avc1.' + avcoti;\n    }\n\n    function getAACCodec(qualityLevel, fourCCValue) {\n        const samplingRate = parseInt(qualityLevel.getAttribute('SamplingRate'), 10);\n        let codecPrivateData = qualityLevel.getAttribute('CodecPrivateData').toString();\n        let objectType = 0;\n        let codecPrivateDataHex,\n            arr16,\n            indexFreq,\n            extensionSamplingFrequencyIndex;\n\n        //chrome problem, in implicit AAC HE definition, so when AACH is detected in FourCC\n        //set objectType to 5 => strange, it should be 2\n        if (fourCCValue === 'AACH') {\n            objectType = 0x05;\n        }\n        //if codecPrivateData is empty, build it :\n        if (codecPrivateData === undefined || codecPrivateData === '') {\n            objectType = 0x02; //AAC Main Low Complexity => object Type = 2\n            indexFreq = samplingFrequencyIndex[samplingRate];\n            if (fourCCValue === 'AACH') {\n                // 4 bytes :     XXXXX         XXXX          XXXX             XXXX                  XXXXX      XXX   XXXXXXX\n                //           ' ObjectType' 'Freq Index' 'Channels value'   'Extens Sampl Freq'  'ObjectType'  'GAS' 'alignment = 0'\n                objectType = 0x05; // High Efficiency AAC Profile = object Type = 5 SBR\n                codecPrivateData = new Uint8Array(4);\n                extensionSamplingFrequencyIndex = samplingFrequencyIndex[samplingRate * 2]; // in HE AAC Extension Sampling frequence\n                // equals to SamplingRate*2\n                //Freq Index is present for 3 bits in the first byte, last bit is in the second\n                codecPrivateData[0] = (objectType << 3) | (indexFreq >> 1);\n                codecPrivateData[1] = (indexFreq << 7) | (qualityLevel.Channels << 3) | (extensionSamplingFrequencyIndex >> 1);\n                codecPrivateData[2] = (extensionSamplingFrequencyIndex << 7) | (0x02 << 2); // origin object type equals to 2 => AAC Main Low Complexity\n                codecPrivateData[3] = 0x0; //alignment bits\n\n                arr16 = new Uint16Array(2);\n                arr16[0] = (codecPrivateData[0] << 8) + codecPrivateData[1];\n                arr16[1] = (codecPrivateData[2] << 8) + codecPrivateData[3];\n                //convert decimal to hex value\n                codecPrivateDataHex = arr16[0].toString(16);\n                codecPrivateDataHex = arr16[0].toString(16) + arr16[1].toString(16);\n\n            } else {\n                // 2 bytes :     XXXXX         XXXX          XXXX              XXX\n                //           ' ObjectType' 'Freq Index' 'Channels value'   'GAS = 000'\n                codecPrivateData = new Uint8Array(2);\n                //Freq Index is present for 3 bits in the first byte, last bit is in the second\n                codecPrivateData[0] = (objectType << 3) | (indexFreq >> 1);\n                codecPrivateData[1] = (indexFreq << 7) | (parseInt(qualityLevel.getAttribute('Channels'), 10) << 3);\n                // put the 2 bytes in an 16 bits array\n                arr16 = new Uint16Array(1);\n                arr16[0] = (codecPrivateData[0] << 8) + codecPrivateData[1];\n                //convert decimal to hex value\n                codecPrivateDataHex = arr16[0].toString(16);\n            }\n\n            codecPrivateData = '' + codecPrivateDataHex;\n            codecPrivateData = codecPrivateData.toUpperCase();\n            qualityLevel.setAttribute('CodecPrivateData', codecPrivateData);\n        } else if (objectType === 0) {\n            objectType = (parseInt(codecPrivateData.substr(0, 2), 16) & 0xF8) >> 3;\n        }\n\n        return 'mp4a.40.' + objectType;\n    }\n\n    function mapSegmentTemplate(streamIndex, timescale) {\n        const segmentTemplate = {};\n        let mediaUrl,\n            streamIndexTimeScale,\n            url;\n\n        url = streamIndex.getAttribute('Url');\n        mediaUrl = url ? url.replace('{bitrate}', '$Bandwidth$') : null;\n        mediaUrl = mediaUrl ? mediaUrl.replace('{start time}', '$Time$') : null;\n\n        streamIndexTimeScale = streamIndex.getAttribute('TimeScale');\n        streamIndexTimeScale = streamIndexTimeScale ? parseFloat(streamIndexTimeScale) : timescale;\n\n        segmentTemplate.media = mediaUrl;\n        segmentTemplate.timescale = streamIndexTimeScale;\n\n        segmentTemplate.SegmentTimeline = mapSegmentTimeline(streamIndex, segmentTemplate.timescale);\n\n        return segmentTemplate;\n    }\n\n    function mapSegmentTimeline(streamIndex, timescale) {\n        const segmentTimeline = {};\n        const chunks = streamIndex.getElementsByTagName('c');\n        const segments = [];\n        let segment,\n            prevSegment,\n            tManifest,\n            i,j,r;\n        let duration = 0;\n\n        for (i = 0; i < chunks.length; i++) {\n            segment = {};\n\n            // Get time 't' attribute value\n            tManifest = chunks[i].getAttribute('t');\n\n            // => segment.tManifest = original timestamp value as a string (for constructing the fragment request url, see DashHandler)\n            // => segment.t = number value of timestamp (maybe rounded value, but only for 0.1 microsecond)\n            if (tManifest && BigInt(tManifest).greater(BigInt(Number.MAX_SAFE_INTEGER))) {\n                segment.tManifest = tManifest;\n            }\n            segment.t = parseFloat(tManifest);\n\n            // Get duration 'd' attribute value\n            segment.d = parseFloat(chunks[i].getAttribute('d'));\n\n            // If 't' not defined for first segment then t=0\n            if ((i === 0) && !segment.t) {\n                segment.t = 0;\n            }\n\n            if (i > 0) {\n                prevSegment = segments[segments.length - 1];\n                // Update previous segment duration if not defined\n                if (!prevSegment.d) {\n                    if (prevSegment.tManifest) {\n                        prevSegment.d = BigInt(tManifest).subtract(BigInt(prevSegment.tManifest)).toJSNumber();\n                    } else {\n                        prevSegment.d = segment.t - prevSegment.t;\n                    }\n                    duration += prevSegment.d;\n                }\n                // Set segment absolute timestamp if not set in manifest\n                if (!segment.t) {\n                    if (prevSegment.tManifest) {\n                        segment.tManifest = BigInt(prevSegment.tManifest).add(BigInt(prevSegment.d)).toString();\n                        segment.t = parseFloat(segment.tManifest);\n                    } else {\n                        segment.t = prevSegment.t + prevSegment.d;\n                    }\n                }\n            }\n\n            if (segment.d) {\n                duration += segment.d;\n            }\n\n            // Create new segment\n            segments.push(segment);\n\n            // Support for 'r' attribute (i.e. \"repeat\" as in MPEG-DASH)\n            r = parseFloat(chunks[i].getAttribute('r'));\n            if (r) {\n\n                for (j = 0; j < (r - 1); j++) {\n                    prevSegment = segments[segments.length - 1];\n                    segment = {};\n                    segment.t = prevSegment.t + prevSegment.d;\n                    segment.d = prevSegment.d;\n                    if (prevSegment.tManifest) {\n                        segment.tManifest  = BigInt(prevSegment.tManifest).add(BigInt(prevSegment.d)).toString();\n                    }\n                    duration += segment.d;\n                    segments.push(segment);\n                }\n            }\n        }\n\n        segmentTimeline.S = segments;\n        segmentTimeline.S_asArray = segments;\n        segmentTimeline.duration = duration / timescale;\n\n        return segmentTimeline;\n    }\n\n    function getKIDFromProtectionHeader(protectionHeader) {\n        let prHeader,\n            wrmHeader,\n            xmlReader,\n            KID;\n\n        // Get PlayReady header as byte array (base64 decoded)\n        prHeader = BASE64.decodeArray(protectionHeader.firstChild.data);\n\n        // Get Right Management header (WRMHEADER) from PlayReady header\n        wrmHeader = getWRMHeaderFromPRHeader(prHeader);\n\n        if (wrmHeader) {\n            // Convert from multi-byte to unicode\n            wrmHeader = new Uint16Array(wrmHeader.buffer);\n\n            // Convert to string\n            wrmHeader = String.fromCharCode.apply(null, wrmHeader);\n\n            // Parse <WRMHeader> to get KID field value\n            xmlReader = (new DOMParser()).parseFromString(wrmHeader, 'application/xml');\n            KID = xmlReader.querySelector('KID').textContent;\n\n            // Get KID (base64 decoded) as byte array\n            KID = BASE64.decodeArray(KID);\n\n            // Convert UUID from little-endian to big-endian\n            convertUuidEndianness(KID);\n        }\n\n        return KID;\n    }\n\n    function getWRMHeaderFromPRHeader(prHeader) {\n        let length,\n            recordCount,\n            recordType,\n            recordLength,\n            recordValue;\n        let i = 0;\n\n        // Parse PlayReady header\n\n        // Length - 32 bits (LE format)\n        length = (prHeader[i + 3] << 24) + (prHeader[i + 2] << 16) + (prHeader[i + 1] << 8) + prHeader[i];\n        i += 4;\n\n        // Record count - 16 bits (LE format)\n        recordCount = (prHeader[i + 1] << 8) + prHeader[i];\n        i += 2;\n\n        // Parse records\n        while (i < prHeader.length) {\n            // Record type - 16 bits (LE format)\n            recordType = (prHeader[i + 1] << 8) + prHeader[i];\n            i += 2;\n\n            // Check if Rights Management header (record type = 0x01)\n            if (recordType === 0x01) {\n\n                // Record length - 16 bits (LE format)\n                recordLength = (prHeader[i + 1] << 8) + prHeader[i];\n                i += 2;\n\n                // Record value => contains <WRMHEADER>\n                recordValue = new Uint8Array(recordLength);\n                recordValue.set(prHeader.subarray(i, i + recordLength));\n                return recordValue;\n            }\n        }\n\n        return null;\n    }\n\n    function convertUuidEndianness(uuid) {\n        swapBytes(uuid, 0, 3);\n        swapBytes(uuid, 1, 2);\n        swapBytes(uuid, 4, 5);\n        swapBytes(uuid, 6, 7);\n    }\n\n    function swapBytes(bytes, pos1, pos2) {\n        const temp = bytes[pos1];\n        bytes[pos1] = bytes[pos2];\n        bytes[pos2] = temp;\n    }\n\n\n    function createPRContentProtection(protectionHeader) {\n        let pro = {\n            __text: protectionHeader.firstChild.data,\n            __prefix: 'mspr'\n        };\n        return {\n            schemeIdUri: 'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95',\n            value: 'com.microsoft.playready',\n            pro: pro,\n            pro_asArray: pro\n        };\n    }\n\n    function createWidevineContentProtection(KID) {\n        let widevineCP = {\n            schemeIdUri: 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed',\n            value: 'com.widevine.alpha'\n        };\n        if (!KID)\n            return widevineCP;\n        // Create Widevine CENC header (Protocol Buffer) with KID value\n        const wvCencHeader = new Uint8Array(2 + KID.length);\n        wvCencHeader[0] = 0x12;\n        wvCencHeader[1] = 0x10;\n        wvCencHeader.set(KID, 2);\n\n        // Create a pssh box\n        const length = 12 /* box length, type, version and flags */ + 16 /* SystemID */ + 4 /* data length */ + wvCencHeader.length;\n        let pssh = new Uint8Array(length);\n        let i = 0;\n\n        // Set box length value\n        pssh[i++] = (length & 0xFF000000) >> 24;\n        pssh[i++] = (length & 0x00FF0000) >> 16;\n        pssh[i++] = (length & 0x0000FF00) >> 8;\n        pssh[i++] = (length & 0x000000FF);\n\n        // Set type ('pssh'), version (0) and flags (0)\n        pssh.set([0x70, 0x73, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00], i);\n        i += 8;\n\n        // Set SystemID ('edef8ba9-79d6-4ace-a3c8-27dcd51d21ed')\n        pssh.set([0xed, 0xef, 0x8b, 0xa9,  0x79, 0xd6, 0x4a, 0xce, 0xa3, 0xc8, 0x27, 0xdc, 0xd5, 0x1d, 0x21, 0xed], i);\n        i += 16;\n\n        // Set data length value\n        pssh[i++] = (wvCencHeader.length & 0xFF000000) >> 24;\n        pssh[i++] = (wvCencHeader.length & 0x00FF0000) >> 16;\n        pssh[i++] = (wvCencHeader.length & 0x0000FF00) >> 8;\n        pssh[i++] = (wvCencHeader.length & 0x000000FF);\n\n        // Copy Widevine CENC header\n        pssh.set(wvCencHeader, i);\n\n        // Convert to BASE64 string\n        pssh = String.fromCharCode.apply(null, pssh);\n        pssh = BASE64.encodeASCII(pssh);\n\n        widevineCP.pssh = { __text: pssh };\n\n        return widevineCP;\n    }\n\n    function processManifest(xmlDoc, manifestLoadedTime) {\n        const manifest = {};\n        const contentProtections = [];\n        const smoothStreamingMedia = xmlDoc.getElementsByTagName('SmoothStreamingMedia')[0];\n        const protection = xmlDoc.getElementsByTagName('Protection')[0];\n        let protectionHeader = null;\n        let period,\n            adaptations,\n            contentProtection,\n            KID,\n            timestampOffset,\n            startTime,\n            segments,\n            timescale,\n            segmentDuration,\n            i, j;\n\n        // Set manifest node properties\n        manifest.protocol = 'MSS';\n        manifest.profiles = 'urn:mpeg:dash:profile:isoff-live:2011';\n        manifest.type = smoothStreamingMedia.getAttribute('IsLive') === 'TRUE' ? 'dynamic' : 'static';\n        timescale =  smoothStreamingMedia.getAttribute('TimeScale');\n        manifest.timescale = timescale ? parseFloat(timescale) : DEFAULT_TIME_SCALE;\n        let dvrWindowLength = parseFloat(smoothStreamingMedia.getAttribute('DVRWindowLength'));\n        // If the DVRWindowLength field is omitted for a live presentation or set to 0, the DVR window is effectively infinite\n        if (manifest.type === 'dynamic' && (dvrWindowLength === 0 || isNaN(dvrWindowLength))) {\n            dvrWindowLength = Infinity;\n        }\n        // Star-over\n        if (dvrWindowLength === 0 && smoothStreamingMedia.getAttribute('CanSeek') === 'TRUE') {\n            dvrWindowLength = Infinity;\n        }\n\n        if (dvrWindowLength > 0) {\n            manifest.timeShiftBufferDepth = dvrWindowLength / manifest.timescale;\n        }\n\n        let duration = parseFloat(smoothStreamingMedia.getAttribute('Duration'));\n        manifest.mediaPresentationDuration = (duration === 0) ? Infinity : duration / manifest.timescale;\n        // By default, set minBufferTime to 2 sec. (but set below according to video segment duration)\n        manifest.minBufferTime = 2;\n        manifest.ttmlTimeIsRelative = true;\n\n        // Live manifest with Duration = start-over\n        if (manifest.type === 'dynamic' && duration > 0) {\n            manifest.type = 'static';\n            // We set timeShiftBufferDepth to initial duration, to be used by MssFragmentController to update segment timeline\n            manifest.timeShiftBufferDepth = duration / manifest.timescale;\n            // Duration will be set according to current segment timeline duration (see below)\n        }\n\n        if (manifest.type === 'dynamic'  && manifest.timeShiftBufferDepth < Infinity) {\n            manifest.refreshManifestOnSwitchTrack = true; // Refresh manifest when switching tracks\n            manifest.doNotUpdateDVRWindowOnBufferUpdated = true; // DVRWindow is update by MssFragmentMoofPocessor based on tfrf boxes\n            manifest.ignorePostponeTimePeriod = true; // Never update manifest\n        }\n\n        // Map period node to manifest root node\n        manifest.Period = mapPeriod(smoothStreamingMedia, manifest.timescale);\n        manifest.Period_asArray = [manifest.Period];\n\n        // Initialize period start time\n        period = manifest.Period;\n        period.start = 0;\n\n        // Uncomment to test live to static manifests\n        // if (manifest.type !== 'static') {\n        //     manifest.type = 'static';\n        //     manifest.mediaPresentationDuration = manifest.timeShiftBufferDepth;\n        //     manifest.timeShiftBufferDepth = null;\n        // }\n\n        // ContentProtection node\n        if (protection !== undefined) {\n            protectionHeader = xmlDoc.getElementsByTagName('ProtectionHeader')[0];\n\n            // Some packagers put newlines into the ProtectionHeader base64 string, which is not good\n            // because this cannot be correctly parsed. Let's just filter out any newlines found in there.\n            protectionHeader.firstChild.data = protectionHeader.firstChild.data.replace(/\\n|\\r/g, '');\n\n            // Get KID (in CENC format) from protection header\n            KID = getKIDFromProtectionHeader(protectionHeader);\n\n            // Create ContentProtection for PlayReady\n            contentProtection = createPRContentProtection(protectionHeader);\n            contentProtection['cenc:default_KID'] = KID;\n            contentProtections.push(contentProtection);\n\n            // Create ContentProtection for Widevine (as a CENC protection)\n            contentProtection = createWidevineContentProtection(KID);\n            contentProtection['cenc:default_KID'] = KID;\n            contentProtections.push(contentProtection);\n\n            manifest.ContentProtection = contentProtections;\n            manifest.ContentProtection_asArray = contentProtections;\n        }\n\n        adaptations = period.AdaptationSet_asArray;\n\n        for (i = 0; i < adaptations.length; i += 1) {\n            adaptations[i].SegmentTemplate.initialization = '$Bandwidth$';\n            // Propagate content protection information into each adaptation\n            if (manifest.ContentProtection !== undefined) {\n                adaptations[i].ContentProtection = manifest.ContentProtection;\n                adaptations[i].ContentProtection_asArray = manifest.ContentProtection_asArray;\n            }\n\n            if (adaptations[i].contentType === 'video') {\n                // Get video segment duration\n                segmentDuration = adaptations[i].SegmentTemplate.SegmentTimeline.S_asArray[0].d / adaptations[i].SegmentTemplate.timescale;\n                // Set minBufferTime\n                manifest.minBufferTime = segmentDuration * 2;\n\n                if (manifest.type === 'dynamic' ) {\n                    // Set availabilityStartTime\n                    segments = adaptations[i].SegmentTemplate.SegmentTimeline.S_asArray;\n                    let endTime = (segments[segments.length - 1].t + segments[segments.length - 1].d) / adaptations[i].SegmentTemplate.timescale * 1000;\n                    manifest.availabilityStartTime = new Date(manifestLoadedTime.getTime() - endTime);\n\n                    // Match timeShiftBufferDepth to video segment timeline duration\n                    if (manifest.timeShiftBufferDepth > 0 &&\n                        manifest.timeShiftBufferDepth !== Infinity &&\n                        manifest.timeShiftBufferDepth > adaptations[i].SegmentTemplate.SegmentTimeline.duration) {\n                        manifest.timeShiftBufferDepth = adaptations[i].SegmentTemplate.SegmentTimeline.duration;\n                    }\n                }\n            }\n        }\n\n        // Cap minBufferTime to timeShiftBufferDepth\n        manifest.minBufferTime = Math.min(manifest.minBufferTime, (manifest.timeShiftBufferDepth ? manifest.timeShiftBufferDepth : Infinity));\n\n        // In case of live streams:\n        // 1- configure player buffering properties according to target live delay\n        // 2- adapt live delay and then buffers length in case timeShiftBufferDepth is too small compared to target live delay (see PlaybackController.computeLiveDelay())\n        if (manifest.type === 'dynamic') {\n            let targetLiveDelay = mediaPlayerModel.getLiveDelay();\n            if (!targetLiveDelay) {\n                const liveDelayFragmentCount = settings.get().streaming.liveDelayFragmentCount !== null && !isNaN(settings.get().streaming.liveDelayFragmentCount) ? settings.get().streaming.liveDelayFragmentCount : 4;\n                targetLiveDelay = segmentDuration * liveDelayFragmentCount;\n            }\n            let targetDelayCapping = Math.max(manifest.timeShiftBufferDepth - 10/*END_OF_PLAYLIST_PADDING*/, manifest.timeShiftBufferDepth / 2);\n            let liveDelay = Math.min(targetDelayCapping, targetLiveDelay);\n            // Consider a margin of one segment in order to avoid Precondition Failed errors (412), for example if audio and video are not correctly synchronized\n            let bufferTime = liveDelay - segmentDuration;\n            settings.update({\n                'streaming': {\n                    'liveDelay': liveDelay,\n                    'stableBufferTime': bufferTime,\n                    'bufferTimeAtTopQuality': bufferTime,\n                    'bufferTimeAtTopQualityLongForm': bufferTime\n                }\n            });\n        }\n\n        // Delete Content Protection under root manifest node\n        delete manifest.ContentProtection;\n        delete manifest.ContentProtection_asArray;\n\n        // In case of VOD streams, check if start time is greater than 0\n        // Then determine timestamp offset according to higher audio/video start time\n        // (use case = live stream delinearization)\n        if (manifest.type === 'static') {\n            // In case of start-over stream and manifest reloading (due to track switch)\n            // we consider previous timestampOffset to keep timelines synchronized\n            var prevManifest = manifestModel.getValue();\n            if (prevManifest && prevManifest.timestampOffset) {\n                timestampOffset = prevManifest.timestampOffset;\n            } else {\n                for (i = 0; i < adaptations.length; i++) {\n                    if (adaptations[i].contentType === constants.AUDIO || adaptations[i].contentType === constants.VIDEO) {\n                        segments = adaptations[i].SegmentTemplate.SegmentTimeline.S_asArray;\n                        startTime = segments[0].t / adaptations[i].SegmentTemplate.timescale;\n                        if (timestampOffset === undefined) {\n                            timestampOffset = startTime;\n                        }\n                        timestampOffset = Math.min(timestampOffset, startTime);\n                        // Correct content duration according to minimum adaptation's segment timeline duration\n                        // in order to force <video> element sending 'ended' event\n                        manifest.mediaPresentationDuration = Math.min(manifest.mediaPresentationDuration, adaptations[i].SegmentTemplate.SegmentTimeline.duration);\n                    }\n                }\n            }\n            // Patch segment templates timestamps and determine period start time (since audio/video should not be aligned to 0)\n            if (timestampOffset > 0) {\n                manifest.timestampOffset = timestampOffset;\n                for (i = 0; i < adaptations.length; i++) {\n                    segments = adaptations[i].SegmentTemplate.SegmentTimeline.S_asArray;\n                    for (j = 0; j < segments.length; j++) {\n                        if (!segments[j].tManifest) {\n                            segments[j].tManifest = segments[j].t;\n                        }\n                        segments[j].t -= (timestampOffset * adaptations[i].SegmentTemplate.timescale);\n                    }\n                    if (adaptations[i].contentType === constants.AUDIO || adaptations[i].contentType === constants.VIDEO) {\n                        period.start = Math.max(segments[0].t, period.start);\n                        adaptations[i].SegmentTemplate.presentationTimeOffset = period.start;\n                    }\n                }\n                period.start /= manifest.timescale;\n            }\n        }\n\n        // Floor the duration to get around precision differences between segments timestamps and MSE buffer timestamps\n        // and then avoid 'ended' event not being raised\n        manifest.mediaPresentationDuration = Math.floor(manifest.mediaPresentationDuration * 1000) / 1000;\n        period.duration = manifest.mediaPresentationDuration;\n\n        return manifest;\n    }\n\n    function parseDOM(data) {\n        let xmlDoc = null;\n\n        if (window.DOMParser) {\n            const parser = new window.DOMParser();\n\n            xmlDoc = parser.parseFromString(data, 'text/xml');\n            if (xmlDoc.getElementsByTagName('parsererror').length > 0) {\n                throw new Error('parsing the manifest failed');\n            }\n        }\n\n        return xmlDoc;\n    }\n\n    function getMatchers() {\n        return null;\n    }\n\n    function getIron() {\n        return null;\n    }\n\n    function internalParse(data) {\n        let xmlDoc = null;\n        let manifest = null;\n\n        const startTime = window.performance.now();\n\n        // Parse the MSS XML manifest\n        xmlDoc = parseDOM(data);\n\n        const xmlParseTime = window.performance.now();\n\n        if (xmlDoc === null) {\n            return null;\n        }\n\n        // Convert MSS manifest into DASH manifest\n        manifest = processManifest(xmlDoc, new Date());\n\n        const mss2dashTime = window.performance.now();\n\n        logger.info('Parsing complete: (xmlParsing: ' + (xmlParseTime - startTime).toPrecision(3) + 'ms, mss2dash: ' + (mss2dashTime - xmlParseTime).toPrecision(3) + 'ms, total: ' + ((mss2dashTime - startTime) / 1000).toPrecision(3) + 's)');\n\n        return manifest;\n    }\n\n    instance = {\n        parse: internalParse,\n        getMatchers: getMatchers,\n        getIron: getIron\n    };\n\n    setup();\n\n    return instance;\n}\n\nMssParser.__dashjs_factory_name = 'MssParser';\nexport default dashjs.FactoryMaker.getClassFactory(MssParser); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventsBase from '../core/events/EventsBase';\n/**\n * @class\n * @implements EventsBase\n */\nclass MediaPlayerEvents extends EventsBase {\n\n    /**\n     * @description Public facing external events to be used when developing a player that implements dash.js.\n     */\n    constructor() {\n        super();\n        /**\n         * Triggered when playback will not start yet\n         * as the MPD's availabilityStartTime is in the future.\n         * Check delay property in payload to determine time before playback will start.\n         * @event MediaPlayerEvents#AST_IN_FUTURE\n         */\n        this.AST_IN_FUTURE = 'astInFuture';\n\n        /**\n         * Triggered when the video element's buffer state changes to stalled.\n         * Check mediaType in payload to determine type (Video, Audio, FragmentedText).\n         * @event MediaPlayerEvents#BUFFER_EMPTY\n         */\n        this.BUFFER_EMPTY = 'bufferStalled';\n\n        /**\n         * Triggered when the video element's buffer state changes to loaded.\n         * Check mediaType in payload to determine type (Video, Audio, FragmentedText).\n         * @event MediaPlayerEvents#BUFFER_LOADED\n         */\n        this.BUFFER_LOADED = 'bufferLoaded';\n\n        /**\n         * Triggered when the video element's buffer state changes, either stalled or loaded. Check payload for state.\n         * @event MediaPlayerEvents#BUFFER_LEVEL_STATE_CHANGED\n         */\n        this.BUFFER_LEVEL_STATE_CHANGED = 'bufferStateChanged';\n\n        /**\n         * Triggered when there is an error from the element or MSE source buffer.\n         * @event MediaPlayerEvents#ERROR\n         */\n        this.ERROR = 'error';\n        /**\n         * Triggered when a fragment download has completed.\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_COMPLETED\n         */\n        this.FRAGMENT_LOADING_COMPLETED = 'fragmentLoadingCompleted';\n\n        /**\n         * Triggered when a partial fragment download has completed.\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_PROGRESS\n         */\n        this.FRAGMENT_LOADING_PROGRESS = 'fragmentLoadingProgress';\n        /**\n         * Triggered when a fragment download has started.\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_STARTED\n         */\n        this.FRAGMENT_LOADING_STARTED = 'fragmentLoadingStarted';\n\n        /**\n         * Triggered when a fragment download is abandoned due to detection of slow download base on the ABR abandon rule..\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_ABANDONED\n         */\n        this.FRAGMENT_LOADING_ABANDONED = 'fragmentLoadingAbandoned';\n\n        /**\n         * Triggered when {@link module:Debug} logger methods are called.\n         * @event MediaPlayerEvents#LOG\n         */\n        this.LOG = 'log';\n\n        //TODO refactor with internal event\n        /**\n         * Triggered when the manifest load is complete\n         * @event MediaPlayerEvents#MANIFEST_LOADED\n         */\n        this.MANIFEST_LOADED = 'manifestLoaded';\n\n        /**\n         * Triggered anytime there is a change to the overall metrics.\n         * @event MediaPlayerEvents#METRICS_CHANGED\n         */\n        this.METRICS_CHANGED = 'metricsChanged';\n\n        /**\n         * Triggered when an individual metric is added, updated or cleared.\n         * @event MediaPlayerEvents#METRIC_CHANGED\n         */\n        this.METRIC_CHANGED = 'metricChanged';\n\n        /**\n         * Triggered every time a new metric is added.\n         * @event MediaPlayerEvents#METRIC_ADDED\n         */\n        this.METRIC_ADDED = 'metricAdded';\n\n        /**\n         * Triggered every time a metric is updated.\n         * @event MediaPlayerEvents#METRIC_UPDATED\n         */\n        this.METRIC_UPDATED = 'metricUpdated';\n\n        /**\n         * Triggered at the stream end of a period.\n         * @event MediaPlayerEvents#PERIOD_SWITCH_COMPLETED\n         */\n        this.PERIOD_SWITCH_COMPLETED = 'periodSwitchCompleted';\n\n        /**\n         * Triggered when a new period starts.\n         * @event MediaPlayerEvents#PERIOD_SWITCH_STARTED\n         */\n        this.PERIOD_SWITCH_STARTED = 'periodSwitchStarted';\n\n        /**\n         * Triggered when an ABR up /down switch is initiated; either by user in manual mode or auto mode via ABR rules.\n         * @event MediaPlayerEvents#QUALITY_CHANGE_REQUESTED\n         */\n        this.QUALITY_CHANGE_REQUESTED = 'qualityChangeRequested';\n\n        /**\n         * Triggered when the new ABR quality is being rendered on-screen.\n         * @event MediaPlayerEvents#QUALITY_CHANGE_RENDERED\n         */\n        this.QUALITY_CHANGE_RENDERED = 'qualityChangeRendered';\n\n        /**\n         * Triggered when the new track is being rendered.\n         * @event MediaPlayerEvents#TRACK_CHANGE_RENDERED\n         */\n        this.TRACK_CHANGE_RENDERED = 'trackChangeRendered';\n\n        /**\n         * Triggered when the source is setup and ready.\n         * @event MediaPlayerEvents#SOURCE_INITIALIZED\n         */\n        this.SOURCE_INITIALIZED = 'sourceInitialized';\n\n        /**\n         * Triggered when a stream (period) is being loaded\n         * @event MediaPlayerEvents#STREAM_INITIALIZING\n         */\n        this.STREAM_INITIALIZING = 'streamInitializing';\n\n        /**\n         * Triggered when a stream (period) is loaded\n         * @event MediaPlayerEvents#STREAM_INITIALIZED\n         */\n        this.STREAM_INITIALIZED = 'streamInitialized';\n\n        /**\n         * Triggered when the player has been reset.\n         * @event MediaPlayerEvents#STREAM_TEARDOWN_COMPLETE\n         */\n        this.STREAM_TEARDOWN_COMPLETE = 'streamTeardownComplete';\n\n        /**\n         * Triggered once all text tracks detected in the MPD are added to the video element.\n         * @event MediaPlayerEvents#TEXT_TRACKS_ADDED\n         */\n        this.TEXT_TRACKS_ADDED = 'allTextTracksAdded';\n\n        /**\n         * Triggered when a text track is added to the video element's TextTrackList\n         * @event MediaPlayerEvents#TEXT_TRACK_ADDED\n         */\n        this.TEXT_TRACK_ADDED = 'textTrackAdded';\n\n        /**\n         * Triggered when a ttml chunk is parsed.\n         * @event MediaPlayerEvents#TTML_PARSED\n         */\n        this.TTML_PARSED = 'ttmlParsed';\n\n        /**\n         * Triggered when a ttml chunk has to be parsed.\n         * @event MediaPlayerEvents#TTML_TO_PARSE\n         */\n        this.TTML_TO_PARSE = 'ttmlToParse';\n\n        /**\n         * Triggered when a caption is rendered.\n         * @event MediaPlayerEvents#CAPTION_RENDERED\n         */\n        this.CAPTION_RENDERED = 'captionRendered';\n\n        /**\n         * Triggered when the caption container is resized.\n         * @event MediaPlayerEvents#CAPTION_CONTAINER_RESIZE\n         */\n        this.CAPTION_CONTAINER_RESIZE = 'captionContainerResize';\n\n        /**\n         * Sent when enough data is available that the media can be played,\n         * at least for a couple of frames.  This corresponds to the\n         * HAVE_ENOUGH_DATA readyState.\n         * @event MediaPlayerEvents#CAN_PLAY\n         */\n        this.CAN_PLAY = 'canPlay';\n\n        /**\n         * Sent when playback completes.\n         * @event MediaPlayerEvents#PLAYBACK_ENDED\n         */\n        this.PLAYBACK_ENDED = 'playbackEnded';\n\n        /**\n         * Sent when an error occurs.  The element's error\n         * attribute contains more information.\n         * @event MediaPlayerEvents#PLAYBACK_ERROR\n         */\n        this.PLAYBACK_ERROR = 'playbackError';\n\n        /**\n         * Sent when playback is not allowed (for example if user gesture is needed).\n         * @event MediaPlayerEvents#PLAYBACK_NOT_ALLOWED\n         */\n        this.PLAYBACK_NOT_ALLOWED = 'playbackNotAllowed';\n\n        /**\n         * The media's metadata has finished loading; all attributes now\n         * contain as much useful information as they're going to.\n         * @event MediaPlayerEvents#PLAYBACK_METADATA_LOADED\n         */\n        this.PLAYBACK_METADATA_LOADED = 'playbackMetaDataLoaded';\n\n        /**\n         * Sent when playback is paused.\n         * @event MediaPlayerEvents#PLAYBACK_PAUSED\n         */\n        this.PLAYBACK_PAUSED = 'playbackPaused';\n\n        /**\n         * Sent when the media begins to play (either for the first time, after having been paused,\n         * or after ending and then restarting).\n         *\n         * @event MediaPlayerEvents#PLAYBACK_PLAYING\n         */\n        this.PLAYBACK_PLAYING = 'playbackPlaying';\n\n        /**\n         * Sent periodically to inform interested parties of progress downloading\n         * the media. Information about the current amount of the media that has\n         * been downloaded is available in the media element's buffered attribute.\n         * @event MediaPlayerEvents#PLAYBACK_PROGRESS\n         */\n        this.PLAYBACK_PROGRESS = 'playbackProgress';\n\n        /**\n         * Sent when the playback speed changes.\n         * @event MediaPlayerEvents#PLAYBACK_RATE_CHANGED\n         */\n        this.PLAYBACK_RATE_CHANGED = 'playbackRateChanged';\n\n        /**\n         * Sent when a seek operation completes.\n         * @event MediaPlayerEvents#PLAYBACK_SEEKED\n         */\n        this.PLAYBACK_SEEKED = 'playbackSeeked';\n\n        /**\n         * Sent when a seek operation begins.\n         * @event MediaPlayerEvents#PLAYBACK_SEEKING\n         */\n        this.PLAYBACK_SEEKING = 'playbackSeeking';\n\n        /**\n         * Sent when a seek operation has been asked.\n         * @event MediaPlayerEvents#PLAYBACK_SEEK_ASKED\n         */\n        this.PLAYBACK_SEEK_ASKED = 'playbackSeekAsked';\n\n        /**\n         * Sent when the video element reports stalled\n         * @event MediaPlayerEvents#PLAYBACK_STALLED\n         */\n        this.PLAYBACK_STALLED = 'playbackStalled';\n\n        /**\n         * Sent when playback of the media starts after having been paused;\n         * that is, when playback is resumed after a prior pause event.\n         *\n         * @event MediaPlayerEvents#PLAYBACK_STARTED\n         */\n        this.PLAYBACK_STARTED = 'playbackStarted';\n\n        /**\n         * The time indicated by the element's currentTime attribute has changed.\n         * @event MediaPlayerEvents#PLAYBACK_TIME_UPDATED\n         */\n        this.PLAYBACK_TIME_UPDATED = 'playbackTimeUpdated';\n\n        /**\n         * Sent when the media playback has stopped because of a temporary lack of data.\n         *\n         * @event MediaPlayerEvents#PLAYBACK_WAITING\n         */\n        this.PLAYBACK_WAITING = 'playbackWaiting';\n\n        /**\n         * Manifest validity changed - As a result of an MPD validity expiration event.\n         * @event MediaPlayerEvents#MANIFEST_VALIDITY_CHANGED\n         */\n        this.MANIFEST_VALIDITY_CHANGED = 'manifestValidityChanged';\n    }\n}\n\nlet mediaPlayerEvents = new MediaPlayerEvents();\nexport default mediaPlayerEvents;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass DashJSError {\n    constructor(code, message, data) {\n        this.code = code || null;\n        this.message = message || null;\n        this.data = data || null;\n    }\n}\n\nexport default DashJSError;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @class\n * @ignore\n */\nclass DataChunk {\n    //Represents a data structure that keep all the necessary info about a single init/media segment\n    constructor() {\n        this.streamId = null;\n        this.mediaInfo = null;\n        this.segmentType = null;\n        this.quality = NaN;\n        this.index = NaN;\n        this.bytes = null;\n        this.start = NaN;\n        this.end = NaN;\n        this.duration = NaN;\n        this.representationId = null;\n        this.endFragment = null;\n    }\n}\n\nexport default DataChunk;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { HTTPRequest } from '../vo/metrics/HTTPRequest';\n\n/**\n * @class\n * @ignore\n */\nclass FragmentRequest {\n    constructor(url) {\n        this.action = FragmentRequest.ACTION_DOWNLOAD;\n        this.startTime = NaN;\n        this.mediaType = null;\n        this.mediaInfo = null;\n        this.type = null;\n        this.duration = NaN;\n        this.timescale = NaN;\n        this.range = null;\n        this.url = url || null;\n        this.serviceLocation = null;\n        this.requestStartDate = null;\n        this.firstByteDate = null;\n        this.requestEndDate = null;\n        this.quality = NaN;\n        this.index = NaN;\n        this.availabilityStartTime = null;\n        this.availabilityEndTime = null;\n        this.wallStartTime = null;\n        this.bytesLoaded = NaN;\n        this.bytesTotal = NaN;\n        this.delayLoadingTime = NaN;\n        this.responseType = 'arraybuffer';\n        this.representationId = null;\n    }\n\n    isInitializationRequest() {\n        return (this.type && this.type === HTTPRequest.INIT_SEGMENT_TYPE);\n    }\n\n    setInfo(info) {\n        this.type = info && info.init ? HTTPRequest.INIT_SEGMENT_TYPE : HTTPRequest.MEDIA_SEGMENT_TYPE;\n        this.url = info && info.url ? info.url : null;\n        this.range = info && info.range ? info.range.start + '-' + info.range.end : null;\n        this.mediaType = info && info.mediaType ? info.mediaType : null;\n    }\n}\n\nFragmentRequest.ACTION_DOWNLOAD = 'download';\nFragmentRequest.ACTION_COMPLETE = 'complete';\n\nexport default FragmentRequest;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc This Object holds reference to the HTTPRequest for manifest, fragment and xlink loading.\n * Members which are not defined in ISO23009-1 Annex D should be prefixed by a _ so that they are ignored\n * by Metrics Reporting code.\n * @ignore\n */\nclass HTTPRequest {\n    /**\n     * @class\n     */\n    constructor() {\n        /**\n         * Identifier of the TCP connection on which the HTTP request was sent.\n         * @public\n         */\n        this.tcpid = null;\n        /**\n         * This is an optional parameter and should not be included in HTTP request/response transactions for progressive download.\n         * The type of the request:\n         * - MPD\n         * - XLink expansion\n         * - Initialization Fragment\n         * - Index Fragment\n         * - Media Fragment\n         * - Bitstream Switching Fragment\n         * - other\n         * @public\n         */\n        this.type = null;\n        /**\n         * The original URL (before any redirects or failures)\n         * @public\n         */\n        this.url = null;\n        /**\n         * The actual URL requested, if different from above\n         * @public\n         */\n        this.actualurl = null;\n        /**\n         * The contents of the byte-range-spec part of the HTTP Range header.\n         * @public\n         */\n        this.range = null;\n        /**\n         * Real-Time | The real time at which the request was sent.\n         * @public\n         */\n        this.trequest = null;\n        /**\n         * Real-Time | The real time at which the first byte of the response was received.\n         * @public\n         */\n        this.tresponse = null;\n        /**\n         * The HTTP response code.\n         * @public\n         */\n        this.responsecode = null;\n        /**\n         * The duration of the throughput trace intervals (ms), for successful requests only.\n         * @public\n         */\n        this.interval = null;\n        /**\n         * Throughput traces, for successful requests only.\n         * @public\n         */\n        this.trace = [];\n\n        /**\n         * Type of stream (\"audio\" | \"video\" etc..)\n         * @public\n         */\n        this._stream = null;\n        /**\n         * Real-Time | The real time at which the request finished.\n         * @public\n         */\n        this._tfinish = null;\n        /**\n         * The duration of the media requests, if available, in milliseconds.\n         * @public\n         */\n        this._mediaduration = null;\n        /**\n         * The media segment quality\n         * @public\n         */\n        this._quality = null;\n        /**\n         * all the response headers from request.\n         * @public\n         */\n        this._responseHeaders = null;\n        /**\n         * The selected service location for the request. string.\n         * @public\n         */\n        this._serviceLocation = null;\n    }\n}\n\n/**\n * @classdesc This Object holds reference to the progress of the HTTPRequest.\n * @ignore\n */\nclass HTTPRequestTrace {\n    /**\n    * @class\n    */\n    constructor() {\n        /**\n         * Real-Time | Measurement stream start.\n         * @public\n         */\n        this.s = null;\n        /**\n         * Measurement stream duration (ms).\n         * @public\n         */\n        this.d = null;\n        /**\n         * List of integers counting the bytes received in each trace interval within the measurement stream.\n         * @public\n         */\n        this.b = [];\n    }\n}\n\nHTTPRequest.GET = 'GET';\nHTTPRequest.HEAD = 'HEAD';\nHTTPRequest.MPD_TYPE = 'MPD';\nHTTPRequest.XLINK_EXPANSION_TYPE = 'XLinkExpansion';\nHTTPRequest.INIT_SEGMENT_TYPE = 'InitializationSegment';\nHTTPRequest.INDEX_SEGMENT_TYPE = 'IndexSegment';\nHTTPRequest.MEDIA_SEGMENT_TYPE = 'MediaSegment';\nHTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE = 'BitstreamSwitchingSegment';\nHTTPRequest.OTHER_TYPE = 'other';\n\nexport { HTTPRequest, HTTPRequestTrace };\n"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","_dereq_","module","bigInt","undefined","BASE","LOG_BASE","MAX_INT","MAX_INT_ARR","smallToArray","DEFAULT_ALPHABET","supportsNativeBigInt","BigInt","Integer","v","radix","alphabet","caseSensitive","parseBase","parseValue","BigInteger","value","sign","this","isSmall","SmallInteger","NativeBigInt","isPrecise","Math","floor","arrayToSmall","arr","trim","compareAbs","createArray","x","Array","truncate","ceil","add","b","sum","l_a","l_b","carry","base","push","addAny","addSmall","l","subtract","difference","a_l","b_l","borrow","subtractSmall","multiplyLong","product","a_i","j","multiplySmall","shiftLeft","concat","multiplySmallAndArray","square","divModSmall","lambda","q","divisor","quotient","remainder","divModAny","self","negate","abs","comparison","quotientDigit","shift","result","divisorMostSignificantDigit","guess","xlen","highx","highy","check","part","unshift","reverse","qSign","mod","mSign","isBasicPrime","isUnit","equals","isEven","isDivisibleBy","lesser","millerRabinTest","d","nPrev","prev","divide","next","modPow","prototype","Object","create","plus","minus","small","times","multiply","l1","l2","multiplyKaratsuba","y","max","slice","ac","bd","abcd","_multiplyBySmall","divmod","over","pow","toString","_0","_1","_2","isNegative","exp","isZero","isPositive","isOdd","compareTo","compare","Infinity","eq","neq","notEquals","gt","greater","lt","geq","greaterOrEquals","leq","lesserOrEquals","isPrime","strict","bits","bitLength","logN","log","toJSNumber","isProbablePrime","iterations","randBetween","modInv","lastT","lastR","zero","newT","one","newR","powersOfTwo","powers2Length","highestPower2","shift_isSmall","bitwise","fn","xSign","ySign","xRem","not","yRem","xDigit","yDigit","xDivMod","yDivMod","String","shiftRight","remQuo","and","or","xor","LOBMASK_I","LOBMASK_BI","roughLOB","min","gcd","integerLogarithm","tmp","text","toLowerCase","absBase","alphabetValues","digits","start","parseBaseFromArray","val","toBase","apply","map","valueOf","neg","Number","out","left","digit","toBaseString","join","parseStringValue","split","decimalPlace","indexOf","test","parseNumberValue","toArray","str","toJSON","parseInt","minusOne","lcm","isInstance","low","range","random","restricted","top","fromArray","hasOwnProperty","define","amd","ErrorsBase","errors","config","override","publicOnly","err","EventsBase","events","evt","MssFragmentInfoController","instance","logger","fragmentModel","started","type","loadFragmentTimeout","startTime","startFragmentTime","index","streamProcessor","baseURLController","debug","stop","clearTimeout","loadNextFragmentInfo","representation","adaptation","segments","segment","timescale","request","getRepresentationController","getCurrentRepresentation","period","mpd","manifest","Period_asArray","AdaptationSet_asArray","SegmentTemplate","SegmentTimeline","S_asArray","_streamingVoFragmentRequest2","mediaType","duration","quality","mediaInfo","getMediaInfo","adaptationIndex","representationId","id","url","resolve","path","media","replace","bandwidth","tManifest","getFragmentModel","isFragmentLoadedOrPending","executeRequest","initialize","getType","controllerType","Date","getTime","fragmentInfoLoaded","deltaFragmentTime","deltaTime","delay","response","setTimeout","error","reset","getLogger","__dashjs_factory_name","dashjs","FactoryMaker","getClassFactory","MssFragmentMoofProcessor","dashMetrics","playbackController","errorHandler","errHandler","eventBus","ISOBoxer","processTfrf","tfrf","tfdt","representationController","timeShiftBufferDepth","entry","end","S","entries","segmentTime","availabilityStartTime","parseFloat","fragment_absolute_time","baseMediaDecodeTime","updateDVR","getStreamInfo","manifestInfo","fragment_duration","round","splice","updateRepresentation","trigger","_streamingMediaPlayerEvents2","MANIFEST_VALIDITY_CHANGED","sender","newDuration","_streamingVoDashJSError2","_errorsMssErrors2","MSS_NO_TFRF_CODE","MSS_NO_TFRF_MESSAGE","dvrInfos","getCurrentDVRInfo","addDVRInfo","getBoxOffset","parent","offset","boxes","size","convertFragment","isoFile","parseBuffer","tfhd","fetch","track_ID","traf","createFullBox","version","flags","trun","tfxd","_parent","sepiff","usertype","_saio","entry_count","saiz","sample_count","default_sample_info_size","sample_info_size","NumberOfEntries","moof","getLength","data_offset","trafPosInMoof","sencPosInTraf","saio","write","updateSegmentList","MssFragmentMoovProcessor","NALUTYPE_SPS","NALUTYPE_PPS","constants","protectionController","adaptationSet","contentProtection","trackId","createMoovBox","moov","mvhd","createBox","creation_time","modification_time","rate","volume","reserved1","reserved2","matrix","pre_defined","next_track_ID","trak","tkhd","layer","alternate_group","reserved3","width","height","mdia","mdhd","language","lang","hdlr","VIDEO","handler_type","AUDIO","name","reserved","createHdlrBox","minf","smhd","vmhd","graphicsmode","opcolor","balance","dinf","dref","location","createDrefBox","stbl","_data","stsd","codec","codecs","substring","avc1","sinf","data_reference_index","pre_defined1","pre_defined2","horizresolution","vertresolution","frame_count","compressorname","depth","pre_defined3","avcC","avcCLength","sps","pps","AVCProfileIndication","AVCLevelIndication","profile_compatibility","nalus","codecPrivateData","naluBytes","_i","hexStringtoBuffer","Uint8Array","set","createAVC1ConfigurationRecord","createOriginalFormatBox","createSchemeTypeBox","createSchemeInformationBox","createAVCVisualSampleEntry","mp4a","channelcount","audioChannels","samplesize","reserved_3","samplerate","audioSamplingRate","esds","audioSpecificConfig","esdsLength","createMPEG4AACESDescriptor","createMP4AudioSampleEntry","MSS_UNSUPPORTED_CODEC_CODE","message","MSS_UNSUPPORTED_CODEC_MESSAGE","data","createSampleEntry","createStsdBox","trex","mvex","default_sample_description_index","default_sample_duration","default_sample_size","default_sample_flags","keySystems","pssh_bytes","pssh","parsedBuffer","initData","Utils","appendBox","createProtectionSystemSpecificHeaderBox","getSupportedKeySystemsFromContentProtection","data_format","charCodeAt","stringToCharCode","schm","scheme_type","scheme_version","schi","tenc","default_IsEncrypted","default_IV_size","default_KID","buf","generateMoov","rep","ftyp","ContentProtection","createFile","major_brand","minor_version","compatible_brands","arrayEqual","arr1","arr2","every","element","saioProcessor","_procFullBox","_procField","_procFieldArray","saizProcessor","sencProcessor","_procEntries","_procEntryField","_procSubEntries","clearAndCryptedData","uuidProcessor","_parsing","fragment_count","MssFragmentProcessor","context","mssFragmentMoovProcessor","mssFragmentMoofProcessor","processFragment","addBoxProcessor","_MssFragmentMoovProcessor2","_MssFragmentMoofProcessor2","MssHandler","initSegmentType","streamController","mssFragmentProcessor","_MssFragmentProcessor2","fragmentInfoControllers","getStreamProcessor","getActiveStreamProcessors","filter","processor","getFragmentInfoController","controller","startFragmentInfoControllers","forEach","fragmentInfoController","FRAGMENTED_TEXT","_MssFragmentInfoController2","onInitializationRequested","streamId","endFragment","chunk","streamInfo","FRAGMENT_LOADING_PROGRESS","_streamingVoDataChunk2","segmentType","bytes","INIT_FRAGMENT_LOADED","onSegmentMediaLoaded","isDynamic","DVRWindowSize","onPlaybackPaused","getIsDynamic","onPlaybackSeekAsked","onTTMLPreProcess","ttmlSubtitles","off","INIT_REQUESTED","PLAYBACK_PAUSED","PLAYBACK_SEEK_ASKED","FRAGMENT_LOADING_COMPLETED","TTML_TO_PARSE","createMssParser","_parserMssParser2","registerEvents","on","getSingletonFactoryByName","getClassName","EVENT_PRIORITY_HIGH","factory","updateClassFactory","MssErrors","_get","getPrototypeOf","mssErrors","window","global","_MssHandler2","MssParser","BASE64","manifestModel","mediaPlayerModel","settings","DEFAULT_TIME_SCALE","SUPPORTED_CODECS","ROLE","CAPT","SUBT","DESC","ACCESSIBILITY","samplingFrequencyIndex","96000","88200","64000","48000","44100","32000","24000","22050","16000","12000","11025","8000","7350","mimeTypeMap","video","audio","mapPeriod","smoothStreamingMedia","streams","getElementsByTagName","streamIndex","segmentTemplate","representations","qualityLevels","getAttribute","fallBackId","role","accessibility","contentType","mimeType","subType","maxWidth","maxHeight","schemeIdUri","Role","Role_asArray","Accessibility","Accessibility_asArray","mediaUrl","streamIndexTimeScale","segmentTimeline","chunks","prevSegment","_externalsBigInteger2","MAX_SAFE_INTEGER","mapSegmentTimeline","mapSegmentTemplate","BaseURL","Id","qualityLevel","fourCCValue","toUpperCase","warn","nalHeader","exec","substr","getH264Codec","samplingRate","objectType","arr16","indexFreq","extensionSamplingFrequencyIndex","Channels","Uint16Array","setAttribute","getAACCodec","STPP","mapRepresentation","Representation","Representation_asArray","mapAdaptationSet","AdaptationSet","getKIDFromProtectionHeader","protectionHeader","uuid","wrmHeader","KID","prHeader","recordType","recordLength","recordValue","subarray","getWRMHeaderFromPRHeader","decodeArray","firstChild","buffer","fromCharCode","DOMParser","parseFromString","querySelector","textContent","swapBytes","pos1","pos2","temp","processManifest","xmlDoc","manifestLoadedTime","contentProtections","protection","adaptations","timestampOffset","segmentDuration","protocol","profiles","dvrWindowLength","isNaN","pro","endTime","targetLiveDelay","targetDelayCapping","liveDelay","bufferTime","mediaPresentationDuration","minBufferTime","ttmlTimeIsRelative","refreshManifestOnSwitchTrack","doNotUpdateDVRWindowOnBufferUpdated","ignorePostponeTimePeriod","Period","__text","__prefix","pro_asArray","widevineCP","wvCencHeader","encodeASCII","createWidevineContentProtection","ContentProtection_asArray","initialization","getLiveDelay","get","streaming","liveDelayFragmentCount","update","stableBufferTime","bufferTimeAtTopQuality","bufferTimeAtTopQualityLongForm","prevManifest","getValue","presentationTimeOffset","parse","performance","now","parseDOM","xmlParseTime","mss2dashTime","info","toPrecision","getMatchers","getIron","MediaPlayerEvents","AST_IN_FUTURE","BUFFER_EMPTY","BUFFER_LOADED","BUFFER_LEVEL_STATE_CHANGED","ERROR","FRAGMENT_LOADING_STARTED","FRAGMENT_LOADING_ABANDONED","LOG","MANIFEST_LOADED","METRICS_CHANGED","METRIC_CHANGED","METRIC_ADDED","METRIC_UPDATED","PERIOD_SWITCH_COMPLETED","PERIOD_SWITCH_STARTED","QUALITY_CHANGE_REQUESTED","QUALITY_CHANGE_RENDERED","TRACK_CHANGE_RENDERED","SOURCE_INITIALIZED","STREAM_INITIALIZING","STREAM_INITIALIZED","STREAM_TEARDOWN_COMPLETE","TEXT_TRACKS_ADDED","TEXT_TRACK_ADDED","TTML_PARSED","CAPTION_RENDERED","CAPTION_CONTAINER_RESIZE","CAN_PLAY","PLAYBACK_ENDED","PLAYBACK_ERROR","PLAYBACK_NOT_ALLOWED","PLAYBACK_METADATA_LOADED","PLAYBACK_PLAYING","PLAYBACK_PROGRESS","PLAYBACK_RATE_CHANGED","PLAYBACK_SEEKED","PLAYBACK_SEEKING","PLAYBACK_STALLED","PLAYBACK_STARTED","PLAYBACK_TIME_UPDATED","PLAYBACK_WAITING","mediaPlayerEvents","DashJSError","DataChunk","NaN","FragmentRequest","_voMetricsHTTPRequest","HTTPRequest","INIT_SEGMENT_TYPE","init","MEDIA_SEGMENT_TYPE","action","ACTION_DOWNLOAD","serviceLocation","requestStartDate","firstByteDate","requestEndDate","availabilityEndTime","wallStartTime","bytesLoaded","bytesTotal","delayLoadingTime","responseType","ACTION_COMPLETE","tcpid","actualurl","trequest","tresponse","responsecode","interval","trace","_stream","_tfinish","_mediaduration","_quality","_responseHeaders","_serviceLocation","GET","HEAD","MPD_TYPE","XLINK_EXPANSION_TYPE","INDEX_SEGMENT_TYPE","BITSTREAM_SWITCHING_SEGMENT_TYPE","OTHER_TYPE","HTTPRequestTrace","s"],"mappings":";CAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,mBAAAC,SAAAA,QAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,GAAA,GAAAI,EAAA,OAAAA,EAAAJ,GAAA,GAAA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAAA,MAAAK,EAAAE,KAAA,mBAAAF,EAAA,IAAAG,EAAAX,EAAAG,GAAA,CAAAS,QAAA,IAAAb,EAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,OAAAI,EAAAH,EAAAI,GAAA,GAAAL,IAAAA,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAS,QAAA,IAAA,IAAAL,EAAA,mBAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,EAAA,CAAA,CAAAa,EAAA,CAAA,SAAAC,EAAAC,EAAAL,gBCAA,IAAIM,EAAO,SAASC,GAAwB,IAAIC,EAAK,IAAIC,EAAS,EAAEC,EAAQ,iBAAiBC,EAAYC,EAAaF,GAASG,EAAiB,uCAA2CC,EAAqC,mBAATC,OAAoB,SAASC,EAAQC,EAAEC,EAAMC,EAASC,GAAe,YAAc,IAAJH,EAAuBD,EAAQ,QAAqB,IAARE,IAAmC,KAARA,GAAaC,GAAuBE,EAAUJ,EAAEC,EAAMC,EAASC,GAAsBE,EAAWL,GAAG,SAASM,EAAWC,EAAMC,GAAMC,KAAKF,MAAMA,EAAME,KAAKD,KAAKA,EAAKC,KAAKC,SAAQ,EAA4D,SAASC,EAAaJ,GAAOE,KAAKF,MAAMA,EAAME,KAAKD,KAAKD,EAAM,EAAEE,KAAKC,SAAQ,EAA6D,SAASE,EAAaL,GAAOE,KAAKF,MAAMA,EAA8D,SAASM,EAAU1C,GAAG,OAAOsB,EAAQtB,GAAGA,EAAEsB,EAAQ,SAASE,EAAaxB,GAAG,OAAGA,EAAE,IAAU,CAACA,GAAMA,EAAE,KAAW,CAACA,EAAE,IAAI2C,KAAKC,MAAM5C,EAAE,MAAY,CAACA,EAAE,IAAI2C,KAAKC,MAAM5C,EAAE,KAAK,IAAI2C,KAAKC,MAAM5C,EAAE,OAAO,SAAS6C,EAAaC,GAAKC,EAAKD,GAAK,IAAIhC,EAAOgC,EAAIhC,OAAO,GAAGA,EAAO,GAAGkC,EAAWF,EAAIvB,GAAa,EAAG,OAAOT,GAAQ,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAOgC,EAAI,GAAG,KAAK,EAAE,OAAOA,EAAI,GAAGA,EAAI,GAAG1B,EAAK,QAAQ,OAAO0B,EAAI,IAAIA,EAAI,GAAGA,EAAI,GAAG1B,GAAMA,EAAM,OAAO0B,EAAI,SAASC,EAAKlB,GAAkB,IAAf,IAAI1B,EAAE0B,EAAEf,OAAsB,IAATe,IAAI1B,KAAQ0B,EAAEf,OAAOX,EAAE,EAAE,SAAS8C,EAAYnC,GAAyC,IAAjC,IAAIoC,EAAE,IAAIC,MAAMrC,GAAYX,GAAG,IAAUA,EAAEW,GAAQoC,EAAE/C,GAAG,EAAE,OAAO+C,EAAE,SAASE,EAASpD,GAAG,OAAK,EAAFA,EAAW2C,KAAKC,MAAM5C,GAAU2C,KAAKU,KAAKrD,GAAG,SAASsD,EAAI9C,EAAE+C,GAA0E,IAAvE,IAAiEC,EAA7DC,EAAIjD,EAAEM,OAAO4C,EAAIH,EAAEzC,OAAOhB,EAAE,IAAIqD,MAAMM,GAAKE,EAAM,EAAEC,EAAKxC,EAAejB,EAAE,EAAEA,EAAEuD,EAAIvD,IAAyBwD,EAAWC,IAA/BJ,EAAIhD,EAAEL,GAAGoD,EAAEpD,GAAGwD,GAAsB,EAAE,EAAE7D,EAAEK,GAAGqD,EAAIG,EAAMC,EAAK,KAAMzD,EAAEsD,GAAoBE,GAAfH,EAAIhD,EAAEL,GAAGwD,KAAkBC,EAAK,EAAE,EAAE9D,EAAEK,KAAKqD,EAAIG,EAAMC,EAA8B,OAAhB,EAAND,GAAQ7D,EAAE+D,KAAKF,GAAc7D,EAAE,SAASgE,EAAOtD,EAAE+C,GAAG,OAAG/C,EAAEM,QAAQyC,EAAEzC,OAAcwC,EAAI9C,EAAE+C,GAAUD,EAAIC,EAAE/C,GAAG,SAASuD,EAASvD,EAAEmD,GAAqD,IAA9C,IAAwCH,EAApCQ,EAAExD,EAAEM,OAAOhB,EAAE,IAAIqD,MAAMa,GAAGJ,EAAKxC,EAAejB,EAAE,EAAEA,EAAE6D,EAAE7D,IAAKqD,EAAIhD,EAAEL,GAAGyD,EAAKD,EAAMA,EAAMhB,KAAKC,MAAMY,EAAII,GAAM9D,EAAEK,GAAGqD,EAAIG,EAAMC,EAAKD,GAAO,EAAE,KAAY,EAANA,GAAS7D,EAAEK,KAAKwD,EAAMC,EAAKD,EAAMhB,KAAKC,MAAMe,EAAMC,GAAM,OAAO9D,EAA6xB,SAASmE,EAASzD,EAAE+C,GAAkF,IAA/E,IAAoEW,EAAhEC,EAAI3D,EAAEM,OAAOsD,EAAIb,EAAEzC,OAAOhB,EAAE,IAAIqD,MAAMgB,GAAKE,EAAO,EAAET,EAAKxC,EAAsBjB,EAAE,EAAEA,EAAEiE,EAAIjE,IAAmEkE,GAA9DH,EAAW1D,EAAEL,GAAGkE,EAAOd,EAAEpD,IAAiB,GAAG+D,GAAYN,EAAY,GAAc,EAAE9D,EAAEK,GAAG+D,EAAW,IAAI/D,EAAEiE,EAAIjE,EAAEgE,EAAIhE,IAAI,CAAwB,MAAvB+D,EAAW1D,EAAEL,GAAGkE,GAAqB,GAAuB,CAACvE,EAAEK,KAAK+D,EAAW,MAAxCA,GAAYN,EAAkC9D,EAAEK,GAAG+D,EAAW,KAAK/D,EAAEgE,EAAIhE,IAAKL,EAAEK,GAAGK,EAAEL,GAAW,OAAR4C,EAAKjD,GAAUA,EAAsQ,SAASwE,EAAc9D,EAAE+C,EAAElB,GAAoE,IAA9D,IAAmD6B,EAA/CF,EAAExD,EAAEM,OAAOhB,EAAE,IAAIqD,MAAMa,GAAGL,GAAOJ,EAAEK,EAAKxC,EAAsBjB,EAAE,EAAEA,EAAE6D,EAAE7D,IAAK+D,EAAW1D,EAAEL,GAAGwD,EAAMA,EAAMhB,KAAKC,MAAMsB,EAAWN,GAAMM,GAAYN,EAAK9D,EAAEK,GAAG+D,EAAW,EAAEA,EAAWN,EAAKM,EAA6B,MAAc,iBAAhCpE,EAAE+C,EAAa/C,KAA8BuC,IAAKvC,GAAGA,GAAS,IAAI0C,EAAa1C,IAAU,IAAIqC,EAAWrC,EAAEuC,GAAuxC,SAASkC,EAAa/D,EAAE+C,GAA8F,IAA3F,IAAmEiB,EAAQb,EAAQc,EAA/EN,EAAI3D,EAAEM,OAAOsD,EAAIb,EAAEzC,OAAiBhB,EAAEmD,EAAVkB,EAAIC,GAAqBR,EAAKxC,EAAiCjB,EAAE,EAAEA,EAAEgE,IAAMhE,EAAE,CAACsE,EAAIjE,EAAEL,GAAG,IAAI,IAAIuE,EAAE,EAAEA,EAAEN,IAAMM,EAAYF,EAAQC,EAAblB,EAAEmB,GAAmB5E,EAAEK,EAAEuE,GAAGf,EAAMhB,KAAKC,MAAM4B,EAAQZ,GAAM9D,EAAEK,EAAEuE,GAAGF,EAAQb,EAAMC,EAAK9D,EAAEK,EAAEuE,EAAE,IAAIf,EAAe,OAARZ,EAAKjD,GAAUA,EAAE,SAAS6E,EAAcnE,EAAE+C,GAA6D,IAA1D,IAAgDiB,EAA5CR,EAAExD,EAAEM,OAAOhB,EAAE,IAAIqD,MAAMa,GAAGJ,EAAKxC,EAAKuC,EAAM,EAAgBxD,EAAE,EAAEA,EAAE6D,EAAE7D,IAAKqE,EAAQhE,EAAEL,GAAGoD,EAAEI,EAAMA,EAAMhB,KAAKC,MAAM4B,EAAQZ,GAAM9D,EAAEK,GAAGqE,EAAQb,EAAMC,EAAK,KAAY,EAAND,GAAS7D,EAAEK,KAAKwD,EAAMC,EAAKD,EAAMhB,KAAKC,MAAMe,EAAMC,GAAM,OAAO9D,EAAE,SAAS8E,EAAU1B,EAAElD,GAAY,IAAT,IAAIF,EAAE,GAAc,EAALE,KAAOF,EAAE+D,KAAK,GAAG,OAAO/D,EAAE+E,OAAO3B,GAAs8B,SAAS4B,EAAsBtE,EAAE+C,EAAElB,GAAM,OAAkB,IAAIF,EAAnB3B,EAAEY,EAA4BuD,EAAcpB,EAAE/C,GAA+B+D,EAAahB,EAAE/B,EAAahB,IAAxD6B,GAAq0B,SAAS0C,EAAOvE,GAAuE,IAApE,IAA4CgE,EAAQb,EAAQc,EAAxDT,EAAExD,EAAEM,OAAOhB,EAAEmD,EAAYe,EAAEA,GAAGJ,EAAKxC,EAAiCjB,EAAE,EAAEA,EAAE6D,EAAE7D,IAAI,CAAUwD,EAAM,GAAfc,EAAIjE,EAAEL,IAAesE,EAAI,IAAI,IAAIC,EAAEvE,EAAEuE,EAAEV,EAAEU,IAAcF,EAAWC,EAAhBjE,EAAEkE,GAAW,EAAY5E,EAAEK,EAAEuE,GAAGf,EAAMA,EAAMhB,KAAKC,MAAM4B,EAAQZ,GAAM9D,EAAEK,EAAEuE,GAAGF,EAAQb,EAAMC,EAAK9D,EAAEK,EAAE6D,GAAGL,EAAc,OAARZ,EAAKjD,GAAUA,EAAikE,SAASkF,EAAY5C,EAAM6C,GAAyG,IAAjG,IAAiEC,EAAYC,EAAzErE,EAAOsB,EAAMtB,OAAOsE,EAASnC,EAAYnC,GAAQ8C,EAAKxC,EAA2BiE,EAAU,EAAMlF,EAAEW,EAAO,EAAK,GAAHX,IAAOA,EAA8DkF,GAA3DF,EAAQE,EAAUzB,EAAKxB,EAAMjC,KAAG+E,EAAE9B,EAAS+B,EAAQF,IAA4BA,EAAOG,EAASjF,GAAK,EAAF+E,EAAI,MAAM,CAACE,EAAmB,EAAVC,GAAa,SAASC,EAAUC,EAAK1D,GAAG,IAAIO,EAAMpC,EAAEkC,EAAWL,GAAG,GAAGH,EAAsB,MAAM,CAAC,IAAIe,EAAa8C,EAAKnD,MAAMpC,EAAEoC,OAAO,IAAIK,EAAa8C,EAAKnD,MAAMpC,EAAEoC,QAAQ,IAAI5B,EAAE+E,EAAKnD,MAAMmB,EAAEvD,EAAEoC,MAAmB,GAAO,IAAJmB,EAAM,MAAM,IAAI9C,MAAM,yBAAyB,GAAG8E,EAAKhD,QAAS,OAAGvC,EAAEuC,QAAe,CAAC,IAAIC,EAAaY,EAAS5C,EAAE+C,IAAI,IAAIf,EAAahC,EAAE+C,IAAU,CAAC3B,EAAQ,GAAG2D,GAAM,GAAGvF,EAAEuC,QAAQ,CAAC,GAAO,IAAJgB,EAAM,MAAM,CAACgC,EAAK3D,EAAQ,IAAI,IAAO,GAAJ2B,EAAM,MAAM,CAACgC,EAAKC,SAAS5D,EAAQ,IAAI,IAAI6D,EAAI9C,KAAK8C,IAAIlC,GAAG,GAAGkC,EAAIrE,EAAK,CAA0BgE,EAASvC,GAAlCT,EAAM4C,EAAYxE,EAAEiF,IAAiC,IAAI,IAAIJ,EAAUjD,EAAM,GAAqC,OAA/BmD,EAAKlD,OAAKgD,GAAWA,GAA+B,iBAAXD,GAAwBG,EAAKlD,OAAOrC,EAAEqC,OAAK+C,GAAUA,GAAe,CAAC,IAAI5C,EAAa4C,GAAU,IAAI5C,EAAa6C,KAAkB,CAAC,IAAIlD,EAAWiD,EAASG,EAAKlD,OAAOrC,EAAEqC,MAAM,IAAIG,EAAa6C,IAAY9B,EAAE/B,EAAaiE,GAAK,IAAIC,EAAW1C,EAAWxC,EAAE+C,GAAG,IAAiB,IAAdmC,EAAgB,MAAM,CAAC9D,EAAQ,GAAG2D,GAAM,GAAgB,IAAbG,EAAe,MAAM,CAAC9D,EAAQ2D,EAAKlD,OAAOrC,EAAEqC,KAAK,GAAG,GAAGT,EAAQ,IAAyEwD,GAA3ChD,GAAvB5B,EAAEM,OAAOyC,EAAEzC,QAAQ,IAAp9F,SAAiBN,EAAE+C,GAAG,IAAmOoC,EAAcC,EAAMjC,EAAMU,EAAOlE,EAAE6D,EAAEkB,EAApQf,EAAI3D,EAAEM,OAAOsD,EAAIb,EAAEzC,OAAO8C,EAAKxC,EAAKyE,EAAO5C,EAAYM,EAAEzC,QAAQgF,EAA4BvC,EAAEa,EAAI,GAAGa,EAAOtC,KAAKU,KAAKO,GAAM,EAAEkC,IAA8BT,EAAUV,EAAcnE,EAAEyE,GAAQE,EAAQR,EAAcpB,EAAE0B,GAAqJ,IAAnGI,EAAUvE,QAAQqD,GAAIkB,EAAUxB,KAAK,GAAGsB,EAAQtB,KAAK,GAAGiC,EAA4BX,EAAQf,EAAI,GAAOwB,EAAMzB,EAAIC,EAAW,GAAPwB,EAASA,IAAQ,CAAwN,IAAvND,EAAc/B,EAAK,EAAKyB,EAAUO,EAAMxB,KAAO0B,IAA6BH,EAAchD,KAAKC,OAAOyC,EAAUO,EAAMxB,GAAKR,EAAKyB,EAAUO,EAAMxB,EAAI,IAAI0B,IAAqCzB,EAARV,EAAM,EAAWK,EAAEmB,EAAQrE,OAAWX,EAAE,EAAEA,EAAE6D,EAAE7D,IAAKwD,GAAOgC,EAAcR,EAAQhF,GAAG+E,EAAEvC,KAAKC,MAAMe,EAAMC,GAAMS,GAAQgB,EAAUO,EAAMzF,IAAIwD,EAAMuB,EAAEtB,GAAMD,EAAMuB,EAA8Cb,EAAzCA,EAAO,GAAGgB,EAAUO,EAAMzF,GAAGkE,EAAOT,GAAa,IAAOyB,EAAUO,EAAMzF,GAAGkE,EAAc,GAAG,KAAe,IAATA,GAAW,CAA0B,MAAzBsB,EAA6BxF,EAAZwD,EAAM,EAAUxD,EAAE6D,EAAE7D,IAAyFwD,GAApFA,GAAO0B,EAAUO,EAAMzF,GAAGyD,EAAKuB,EAAQhF,IAAY,GAAGkF,EAAUO,EAAMzF,GAAGwD,EAAMC,EAAW,IAAOyB,EAAUO,EAAMzF,GAAGwD,EAAY,GAAGU,GAAQV,EAAMkC,EAAOD,GAAOD,EAAyD,OAA3CN,EAAUL,EAAYK,EAAUJ,GAAQ,GAAS,CAACpC,EAAagD,GAAQhD,EAAawC,KAAY,SAAiB7E,EAAE+C,GAA0F,IAAvF,IAA0DwC,EAAMC,EAAKC,EAAMC,EAAMC,EAA7EhC,EAAI3D,EAAEM,OAAOsD,EAAIb,EAAEzC,OAAO+E,EAAO,GAAGO,EAAK,GAAGxC,EAAKxC,EAAwC+C,GAAuC,GAAlCiC,EAAKC,QAAQ7F,IAAI2D,IAAMpB,EAAKqD,GAASpD,EAAWoD,EAAK7C,GAAG,EAAGsC,EAAOhC,KAAK,OAArC,CAAkEoC,EAAMG,GAAvBJ,EAAKI,EAAKtF,QAAuB,GAAG8C,EAAKwC,EAAKJ,EAAK,GAAGE,EAAM3C,EAAEa,EAAI,GAAGR,EAAKL,EAAEa,EAAI,GAAWA,EAAL4B,IAAUC,GAAOA,EAAM,GAAGrC,GAAKmC,EAAMpD,KAAKU,KAAK4C,EAAMC,GAAO,EAAE,CAA8B,GAAGlD,EAAhCmD,EAAMxB,EAAcpB,EAAEwC,GAA2BK,IAAO,EAAE,MAAML,UAAcA,GAAOF,EAAOhC,KAAKkC,GAAOK,EAAKnC,EAASmC,EAAKD,GAAwB,OAAjBN,EAAOS,UAAgB,CAACzD,EAAagD,GAAQhD,EAAauD,MAAqyC5F,EAAE+C,IAA0C,GAAG,IAAqH6B,EAAjHmB,EAAMhB,EAAKlD,OAAOrC,EAAEqC,KAAKmE,EAAIpE,EAAM,GAAGqE,EAAMlB,EAAKlD,KAA0P,MAAM,CAAhM+C,EAAtC,iBAAXA,GAAwBmB,IAAMnB,GAAUA,GAAkB,IAAI5C,EAAa4C,IAAwB,IAAIjD,EAAWiD,EAASmB,GAAmDC,EAA5B,iBAANA,GAAmBC,IAAMD,GAAKA,GAAQ,IAAIhE,EAAagE,IAAc,IAAIrE,EAAWqE,EAAIC,IAA6vE,SAASzD,EAAWxC,EAAE+C,GAAG,GAAG/C,EAAEM,SAASyC,EAAEzC,OAAQ,OAAON,EAAEM,OAAOyC,EAAEzC,OAAO,GAAG,EAAE,IAAI,IAAIX,EAAEK,EAAEM,OAAO,EAAK,GAAHX,EAAKA,IAAK,GAAGK,EAAEL,KAAKoD,EAAEpD,GAAG,OAAOK,EAAEL,GAAGoD,EAAEpD,GAAG,GAAG,EAAE,OAAO,EAA0qI,SAASuG,EAAa7E,GAAG,IAAI7B,EAAE6B,EAAE4D,MAAM,OAAGzF,EAAE2G,cAAyB3G,EAAE4G,OAAO,IAAI5G,EAAE4G,OAAO,IAAI5G,EAAE4G,OAAO,OAAkB5G,EAAE6G,UAAU7G,EAAE8G,cAAc,IAAI9G,EAAE8G,cAAc,QAAmB9G,EAAE+G,OAAO,UAAZ,IAA4B,SAASC,EAAgBhH,EAAEQ,GAA0C,IAAvC,IAA+ByG,EAAI9G,EAAE+C,EAAjCgE,EAAMlH,EAAEmH,OAAO5D,EAAE2D,EAAMpH,EAAE,EAAgByD,EAAEsD,UAAStD,EAAEA,EAAE6D,OAAO,GAAGtH,IAAIuH,EAAK,IAAIlH,EAAE,EAAEA,EAAEK,EAAEM,OAAOX,IAAK,IAAGH,EAAE+G,OAAOvG,EAAEL,OAAa+C,EAAEhC,EAAOV,EAAEL,IAAImH,OAAO/D,EAAEvD,IAAQ2G,WAAUzD,EAAE0D,OAAOM,GAAxB,CAAwC,IAAID,EAAEnH,EAAE,EAAK,GAAHmH,EAAKA,IAAI,CAAqB,IAApB/D,EAAEA,EAAE6B,SAASyB,IAAIxG,IAAQ2G,SAAS,OAAO,EAAM,GAAGzD,EAAE0D,OAAOM,GAAO,SAASG,EAAK,OAAO,EAAM,OAAO,EAA9hkBlF,EAAWoF,UAAUC,OAAOC,OAAO7F,EAAQ2F,WAA6F/E,EAAa+E,UAAUC,OAAOC,OAAO7F,EAAQ2F,WAAyD9E,EAAa8E,UAAUC,OAAOC,OAAO7F,EAAQ2F,WAAg/CpF,EAAWoF,UAAUG,KAAtRvF,EAAWoF,UAAUjE,IAAI,SAASzB,GAAG,IAAI7B,EAAEkC,EAAWL,GAAG,GAAGS,KAAKD,OAAOrC,EAAEqC,KAAM,OAAOC,KAAK2B,SAASjE,EAAEwF,UAAU,IAAIhF,EAAE8B,KAAKF,MAAMmB,EAAEvD,EAAEoC,MAAM,OAAGpC,EAAEuC,QAAgB,IAAIJ,EAAW4B,EAASvD,EAAEmC,KAAK8C,IAAIlC,IAAIjB,KAAKD,MAAa,IAAIF,EAAW2B,EAAOtD,EAAE+C,GAAGjB,KAAKD,OAAmVG,EAAa+E,UAAUG,KAAhTlF,EAAa+E,UAAUjE,IAAI,SAASzB,GAAG,IAAI7B,EAAEkC,EAAWL,GAAOrB,EAAE8B,KAAKF,MAAM,GAAG5B,EAAE,IAAIR,EAAEqC,KAAM,OAAOC,KAAK2B,SAASjE,EAAEwF,UAAU,IAAIjC,EAAEvD,EAAEoC,MAAM,GAAGpC,EAAEuC,QAAQ,CAAC,GAAGG,EAAUlC,EAAE+C,GAAG,OAAO,IAAIf,EAAahC,EAAE+C,GAAGA,EAAE/B,EAAamB,KAAK8C,IAAIlC,IAAI,OAAO,IAAIpB,EAAW4B,EAASR,EAAEZ,KAAK8C,IAAIjF,IAAIA,EAAE,IAA2JiC,EAAa8E,UAAUG,KAAvHjF,EAAa8E,UAAUjE,IAAI,SAASzB,GAAG,OAAO,IAAIY,EAAaH,KAAKF,MAAMF,EAAWL,GAAGO,QAAswCD,EAAWoF,UAAUI,MAA/PxF,EAAWoF,UAAUtD,SAAS,SAASpC,GAAG,IAAI7B,EAAEkC,EAAWL,GAAG,GAAGS,KAAKD,OAAOrC,EAAEqC,KAAM,OAAOC,KAAKgB,IAAItD,EAAEwF,UAAU,IAAtrBhF,EAAE+C,EAAElB,EAAUD,EAA4qB5B,EAAE8B,KAAKF,MAAMmB,EAAEvD,EAAEoC,MAAM,OAAGpC,EAAEuC,QAAe+B,EAAc9D,EAAEmC,KAAK8C,IAAIlC,GAAGjB,KAAKD,OAAtwB7B,EAA+xBA,EAA7xB+C,EAA+xBA,EAA7xBlB,EAA+xBC,KAAKD,KAAhwB,GAAjBW,EAAWxC,EAAE+C,GAAOnB,EAAM6B,EAASzD,EAAE+C,IAAQnB,EAAM6B,EAASV,EAAE/C,GAAG6B,GAAMA,GAAiD,iBAA5CD,EAAMS,EAAaT,KAAsCC,IAAKD,GAAOA,GAAa,IAAII,EAAaJ,IAAc,IAAID,EAAWC,EAAMC,KAAg2BG,EAAa+E,UAAUI,MAAxPnF,EAAa+E,UAAUtD,SAAS,SAASpC,GAAG,IAAI7B,EAAEkC,EAAWL,GAAOrB,EAAE8B,KAAKF,MAAM,GAAG5B,EAAE,IAAIR,EAAEqC,KAAM,OAAOC,KAAKgB,IAAItD,EAAEwF,UAAU,IAAIjC,EAAEvD,EAAEoC,MAAM,OAAGpC,EAAEuC,QAAgB,IAAIC,EAAahC,EAAE+C,GAAUe,EAAcf,EAAEZ,KAAK8C,IAAIjF,GAAM,GAAHA,IAAyKiC,EAAa8E,UAAUI,MAA5HlF,EAAa8E,UAAUtD,SAAS,SAASpC,GAAG,OAAO,IAAIY,EAAaH,KAAKF,MAAMF,EAAWL,GAAGO,QAAqED,EAAWoF,UAAU/B,OAAO,WAAW,OAAO,IAAIrD,EAAWG,KAAKF,OAAOE,KAAKD,OAAOG,EAAa+E,UAAU/B,OAAO,WAAW,IAAInD,EAAKC,KAAKD,KAASuF,EAAM,IAAIpF,GAAcF,KAAKF,OAAwB,OAAjBwF,EAAMvF,MAAMA,EAAYuF,GAAOnF,EAAa8E,UAAU/B,OAAO,WAAW,OAAO,IAAI/C,GAAcH,KAAKF,QAAQD,EAAWoF,UAAU9B,IAAI,WAAW,OAAO,IAAItD,EAAWG,KAAKF,OAAM,IAAQI,EAAa+E,UAAU9B,IAAI,WAAW,OAAO,IAAIjD,EAAaG,KAAK8C,IAAInD,KAAKF,SAASK,EAAa8E,UAAU9B,IAAI,WAAW,OAAO,IAAIhD,EAAyB,GAAZH,KAAKF,MAASE,KAAKF,OAAOE,KAAKF,QAA2/CD,EAAWoF,UAAUM,MAA1c1F,EAAWoF,UAAUO,SAAS,SAASjG,GAAG,IAAmE4D,EAAzJsC,EAAGC,EAAuFhI,EAAEkC,EAAWL,GAAGrB,EAAE8B,KAAKF,MAAMmB,EAAEvD,EAAEoC,MAAMC,EAAKC,KAAKD,OAAOrC,EAAEqC,KAAS,GAAGrC,EAAEuC,QAAQ,CAAC,GAAO,IAAJgB,EAAM,OAAO3B,EAAQ,GAAG,GAAO,IAAJ2B,EAAM,OAAOjB,KAAK,IAAQ,IAALiB,EAAO,OAAOjB,KAAKkD,SAAyB,IAAhBC,EAAI9C,KAAK8C,IAAIlC,IAAUnC,EAAM,OAAO,IAAIe,EAAWwC,EAAcnE,EAAEiF,GAAKpD,GAAMkB,EAAE/B,EAAaiE,GAAK,OAA5VsC,EAA4WvH,EAAEM,OAA3WkH,EAAkXzE,EAAEzC,OAAe,IAAIqB,GAAhW,GAA5B,KAAK4F,EAAG,KAAKC,EAAG,MAAMD,EAAGC,EAAhd,SAASC,EAAkB/E,EAAEgF,GAAG,IAAIlI,EAAE2C,KAAKwF,IAAIjF,EAAEpC,OAAOoH,EAAEpH,QAAQ,GAAGd,GAAG,GAAG,OAAOuE,EAAarB,EAAEgF,GAAGlI,EAAE2C,KAAKU,KAAKrD,EAAE,GAAG,IAAIuD,EAAEL,EAAEkF,MAAMpI,GAAGQ,EAAE0C,EAAEkF,MAAM,EAAEpI,GAAGiH,EAAEiB,EAAEE,MAAMpI,GAAGK,EAAE6H,EAAEE,MAAM,EAAEpI,GAAOqI,EAAGJ,EAAkBzH,EAAEH,GAAGiI,EAAGL,EAAkB1E,EAAE0D,GAAGsB,EAAKN,EAAkBnE,EAAOtD,EAAE+C,GAAGO,EAAOzD,EAAE4G,IAAQzC,EAAQV,EAAOA,EAAOuE,EAAGzD,EAAUX,EAASA,EAASsE,EAAKF,GAAIC,GAAItI,IAAI4E,EAAU0D,EAAG,EAAEtI,IAAkB,OAAd+C,EAAKyB,GAAgBA,GAAseD,GAAjC/D,EAAE+C,GAAGlB,IAA6QG,EAAa+E,UAAUiB,iBAAiB,SAAShI,GAAG,OAAGkC,EAAUlC,EAAE4B,MAAME,KAAKF,OAAe,IAAII,EAAahC,EAAE4B,MAAME,KAAKF,OAAc0C,EAAsBnC,KAAK8C,IAAIjF,EAAE4B,OAAOZ,EAAamB,KAAK8C,IAAInD,KAAKF,QAAQE,KAAKD,OAAO7B,EAAE6B,OAAOF,EAAWoF,UAAUiB,iBAAiB,SAAShI,GAAG,OAAa,IAAVA,EAAE4B,MAAiBR,EAAQ,GAAgB,IAAVpB,EAAE4B,MAAiBE,MAAmB,IAAX9B,EAAE4B,MAAkBE,KAAKkD,SAAgBV,EAAsBnC,KAAK8C,IAAIjF,EAAE4B,OAAOE,KAAKF,MAAME,KAAKD,OAAO7B,EAAE6B,OAAgGG,EAAa+E,UAAUM,MAAhHrF,EAAa+E,UAAUO,SAAS,SAASjG,GAAG,OAAOK,EAAWL,GAAG2G,iBAAiBlG,OAAyKG,EAAa8E,UAAUM,MAA5HpF,EAAa8E,UAAUO,SAAS,SAASjG,GAAG,OAAO,IAAIY,EAAaH,KAAKF,MAAMF,EAAWL,GAAGO,QAA4VD,EAAWoF,UAAUxC,OAAO,WAAW,OAAO,IAAI5C,EAAW4C,EAAOzC,KAAKF,QAAO,IAAQI,EAAa+E,UAAUxC,OAAO,WAAW,IAAI3C,EAAME,KAAKF,MAAME,KAAKF,MAAM,OAAGM,EAAUN,GAAc,IAAII,EAAaJ,GAAc,IAAID,EAAW4C,EAAOvD,EAAamB,KAAK8C,IAAInD,KAAKF,UAAS,IAAQK,EAAa8E,UAAUxC,OAAO,SAASlD,GAAG,OAAO,IAAIY,EAAaH,KAAKF,MAAME,KAAKF,QAAs9GK,EAAa8E,UAAUkB,OAAOjG,EAAa+E,UAAUkB,OAA1KtG,EAAWoF,UAAUkB,OAAO,SAAS5G,GAAG,IAAIgE,EAAOP,EAAUhD,KAAKT,GAAG,MAAM,CAACuD,SAASS,EAAO,GAAGR,UAAUQ,EAAO,KAA6F1D,EAAWoF,UAAUH,OAAO,SAASvF,GAAG,OAAOyD,EAAUhD,KAAKT,GAAG,IAAIY,EAAa8E,UAAUmB,KAAKjG,EAAa8E,UAAUH,OAAO,SAASvF,GAAG,OAAO,IAAIY,EAAaH,KAAKF,MAAMF,EAAWL,GAAGO,QAAQI,EAAa+E,UAAUmB,KAAKlG,EAAa+E,UAAUH,OAAOjF,EAAWoF,UAAUmB,KAAKvG,EAAWoF,UAAUH,OAAOjF,EAAWoF,UAAUf,IAAI,SAAS3E,GAAG,OAAOyD,EAAUhD,KAAKT,GAAG,IAAIY,EAAa8E,UAAUf,IAAI/D,EAAa8E,UAAUlC,UAAU,SAASxD,GAAG,OAAO,IAAIY,EAAaH,KAAKF,MAAMF,EAAWL,GAAGO,QAAQI,EAAa+E,UAAUlC,UAAU7C,EAAa+E,UAAUf,IAAIrE,EAAWoF,UAAUlC,UAAUlD,EAAWoF,UAAUf,IAAIrE,EAAWoF,UAAUoB,IAAI,SAAS9G,GAAG,IAA2CO,EAAMc,EAAEgF,EAA/ClI,EAAEkC,EAAWL,GAAGrB,EAAE8B,KAAKF,MAAMmB,EAAEvD,EAAEoC,MAAgB,GAAO,IAAJmB,EAAM,OAAO3B,EAAQ,GAAG,GAAO,IAAJpB,EAAM,OAAOoB,EAAQ,GAAG,GAAO,IAAJpB,EAAM,OAAOoB,EAAQ,GAAG,IAAQ,IAALpB,EAAO,OAAOR,EAAE6G,SAASjF,EAAQ,GAAGA,GAAS,GAAG,GAAG5B,EAAEqC,KAAM,OAAOT,EAAQ,GAAG,IAAI5B,EAAEuC,QAAQ,MAAM,IAAI9B,MAAM,gBAAgBT,EAAE4I,WAAW,kBAAkB,GAAGtG,KAAKC,SAAYG,EAAUN,EAAMO,KAAKgG,IAAInI,EAAE+C,IAAI,OAAO,IAAIf,EAAaY,EAAShB,IAA4B,IAApBc,EAAEZ,KAAK4F,EAAEtG,EAAQ,IAAoB,EAAF2B,IAAS2E,EAAEA,EAAEL,MAAM3E,KAAKK,GAAS,IAAJA,GAAYA,GAAG,EAAEL,EAAEA,EAAE6B,SAAS,OAAOmD,GAAG1F,EAAa+E,UAAUoB,IAAIxG,EAAWoF,UAAUoB,IAAIlG,EAAa8E,UAAUoB,IAAI,SAAS9G,GAAG,IAAI7B,EAAEkC,EAAWL,GAAOrB,EAAE8B,KAAKF,MAAMmB,EAAEvD,EAAEoC,MAAUyG,EAAGlH,OAAO,GAAGmH,EAAGnH,OAAO,GAAGoH,EAAGpH,OAAO,GAAG,GAAG4B,IAAIsF,EAAG,OAAOjH,EAAQ,GAAG,GAAGpB,IAAIqI,EAAG,OAAOjH,EAAQ,GAAG,GAAGpB,IAAIsI,EAAG,OAAOlH,EAAQ,GAAG,GAAGpB,IAAImB,QAAQ,GAAG,OAAO3B,EAAE6G,SAASjF,EAAQ,GAAGA,GAAS,GAAG,GAAG5B,EAAEgJ,aAAa,OAAO,IAAIvG,EAAaoG,GAAgC,IAA5B,IAAI3F,EAAEZ,KAAS4F,EAAEtG,EAAQ,IAAmB2B,EAAEuF,KAAMA,IAAIZ,EAAEA,EAAEL,MAAM3E,KAAKK,GAAKA,IAAIsF,GAAStF,GAAGwF,EAAG7F,EAAEA,EAAE6B,SAAS,OAAOmD,GAAgWzF,EAAa8E,UAAUD,OAAO9E,EAAa+E,UAAUD,OAAlZnF,EAAWoF,UAAUD,OAAO,SAAS2B,EAAIzC,GAA6C,GAAxCyC,EAAI/G,EAAW+G,IAAKzC,EAAItE,EAAWsE,IAAY0C,SAAS,MAAM,IAAIzI,MAAM,qCAAyE,IAApC,IAAIX,EAAE8B,EAAQ,GAAGgC,EAAKtB,KAAKkE,IAAIA,GAAWyC,EAAIE,cAAa,CAAC,GAAGvF,EAAKsF,SAAS,OAAOtH,EAAQ,GAAMqH,EAAIG,UAAQtJ,EAAEA,EAAEgI,SAASlE,GAAM4C,IAAIA,IAAKyC,EAAIA,EAAI7B,OAAO,GAAGxD,EAAKA,EAAKmB,SAASyB,IAAIA,GAAK,OAAO1G,GAAuPqC,EAAWoF,UAAUvE,WAAW,SAASnB,GAAG,IAAI7B,EAAEkC,EAAWL,GAAGrB,EAAE8B,KAAKF,MAAMmB,EAAEvD,EAAEoC,MAAM,OAAGpC,EAAEuC,QAAe,EAASS,EAAWxC,EAAE+C,IAAIf,EAAa+E,UAAUvE,WAAW,SAASnB,GAAG,IAAI7B,EAAEkC,EAAWL,GAAGrB,EAAEmC,KAAK8C,IAAInD,KAAKF,OAAOmB,EAAEvD,EAAEoC,MAAM,OAAGpC,EAAEuC,QAA8B/B,KAArB+C,EAAEZ,KAAK8C,IAAIlC,IAAgB,EAAIA,EAAF/C,EAAI,GAAG,GAAS,GAAGiC,EAAa8E,UAAUvE,WAAW,SAASnB,GAAG,IAAIrB,EAAE8B,KAAKF,MAAUmB,EAAErB,EAAWL,GAAGO,MAA8B,OAAxB5B,EAAK,GAAHA,EAAKA,GAAGA,MAAE+C,EAAK,GAAHA,EAAKA,GAAGA,GAAe,EAAIA,EAAF/C,EAAI,GAAG,GAAmQ2B,EAAWoF,UAAU8B,UAArRlH,EAAWoF,UAAU+B,QAAQ,SAASzH,GAAG,GAAGA,IAAI0H,EAAAA,EAAU,OAAO,EAAE,GAAG1H,KAAK0H,EAAAA,EAAU,OAAO,EAAE,IAAIvJ,EAAEkC,EAAWL,GAAGrB,EAAE8B,KAAKF,MAAMmB,EAAEvD,EAAEoC,MAAM,OAAGE,KAAKD,OAAOrC,EAAEqC,KAAarC,EAAEqC,KAAK,GAAG,EAAKrC,EAAEuC,QAAgBD,KAAKD,MAAM,EAAE,EAASW,EAAWxC,EAAE+C,IAAIjB,KAAKD,MAAM,EAAE,IAAkSG,EAAa+E,UAAU8B,UAAzP7G,EAAa+E,UAAU+B,QAAQ,SAASzH,GAAG,GAAGA,IAAI0H,EAAAA,EAAU,OAAO,EAAE,GAAG1H,KAAK0H,EAAAA,EAAU,OAAO,EAAE,IAAIvJ,EAAEkC,EAAWL,GAAGrB,EAAE8B,KAAKF,MAAMmB,EAAEvD,EAAEoC,MAAM,OAAGpC,EAAEuC,QAAgB/B,GAAG+C,EAAE,EAAIA,EAAF/C,EAAI,GAAG,EAAKA,EAAE,IAAIR,EAAEqC,KAAa7B,EAAE,GAAG,EAAE,EAASA,EAAE,EAAE,GAAG,GAAuOiC,EAAa8E,UAAU8B,UAA3L5G,EAAa8E,UAAU+B,QAAQ,SAASzH,GAAG,GAAGA,IAAI0H,EAAAA,EAAU,OAAO,EAAE,GAAG1H,KAAK0H,EAAAA,EAAU,OAAO,EAAE,IAAI/I,EAAE8B,KAAKF,MAAUmB,EAAErB,EAAWL,GAAGO,MAAM,OAAO5B,IAAI+C,EAAE,EAAIA,EAAF/C,EAAI,GAAG,GAAuIiC,EAAa8E,UAAUiC,GAAG/G,EAAa8E,UAAUX,OAAOpE,EAAa+E,UAAUiC,GAAGhH,EAAa+E,UAAUX,OAAOzE,EAAWoF,UAAUiC,GAAzMrH,EAAWoF,UAAUX,OAAO,SAAS/E,GAAG,OAAyB,IAAlBS,KAAKgH,QAAQzH,IAAmPY,EAAa8E,UAAUkC,IAAIhH,EAAa8E,UAAUmC,UAAUlH,EAAa+E,UAAUkC,IAAIjH,EAAa+E,UAAUmC,UAAUvH,EAAWoF,UAAUkC,IAApNtH,EAAWoF,UAAUmC,UAAU,SAAS7H,GAAG,OAAyB,IAAlBS,KAAKgH,QAAQzH,IAA2PY,EAAa8E,UAAUoC,GAAGlH,EAAa8E,UAAUqC,QAAQpH,EAAa+E,UAAUoC,GAAGnH,EAAa+E,UAAUqC,QAAQzH,EAAWoF,UAAUoC,GAA1MxH,EAAWoF,UAAUqC,QAAQ,SAAS/H,GAAG,OAAuB,EAAhBS,KAAKgH,QAAQzH,IAA+OY,EAAa8E,UAAUsC,GAAGpH,EAAa8E,UAAUR,OAAOvE,EAAa+E,UAAUsC,GAAGrH,EAAa+E,UAAUR,OAAO5E,EAAWoF,UAAUsC,GAAvM1H,EAAWoF,UAAUR,OAAO,SAASlF,GAAG,OAAOS,KAAKgH,QAAQzH,GAAG,GAAmPY,EAAa8E,UAAUuC,IAAIrH,EAAa8E,UAAUwC,gBAAgBvH,EAAa+E,UAAUuC,IAAItH,EAAa+E,UAAUwC,gBAAgB5H,EAAWoF,UAAUuC,IAArO3H,EAAWoF,UAAUwC,gBAAgB,SAASlI,GAAG,OAAwB,GAAjBS,KAAKgH,QAAQzH,IAAoRY,EAAa8E,UAAUyC,IAAIvH,EAAa8E,UAAU0C,eAAezH,EAAa+E,UAAUyC,IAAIxH,EAAa+E,UAAU0C,eAAe9H,EAAWoF,UAAUyC,IAAlO7H,EAAWoF,UAAU0C,eAAe,SAASpI,GAAG,OAAOS,KAAKgH,QAAQzH,IAAI,GAAkMM,EAAWoF,UAAUV,OAAO,WAAW,OAA0B,IAAL,EAAdvE,KAAKF,MAAM,KAAWI,EAAa+E,UAAUV,OAAO,WAAW,OAAuB,IAAL,EAAXvE,KAAKF,QAAcK,EAAa8E,UAAUV,OAAO,WAAW,OAAOvE,KAAKF,MAAMT,OAAO,MAAMA,OAAO,IAAIQ,EAAWoF,UAAU6B,MAAM,WAAW,OAA0B,IAAL,EAAd9G,KAAKF,MAAM,KAAWI,EAAa+E,UAAU6B,MAAM,WAAW,OAAuB,IAAL,EAAX9G,KAAKF,QAAcK,EAAa8E,UAAU6B,MAAM,WAAW,OAAO9G,KAAKF,MAAMT,OAAO,MAAMA,OAAO,IAAIQ,EAAWoF,UAAU4B,WAAW,WAAW,OAAO7G,KAAKD,MAAwEI,EAAa8E,UAAU4B,WAAzF3G,EAAa+E,UAAU4B,WAAW,WAAW,OAAkB,EAAX7G,KAAKF,OAA6ED,EAAWoF,UAAUyB,WAAW,WAAW,OAAO1G,KAAKD,MAAwEI,EAAa8E,UAAUyB,WAAzFxG,EAAa+E,UAAUyB,WAAW,WAAW,OAAO1G,KAAKF,MAAM,GAAuED,EAAWoF,UAAUZ,OAAO,WAAW,OAAO,GAAOnE,EAAa+E,UAAUZ,OAAO,WAAW,OAA8B,IAAvBhE,KAAK8C,IAAInD,KAAKF,QAAYK,EAAa8E,UAAUZ,OAAO,WAAW,OAAOrE,KAAKmD,MAAMrD,QAAQT,OAAO,IAAIQ,EAAWoF,UAAU2B,OAAO,WAAW,OAAO,GAAO1G,EAAa+E,UAAU2B,OAAO,WAAW,OAAoB,IAAb5G,KAAKF,OAAWK,EAAa8E,UAAU2B,OAAO,WAAW,OAAO5G,KAAKF,QAAQT,OAAO,IAAqMc,EAAa8E,UAAUT,cAActE,EAAa+E,UAAUT,cAA7P3E,EAAWoF,UAAUT,cAAc,SAASjF,GAAG,IAAI7B,EAAEkC,EAAWL,GAAG,OAAG7B,EAAEkJ,aAAyBlJ,EAAE2G,WAA0C,IAAlB3G,EAAEgD,WAAW,GAAcV,KAAKuE,SAAgBvE,KAAKkE,IAAIxG,GAAGkJ,YAAyjCzG,EAAa8E,UAAU2C,QAAQ1H,EAAa+E,UAAU2C,QAAlc/H,EAAWoF,UAAU2C,QAAQ,SAASC,GAAQ,IAAID,EAAQxD,EAAapE,MAAM,GAAG4H,IAAU/I,EAAU,OAAO+I,EAAQ,IAAIlK,EAAEsC,KAAKmD,MAAU2E,EAAKpK,EAAEqK,YAAY,GAAGD,GAAM,GAAG,OAAOpD,EAAgBhH,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAmG,IAA9F,IAAIsK,EAAK3H,KAAK4H,IAAI,GAAGH,EAAKI,aAAiBvK,EAAE0C,KAAKU,MAAc,IAAT8G,EAAc,EAAExH,KAAKgG,IAAI2B,EAAK,GAAGA,GAAc9J,EAAE,GAAGL,EAAE,EAAEA,EAAEF,EAAEE,IAAKK,EAAEqD,KAAK3C,EAAOf,EAAE,IAAI,OAAO6G,EAAgBhH,EAAEQ,IAAyXiC,EAAa8E,UAAUkD,gBAAgBjI,EAAa+E,UAAUkD,gBAAxVtI,EAAWoF,UAAUkD,gBAAgB,SAASC,GAAY,IAAIR,EAAQxD,EAAapE,MAAM,GAAG4H,IAAU/I,EAAU,OAAO+I,EAAmE,IAA3D,IAAIlK,EAAEsC,KAAKmD,MAAUxF,EAAEyK,IAAavJ,EAAU,EAAEuJ,EAAmBlK,EAAE,GAAGL,EAAE,EAAEA,EAAEF,EAAEE,IAAKK,EAAEqD,KAAK3C,EAAOyJ,YAAY,EAAE3K,EAAE2H,MAAM,KAAK,OAAOX,EAAgBhH,EAAEQ,IAA4iBiC,EAAa8E,UAAUqD,OAAOpI,EAAa+E,UAAUqD,OAA1ezI,EAAWoF,UAAUqD,OAAO,SAAS5K,GAAmF,IAAhF,IAAkEkF,EAAE2F,EAAMC,EAAtE7K,EAAEiB,EAAO6J,KAAKC,EAAK9J,EAAO+J,IAAInL,EAAEoC,EAAWlC,GAAGkL,EAAK5I,KAAKmD,OAA2ByF,EAAKhC,UAAUhE,EAAEpF,EAAEsH,OAAO8D,GAAML,EAAM5K,EAAE6K,EAAMhL,EAAEG,EAAE+K,EAAKlL,EAAEoL,EAAKF,EAAKH,EAAM5G,SAASiB,EAAE4C,SAASkD,IAAOE,EAAKJ,EAAM7G,SAASiB,EAAE4C,SAASoD,IAAO,IAAIpL,EAAE6G,SAAS,MAAM,IAAIlG,MAAM6B,KAAKsG,WAAW,QAAQ5I,EAAE4I,WAAW,qBAAsD,OAAd,IAAhB3I,EAAEqJ,QAAQ,KAASrJ,EAAEA,EAAEqD,IAAItD,IAAMsC,KAAK0G,aAAqB/I,EAAEuF,SAAgBvF,GAA2FkC,EAAWoF,UAAUF,KAAK,WAAW,IAAIjF,EAAME,KAAKF,MAAM,OAAGE,KAAKD,KAAaiC,EAAclC,EAAM,EAAEE,KAAKD,MAAa,IAAIF,EAAW4B,EAAS3B,EAAM,GAAGE,KAAKD,OAAOG,EAAa+E,UAAUF,KAAK,WAAW,IAAIjF,EAAME,KAAKF,MAAM,OAAGA,EAAM,EAAEd,EAAe,IAAIkB,EAAaJ,EAAM,GAAU,IAAID,EAAWZ,GAAY,IAAQkB,EAAa8E,UAAUF,KAAK,WAAW,OAAO,IAAI5E,EAAaH,KAAKF,MAAMT,OAAO,KAAKQ,EAAWoF,UAAUJ,KAAK,WAAW,IAAI/E,EAAME,KAAKF,MAAM,OAAGE,KAAKD,KAAa,IAAIF,EAAW4B,EAAS3B,EAAM,IAAG,GAAakC,EAAclC,EAAM,EAAEE,KAAKD,OAAOG,EAAa+E,UAAUJ,KAAK,WAAW,IAAI/E,EAAME,KAAKF,MAAM,OAAYd,EAATc,EAAM,EAAkB,IAAII,EAAaJ,EAAM,GAAU,IAAID,EAAWZ,GAAY,IAAOkB,EAAa8E,UAAUJ,KAAK,WAAW,OAAO,IAAI1E,EAAaH,KAAKF,MAAMT,OAAO,KAAyB,IAApB,IAAIwJ,EAAY,CAAC,GAAS,EAAEA,EAAYA,EAAYrK,OAAO,IAAIM,GAAK+J,EAAYtH,KAAK,EAAEsH,EAAYA,EAAYrK,OAAO,IAAI,IAAIsK,EAAcD,EAAYrK,OAAOuK,EAAcF,EAAYC,EAAc,GAAG,SAASE,EAActL,GAAG,OAAO2C,KAAK8C,IAAIzF,IAAIoB,EAA6jC,SAASmK,EAAQrI,EAAEgF,EAAEsD,GAAItD,EAAEhG,EAAWgG,GAAiK,IAA9J,IAAIuD,EAAMvI,EAAE8F,aAAa0C,EAAMxD,EAAEc,aAAiB2C,EAAKF,EAAMvI,EAAE0I,MAAM1I,EAAE2I,EAAKH,EAAMxD,EAAE0D,MAAM1D,EAAM4D,EAAO,EAAEC,EAAO,EAAMC,EAAQ,KAAKC,EAAQ,KAASpG,EAAO,IAAU8F,EAAKzC,WAAW2C,EAAK3C,UAAgD4C,GAAtCE,EAAQ1G,EAAUqG,EAAKN,IAA8B,GAAGb,aAAgBiB,IAAOK,EAAOT,EAAc,EAAES,GAA6CC,GAAtCE,EAAQ3G,EAAUuG,EAAKR,IAA8B,GAAGb,aAAgBkB,IAAOK,EAAOV,EAAc,EAAEU,GAAOJ,EAAKK,EAAQ,GAAGH,EAAKI,EAAQ,GAAGpG,EAAOhC,KAAK2H,EAAGM,EAAOC,IAAkE,IAAzD,IAAIvI,EAA8B,IAA1BgI,EAAGC,EAAM,EAAE,EAAEC,EAAM,EAAE,GAAOxK,GAAQ,GAAGA,EAAO,GAAWf,EAAE0F,EAAO/E,OAAO,EAAK,GAAHX,IAAKA,EAAMqD,EAAIA,EAAIsE,SAASuD,GAAe/H,IAAIpC,EAAO2E,EAAO1F,KAAK,OAAOqD,EAAn3Cf,EAAa8E,UAAU3C,UAAUpC,EAAa+E,UAAU3C,UAA/ZzC,EAAWoF,UAAU3C,UAAU,SAAS/C,GAAG,IAAI7B,EAAEkC,EAAWL,GAAG2I,aAAa,IAAIc,EAActL,GAAI,MAAM,IAAIS,MAAMyL,OAAOlM,GAAG,+BAA+B,GAAGA,EAAE,EAAE,OAAOsC,KAAK6J,YAAYnM,GAAG,IAAI6F,EAAOvD,KAAK,GAAGuD,EAAOqD,SAAS,OAAOrD,EAAO,KAASuF,GAAHpL,GAAkB6F,EAAOA,EAAOiC,SAASuD,GAAerL,GAAGoL,EAAc,EAAE,OAAOvF,EAAOiC,SAASqD,EAAYnL,KAAknByC,EAAa8E,UAAU4E,WAAW3J,EAAa+E,UAAU4E,WAArkBhK,EAAWoF,UAAU4E,WAAW,SAAStK,GAAG,IAAIuK,EAAWpM,EAAEkC,EAAWL,GAAG2I,aAAa,IAAIc,EAActL,GAAI,MAAM,IAAIS,MAAMyL,OAAOlM,GAAG,+BAA+B,GAAGA,EAAE,EAAE,OAAOsC,KAAKsC,WAAW5E,GAAmB,IAAhB,IAAI6F,EAAOvD,KAAc8I,GAAHpL,GAAiB,CAAC,GAAG6F,EAAOqD,UAAUrD,EAAOmD,cAAcnD,EAAOc,SAAS,OAAOd,EAA8CA,GAAvCuG,EAAO9G,EAAUO,EAAOwF,IAA6B,GAAGrC,aAAaoD,EAAO,GAAGjF,OAAOiF,EAAO,GAAGpM,GAAGoL,EAAc,EAA0C,OAAxCgB,EAAO9G,EAAUO,EAAOsF,EAAYnL,KAAkB,GAAGgJ,aAAaoD,EAAO,GAAGjF,OAAOiF,EAAO,IAA+0B3J,EAAa8E,UAAUqE,IAAIpJ,EAAa+E,UAAUqE,IAAnHzJ,EAAWoF,UAAUqE,IAAI,WAAW,OAAOtJ,KAAKkD,SAAS2B,QAA8K1E,EAAa8E,UAAU8E,IAAI7J,EAAa+E,UAAU8E,IAAzIlK,EAAWoF,UAAU8E,IAAI,SAASrM,GAAG,OAAOuL,EAAQjJ,KAAKtC,EAAE,SAASQ,EAAE+C,GAAG,OAAO/C,EAAE+C,KAA0Kd,EAAa8E,UAAU+E,GAAG9J,EAAa+E,UAAU+E,GAAvInK,EAAWoF,UAAU+E,GAAG,SAAStM,GAAG,OAAOuL,EAAQjJ,KAAKtC,EAAE,SAASQ,EAAE+C,GAAG,OAAO/C,EAAE+C,KAAwKd,EAAa8E,UAAUgF,IAAI/J,EAAa+E,UAAUgF,IAAzIpK,EAAWoF,UAAUgF,IAAI,SAASvM,GAAG,OAAOuL,EAAQjJ,KAAKtC,EAAE,SAASQ,EAAE+C,GAAG,OAAO/C,EAAE+C,KAAoF,IAAIiJ,EAAU,GAAG,GAAGC,GAAYrL,GAAMA,IAAOA,GAAMA,GAAMoL,EAAU,SAASE,EAAS1M,GAAG,IAAI6B,EAAE7B,EAAEoC,MAAMc,EAAa,iBAAJrB,EAAaA,EAAE2K,EAAqB,iBAAJ3K,EAAaA,EAAEF,OAAO6K,GAAW3K,EAAE,GAAGA,EAAE,GAAGT,EAAKqL,EAAW,OAAOvJ,GAAGA,EAAwjB,SAASiF,EAAI3H,EAAE+C,GAAmC,OAAhC/C,EAAE0B,EAAW1B,GAAG+C,EAAErB,EAAWqB,GAAU/C,EAAEoJ,QAAQrG,GAAG/C,EAAE+C,EAAE,SAASoJ,EAAInM,EAAE+C,GAAmC,OAAhC/C,EAAE0B,EAAW1B,GAAG+C,EAAErB,EAAWqB,GAAU/C,EAAEuG,OAAOxD,GAAG/C,EAAE+C,EAAE,SAASqJ,EAAIpM,EAAE+C,GAA+C,GAA5C/C,EAAE0B,EAAW1B,GAAGiF,MAAMlC,EAAErB,EAAWqB,GAAGkC,MAASjF,EAAEoG,OAAOrD,GAAG,OAAO/C,EAAE,GAAGA,EAAE0I,SAAS,OAAO3F,EAAE,GAAGA,EAAE2F,SAAS,OAAO1I,EAAuB,IAArB,IAAiByG,EAAEhH,EAAfI,EAAEuB,EAAQ,GAAapB,EAAEqG,UAAUtD,EAAEsD,UAAUI,EAAE0F,EAAID,EAASlM,GAAGkM,EAASnJ,IAAI/C,EAAEA,EAAE4G,OAAOH,GAAG1D,EAAEA,EAAE6D,OAAOH,GAAG5G,EAAEA,EAAEyH,SAASb,GAAG,KAAMzG,EAAEqG,UAAUrG,EAAEA,EAAE4G,OAAOsF,EAASlM,IAAI,EAAE,CAAC,KAAM+C,EAAEsD,UAAUtD,EAAEA,EAAE6D,OAAOsF,EAASnJ,IAAO/C,EAAEoJ,QAAQrG,KAAItD,EAAEsD,EAAEA,EAAE/C,EAAEA,EAAEP,GAAEsD,EAAEA,EAAEU,SAASzD,UAAU+C,EAAE2F,UAAU,OAAO7I,EAAEsG,SAASnG,EAAEA,EAAEsH,SAASzH,GAA5qBoC,EAAa8E,UAAU8C,UAAU7H,EAAa+E,UAAU8C,UAA1RlI,EAAWoF,UAAU8C,UAAU,WAAW,IAAIrK,EAAEsC,KAAmE,OAA3DtC,EAAEqJ,UAAUnI,EAAO,IAAI,IAAGlB,EAAEA,EAAEwF,SAASvB,SAAS/C,EAAO,KAAgC,IAAzBlB,EAAEqJ,UAAUnI,EAAO,IAAgBA,EAAO,GAAUA,EAA7Z,SAAS2L,EAAiBzK,EAAMwB,GAAM,GAAGA,EAAKyF,UAAUjH,IAAQ,EAAE,CAAC,IAAI0K,EAAID,EAAiBzK,EAAMwB,EAAKmB,OAAOnB,IAAWjD,EAAEmM,EAAInM,EAAMZ,EAAE+M,EAAI/M,EAAME,EAAEU,EAAEmH,SAASlE,GAAM,OAAO3D,EAAEoJ,UAAUjH,IAAQ,EAAE,CAACzB,EAAEV,EAAEF,EAAI,EAAFA,EAAI,GAAG,CAACY,EAAEA,EAAEZ,EAAI,EAAFA,GAAK,MAAM,CAACY,EAAEO,EAAO,GAAGnB,EAAE,GAAoL8M,CAAiB7M,EAAEkB,EAAO,IAAInB,GAAGuD,IAAIpC,EAAO,KAAuuC,IAAIe,EAAU,SAAS8K,EAAKnJ,EAAK7B,EAASC,GAAeD,EAASA,GAAUN,EAAiBsL,EAAKb,OAAOa,GAAU/K,IAAe+K,EAAKA,EAAKC,cAAcjL,EAASA,EAASiL,eAA4F,IAA9E,IAAIlM,EAAOiM,EAAKjM,OAAiBmM,EAAQtK,KAAK8C,IAAI7B,GAAUsJ,EAAe,GAAO/M,EAAE,EAAEA,EAAE4B,EAASjB,OAAOX,IAAK+M,EAAenL,EAAS5B,IAAIA,EAAE,IAAIA,EAAE,EAAEA,EAAEW,EAAOX,IAAI,CAAe,GAAO,OAAjBE,EAAE0M,EAAK5M,MAA0BE,KAAK6M,GAAmBA,EAAe7M,IAAI4M,GAAQ,CAAC,GAAO,MAAJ5M,GAAmB,IAAV4M,EAAY,SAAS,MAAM,IAAIxM,MAAMJ,EAAE,iCAAiCuD,EAAK,MAAOA,EAAK1B,EAAW0B,GAAM,IAAuFvD,EAAnF8M,EAAO,GAAOnE,EAAqB,MAAV+D,EAAK,GAAS,IAAI5M,EAAE6I,EAAW,EAAE,EAAE7I,EAAE4M,EAAKjM,OAAOX,IAAI,CAAe,IAAVE,EAAE0M,EAAK5M,MAAW+M,EAAeC,EAAOtJ,KAAK3B,EAAWgL,EAAe7M,SAAU,CAAA,GAAO,MAAJA,EAAoH,MAAM,IAAII,MAAMJ,EAAE,6BAAjH,IAAZ,IAAI+M,EAAMjN,EAAyB,MAAV4M,IAAV5M,IAAyBA,EAAE4M,EAAKjM,SAAQqM,EAAOtJ,KAAK3B,EAAW6K,EAAK3E,MAAMgF,EAAM,EAAEjN,MAAyD,OAAOkN,EAAmBF,EAAOvJ,EAAKoF,IAAa,SAASqE,EAAmBF,EAAOvJ,EAAKoF,GAAgD,IAApC,IAAIsE,EAAI1L,EAAQ,GAAG+G,EAAI/G,EAAQ,GAASzB,EAAEgN,EAAOrM,OAAO,EAAK,GAAHX,EAAKA,IAAKmN,EAAIA,EAAIhK,IAAI6J,EAAOhN,GAAG0H,MAAMc,IAAMA,EAAIA,EAAId,MAAMjE,GAAM,OAAOoF,EAAWsE,EAAI9H,SAAS8H,EAAgJ,SAASC,EAAOvN,EAAE4D,GAAwB,IAAlBA,EAAK1C,EAAO0C,IAAcsF,SAAS,CAAC,GAAGlJ,EAAEkJ,SAAS,MAAM,CAAC9G,MAAM,CAAC,GAAG4G,YAAW,GAAO,MAAM,IAAIvI,MAAM,6CAA6C,GAAGmD,EAAKgD,QAAQ,GAAG,CAAC,GAAG5G,EAAEkJ,SAAS,MAAM,CAAC9G,MAAM,CAAC,GAAG4G,YAAW,GAAO,GAAGhJ,EAAEgJ,aAAa,MAAM,CAAC5G,MAAM,GAAGyC,OAAO2I,MAAM,GAAGrK,MAAMqK,MAAM,KAAKrK,OAAOnD,EAAEwK,eAAeiD,IAAItK,MAAMoE,UAAUmG,QAAQ,CAAC,EAAE,KAAK1E,YAAW,GAAO,IAAIlG,EAAIK,MAAMqK,MAAM,KAAKrK,MAAMnD,EAAEwK,aAAa,IAAIiD,IAAItK,MAAMoE,UAAUmG,QAAQ,CAAC,EAAE,IAAqB,OAAjB5K,EAAIuD,QAAQ,CAAC,IAAU,CAACjE,MAAM,GAAGyC,OAAO2I,MAAM,GAAG1K,GAAKkG,YAAW,GAAO,IAAI2E,GAAI,EAA+D,GAAtD3N,EAAEgJ,cAAcpF,EAAKuF,eAAcwE,GAAI,EAAK3N,EAAEA,EAAEyF,OAAS7B,EAAK+C,SAAU,OAAG3G,EAAEkJ,SAAe,CAAC9G,MAAM,CAAC,GAAG4G,YAAW,GAAa,CAAC5G,MAAMe,MAAMqK,MAAM,KAAKrK,MAAMnD,EAAEwK,eAAeiD,IAAIG,OAAOrG,UAAUmG,QAAQ,GAAG1E,WAAW2E,GAAkC,IAA7B,IAAsBlF,EAAlBoF,EAAI,GAAOC,EAAK9N,EAAe8N,EAAK9E,cAAqC,GAAvB8E,EAAK9K,WAAWY,IAAS,CAA0BkK,GAAzBrF,EAAOqF,EAAKrF,OAAO7E,IAAkBwB,SAAS,IAAI2I,EAAMtF,EAAOpD,UAAa0I,EAAM/E,eAAc+E,EAAMnK,EAAK+D,MAAMoG,GAAOtI,MAAMqI,EAAKA,EAAKzG,QAAOwG,EAAIhK,KAAKkK,EAAMvD,cAA0C,OAA5BqD,EAAIhK,KAAKiK,EAAKtD,cAAoB,CAACpI,MAAMyL,EAAIvH,UAAU0C,WAAW2E,GAAK,SAASK,EAAahO,EAAE4D,EAAK7B,GAAU,IAAIe,EAAIyK,EAAOvN,EAAE4D,GAAM,OAAOd,EAAIkG,WAAW,IAAI,IAAIlG,EAAIV,MAAMqL,IAAI,SAASvK,GAAG,OAA9zC6K,EAA+0C7K,IAA/zCnB,GAAVA,EAA20CA,IAA9yCN,GAAmCX,OAAeiB,EAASgM,GAAa,IAAIA,EAAM,IAAxI,IAAmBA,EAAMhM,IAAu1CkM,KAAK,IAA8vC,SAASC,EAAiBrM,GAAG,GAAGa,GAAWb,GAAG,CAAC,IAAIqB,GAAGrB,EAAE,GAAGqB,IAAIE,EAASF,GAAG,OAAOxB,EAAqB,IAAIe,EAAad,OAAOuB,IAAI,IAAIV,EAAaU,GAAG,MAAM,IAAIzC,MAAM,oBAAoBoB,GAAG,IAAIQ,EAAY,MAAPR,EAAE,GAAYQ,IAAKR,EAAEA,EAAEuG,MAAM,IAAG,IAAI+F,EAAMtM,EAAEsM,MAAM,MAAM,GAAgB,EAAbA,EAAMrN,OAAS,MAAM,IAAIL,MAAM,oBAAoB0N,EAAMF,KAAK,MAAM,GAAkB,IAAfE,EAAMrN,OAAW,CAAC,IAAImI,EAAIkF,EAAM,GAA6C,GAA9B,MAATlF,EAAI,KAASA,EAAIA,EAAIb,MAAM,KAAGa,GAAKA,KAAa7F,EAAS6F,KAAOvG,EAAUuG,GAAK,MAAM,IAAIxI,MAAM,oBAAoBwI,EAAI,6BAA6B,IAAI8D,EAAKoB,EAAM,GAAOC,EAAarB,EAAKsB,QAAQ,KAAoH,GAA9F,GAAdD,IAAiBnF,GAAK8D,EAAKjM,OAAOsN,EAAa,EAAErB,EAAKA,EAAK3E,MAAM,EAAEgG,GAAcrB,EAAK3E,MAAMgG,EAAa,IAAMnF,EAAI,EAAE,MAAM,IAAIxI,MAAM,sDAAuFoB,EAAjCkL,GAAM,IAAI5J,MAAM8F,EAAI,GAAGgF,KAAK,KAAkD,IAA1B,kBAAkBK,KAAKzM,GAAe,MAAM,IAAIpB,MAAM,oBAAoBoB,GAAG,GAAGH,EAAsB,OAAO,IAAIe,EAAad,OAAOU,EAAK,IAAIR,EAAEA,IAA+C,IAA3C,IAAI/B,EAAE,GAAGqI,EAAItG,EAAEf,OAAOkD,EAAE3C,EAASsL,EAAIxE,EAAInE,EAAY,EAAJmE,GAAOrI,EAAE+D,MAAMhC,EAAEuG,MAAMuE,EAAIxE,KAAMwE,GAAK3I,GAAS,IAAE2I,EAAI,GAAExE,GAAKnE,EAAU,OAARjB,EAAKjD,GAAU,IAAIqC,EAAWrC,EAAEuC,GAA6O,SAASH,EAAWL,GAAG,MAAc,iBAAJA,EAAxQ,SAA0BA,GAAG,GAAGH,EAAsB,OAAO,IAAIe,EAAad,OAAOE,IAAI,GAAGa,EAAUb,GAAG,CAAC,GAAGA,IAAIuB,EAASvB,GAAG,MAAM,IAAIpB,MAAMoB,EAAE,uBAAuB,OAAO,IAAIW,EAAaX,GAAG,OAAOqM,EAAiBrM,EAAE+G,YAAkE2F,CAAiB1M,GAAiB,iBAAJA,EAAqBqM,EAAiBrM,GAAiB,iBAAJA,EAAqB,IAAIY,EAAaZ,GAAUA,EAA3uFM,EAAWoF,UAAUiH,QAAQ,SAAS1M,GAAO,OAAOyL,EAAOjL,KAAKR,IAAQU,EAAa+E,UAAUiH,QAAQ,SAAS1M,GAAO,OAAOyL,EAAOjL,KAAKR,IAAQW,EAAa8E,UAAUiH,QAAQ,SAAS1M,GAAO,OAAOyL,EAAOjL,KAAKR,IAAQK,EAAWoF,UAAUqB,SAAS,SAAS9G,EAAMC,GAAwC,GAA3BD,IAAQX,IAAUW,EAAM,IAAc,KAARA,EAAW,OAAOkM,EAAa1L,KAAKR,EAAMC,GAA+E,IAArE,IAA+DgM,EAA3DlM,EAAES,KAAKF,MAAM4B,EAAEnC,EAAEf,OAAO2N,EAAIvC,OAAOrK,IAAImC,IAAqC,KAAHA,GAAM+J,EAAM7B,OAAOrK,EAAEmC,IAAIyK,GAAjD,UAA4DrG,MAAM2F,EAAMjN,QAAQiN,EAAgC,OAAjBzL,KAAKD,KAAK,IAAI,IAAeoM,GAA6KhM,EAAa8E,UAAUqB,SAA/LpG,EAAa+E,UAAUqB,SAAS,SAAS9G,EAAMC,GAAwC,OAA3BD,IAAQX,IAAUW,EAAM,IAAa,IAAPA,EAAiBkM,EAAa1L,KAAKR,EAAMC,GAAiBmK,OAAO5J,KAAKF,QAAwEK,EAAa8E,UAAUmH,OAAOvM,EAAWoF,UAAUmH,OAAOlM,EAAa+E,UAAUmH,OAAO,WAAW,OAAOpM,KAAKsG,YAAyFzG,EAAWoF,UAAUiD,WAAlGrI,EAAWoF,UAAUmG,QAAQ,WAAW,OAAOiB,SAASrM,KAAKsG,WAAW,KAA+HpG,EAAa+E,UAAUiD,WAApFhI,EAAa+E,UAAUmG,QAAQ,WAAW,OAAOpL,KAAKF,OAAwEK,EAAa8E,UAAUmG,QAAQjL,EAAa8E,UAAUiD,WAAW,WAAW,OAAOmE,SAASrM,KAAKsG,WAAW,KAAw/C,IAAI,IAAIzI,EAAE,EAAEA,EAAE,IAAIA,IAAKyB,EAAQzB,GAAG+B,EAAW/B,GAAQ,EAAFA,IAAIyB,GAASzB,GAAG+B,GAAY/B,IAA0a,OAAvayB,EAAQqJ,IAAIrJ,EAAQ,GAAGA,EAAQmJ,KAAKnJ,EAAQ,GAAGA,EAAQgN,SAAShN,GAAS,GAAGA,EAAQuG,IAAIA,EAAIvG,EAAQ+K,IAAIA,EAAI/K,EAAQgL,IAAIA,EAAIhL,EAAQiN,IAA3+L,SAAarO,EAAE+C,GAA+C,OAA5C/C,EAAE0B,EAAW1B,GAAGiF,MAAMlC,EAAErB,EAAWqB,GAAGkC,MAAajF,EAAE4G,OAAOwF,EAAIpM,EAAE+C,IAAIuE,SAASvE,IAAk5L3B,EAAQkN,WAAW,SAAS5L,GAAG,OAAOA,aAAaf,GAAYe,aAAaV,GAAcU,aAAaT,GAAcb,EAAQ+I,YAA5gM,SAAqBnK,EAAE+C,GAAmC,IAAIwL,EAAIpC,EAAxCnM,EAAE0B,EAAW1B,GAAG+C,EAAErB,EAAWqB,IAAsCyL,EAAb7G,EAAI3H,EAAE+C,GAAkBU,SAAS8K,GAAKzL,IAAI,GAAG,GAAG0L,EAAMzM,QAAQ,OAAOwM,EAAIzL,IAAIX,KAAKC,MAAMD,KAAKsM,SAASD,IAA0E,IAAlE,IAAI7B,EAAOI,EAAOyB,EAAM5N,GAAMgB,MAAUyD,EAAO,GAAGqJ,GAAW,EAAa/O,EAAE,EAAEA,EAAEgN,EAAOrM,OAAOX,IAAI,CAAC,IAAIgP,EAAID,EAAW/B,EAAOhN,GAAGiB,EAAS2M,EAAM3K,EAAST,KAAKsM,SAASE,GAAKtJ,EAAOhC,KAAKkK,GAAUA,EAAMoB,IAAID,GAAW,GAAM,OAAOH,EAAIzL,IAAI1B,EAAQwN,UAAUvJ,EAAOzE,GAAK,KAA6lLQ,EAAQwN,UAAU,SAASjC,EAAOvJ,EAAKoF,GAAY,OAAOqE,EAAmBF,EAAOM,IAAIvL,GAAYA,EAAW0B,GAAM,IAAIoF,IAAoBpH,EAAv69B,QAAq89B,IAATX,GAAsBA,EAAOoO,eAAe,aAAYpO,EAAOL,QAAQM,GAA0B,mBAAToO,QAAqBA,OAAOC,KAAKD,OAAO,cAAc,GAAG,WAAW,OAAOpO,K,+PCkCpm+BsO,G,wDAAAA,EAAU,CAAA,C,mBACL,SAACC,EAAQC,GACZ,GAAKD,EAAL,CAEA,IAAIE,IAAWD,GAASA,EAAOC,SAC3BC,IAAaF,GAASA,EAAOE,WAGjC,IAAK,IAAMC,KAAOJ,GACTA,EAAOJ,eAAeQ,IAASvN,KAAKuN,KAASF,GAC9CC,IAAkD,IAApCH,EAAOI,GAAKxB,QAAQ,aACtC/L,KAAKuN,GAAOJ,EAAOI,SAXzBL,G,SAAAA,K,kGAAAA,G,UAiBSA,E,oRCjBTM,G,wDAAAA,EAAU,CAAA,C,mBACL,SAACC,EAAQL,GACZ,GAAKK,EAAL,CAEA,IAAIJ,IAAWD,GAASA,EAAOC,SAC3BC,IAAaF,GAASA,EAAOE,WAGjC,IAAK,IAAMI,KAAOD,GACTA,EAAOV,eAAeW,IAAS1N,KAAK0N,KAASL,GAC9CC,IAAkD,IAApCG,EAAOC,GAAK3B,QAAQ,aACtC/L,KAAK0N,GAAOD,EAAOC,SAXzBF,G,SAAAA,K,kGAAAA,G,UAiBSA,E,oHCpBa,I,oCAE5B,SAASG,EAA0BP,GAI/B,IAAIQ,EACAC,OAAMhP,EACNiP,OAAajP,EACbkP,OAAOlP,EACPmP,OAAInP,EACJoP,OAAmBpP,EACnBqP,OAASrP,EACTsP,OAAiBtP,EACjBuP,OAAKvP,EAEHwP,GAZNjB,EAASA,GAAU,IAYYiB,gBACzBC,EAAoBlB,EAAOkB,kBAC3BC,EAAQnB,EAAOmB,MA4BrB,SAASC,IACAT,IAELF,EAAOU,MAAM,QAEbE,aAAaR,GACbF,GAAU,EAEVI,EADAD,EAAY,MAQhB,SAASQ,IACL,IAGMC,EAEAC,EACAC,EACAC,EAWoBF,EAAYD,EAAgBG,EAClDC,EACAC,EApBCjB,IAOCe,GADAD,GADAD,GAFAD,EA0C2BN,EAAgBY,8BACDC,4BA1ChBN,WAAWO,OAAOC,IAAIC,SAC1BC,eAAeX,EAAeC,WAAWO,OAAOf,OAAOmB,sBAAsBZ,EAAeC,WAAWR,QACvGoB,gBAAgBC,gBAAgBC,WACnCb,EAASrQ,OAAS,GAWLmQ,EANWA,EAMKG,EANWA,EAO7DC,GADsBH,EANWA,GAOVY,gBAAgBT,WACvCC,EAAU,IAAAW,EAAA,SAENC,UAAY5B,EACpBgB,EAAQhB,KAAO,sBAEfgB,EAAQd,UAAYY,EAAQnR,EAAIoR,EAChCC,EAAQa,SAAWf,EAAQnK,EAAIoK,EAC/BC,EAAQD,UAAYA,EAIpBC,EAAQc,QAAUnB,EAAeP,MACjCY,EAAQZ,MAAQA,IAChBY,EAAQe,UAAY1B,EAAgB2B,eACpChB,EAAQiB,gBAAkBtB,EAAeC,WAAWR,MACpDY,EAAQkB,iBAAmBvB,EAAewB,GAC1CnB,EAAQoB,IAAM9B,EAAkB+B,QAAQ1B,EAAe2B,MAAMF,IAAMxB,EAAWY,gBAAgBe,MAC9FvB,EAAQoB,IAAMpB,EAAQoB,IAAII,QAAQ,cAAe7B,EAAe8B,WAChEzB,EAAQoB,IAAMpB,EAAQoB,IAAII,QAAQ,SAAU1B,EAAQ4B,UAAY5B,EAAQ4B,UAAY5B,EAAQnR,GAC5FqR,EAAQoB,IAAMpB,EAAQoB,IAAII,QAAQ,cAAe,kBAWrD,SAAyBxB,GAErB,GAAIX,EAAgBsC,mBAAmBC,0BAA0B5B,GAI7D,OAFAnB,EAAOU,MAAM,wBACbC,IAIJV,EAAc+C,eAAe7B,IA5CbzQ,KAAKyB,KA0BdgP,IAoEX,OAXApB,EAAW,CACPkD,WAxIJ,WACI9C,EAAOK,EAAgB0C,UACvBjD,EAAgBO,EAAgBsC,mBAEhC5C,GAAU,EAEVI,EADAD,EAAY,MAoIZ8C,eA/ImB,4BAgJnBlG,MAjIJ,WACQiD,IAEJF,EAAOU,MAAM,SAEbR,GAAU,EACVG,GAAY,IAAI+C,MAAOC,UACvB9C,EAAQ,EAERM,MAyHAyC,mBAxCJ,SAA6B1T,GACzB,IAEMuR,EAMFoC,EACAC,EACAC,EAVCvD,IAECiB,EAAUvR,EAAEuR,QACbvR,EAAE8T,UAYHpD,EADCA,GACmBa,EAAQd,UAIhCmD,IAAa,IAAIJ,MAAOC,UAAYhD,GAAa,IACjDkD,EAAoBpC,EAASd,UAAYc,EAAQa,SAAY1B,EAC7DmD,EAAQjR,KAAKwF,IAAI,EAAIuL,EAAoBC,GAGzC5C,aAAaR,GACbA,EAAsBuD,WAAW,WAC7BvD,EAAsB,KACtBS,KACO,IAAR4C,IAxBCzD,EAAO4D,MAAM,aAAczC,EAAQoB,OAoCvCW,QATJ,WACI,OAAO/C,GASP0D,MA7GJ,WACIlD,MApCAX,EAASU,EAAMoD,UAAU/D,GAqJtBA,EAGXD,EAA0BiE,sBAAwB,4B,UACnCC,OAAOC,aAAaC,gBAAgBpE,G,4KChL3B,K,MACF,I,MAEH,KAOnB,SAASqE,EAAyB5E,GAG9B,IAAIQ,EACAI,OAAInP,EACJgP,OAAMhP,EACJoT,GAJN7E,EAASA,GAAU,IAIQ6E,YACrBC,EAAqB9E,EAAO8E,mBAC5BC,EAAe/E,EAAOgF,WACtBC,EAAWjF,EAAOiF,SAClBC,EAAWlF,EAAOkF,SAClB/D,EAAQnB,EAAOmB,MAOrB,SAASgE,EAAYvD,EAASwD,EAAMC,EAAMpE,GACtC,IAAMqE,EAA2BrE,EAAgBY,8BAC3CN,EAAiB+D,EAAyBxD,2BAE1CG,EAAWV,EAAeC,WAAWO,OAAOC,IAAIC,SAChDT,EAAaS,EAASC,eAAeX,EAAeC,WAAWO,OAAOf,OAAOmB,sBAAsBZ,EAAeC,WAAWR,OAC7HW,EAAYH,EAAWY,gBAAgBT,UAK7C,GAHAf,EAAOK,EAAgB0C,UAGD,YAAlB1B,EAASrB,MAAuBqB,EAASsD,qBAI7C,GAAKH,EAAL,CAMA,IAEII,EAyDQC,EA3DNhE,EAAWD,EAAWY,gBAAgBC,gBAAgBqD,EACtDC,EAAUP,EAAKI,MAEjBI,OAAWnU,EACX6N,OAAK7N,EACLiQ,EAAU,KACVnR,EAAI,EACJsV,EAAwB,KAE5B,GAAuB,IAAnBF,EAAQvU,SAKZoU,EAAQG,EAAQ,KAIM,WAAlB1D,EAASrB,OAETgF,EAAcnE,EAAS,GAAG6B,UAAYwC,WAAWrE,EAAS,GAAG6B,WAAa7B,EAAS,GAAGlR,EAClFiV,EAAMO,uBAA0BH,EAAe3D,EAASsD,qBAAuB5D,KAHvF,CAeA,GAJAiE,EAAcnE,EAASA,EAASrQ,OAAS,GAAGkS,UAAYwC,WAAWrE,EAASA,EAASrQ,OAAS,GAAGkS,WAAa7B,EAASA,EAASrQ,OAAS,GAAGb,EAIxIiV,EAAMO,wBAA0BH,EAQhC,OANAtG,EAAQ,CACJ5B,MAAO+D,EAAS,GAAGlR,EAAIoR,EACvB8D,IAAKJ,EAAMW,oBAAsBrE,EAAaC,EAAQa,eAG1DwD,EAAUrE,EAAQY,UAAWlD,EAAO2B,EAAgBiF,gBAAgBC,cAgBxE,IAXAzE,EAAU,IACFnR,EAAIiV,EAAMO,uBAClBrE,EAAQnK,EAAIiO,EAAMY,kBAEd3E,EAAS,GAAG6B,YACZ5B,EAAQnR,GAAKuV,WAAWrE,EAAS,GAAG6B,WAAa7B,EAAS,GAAGlR,EAC7DmR,EAAQ4B,UAAYkC,EAAMO,wBAE9BtE,EAAStN,KAAKuN,GAGQ,WAAlBO,EAASrB,KAAb,CAWK,GAAIqB,EAASsD,sBAAwD,EAAhCtD,EAASsD,qBAA0B,CAUzE,IAPAhV,GADAmR,EAAUD,EAASA,EAASrQ,OAAS,IACzBb,EAGZsV,EAAwB5S,KAAKoT,OAAO9V,EAAK0R,EAASsD,qBAAuB5D,GAAcA,GAGvFD,EAAUD,EAAS,GACZxO,KAAKoT,MAAM3E,EAAQnR,EAAIoR,GAAakE,GAEvCpE,EAAS6E,OAAO,EAAG,GACnB5E,EAAUD,EAAS,GAIvBnC,EAAQ,CACJ5B,MAAO+D,EAAS,GAAGlR,EAAIoR,EACvB8D,IAAKJ,EAAMW,oBAAsBrE,EAAaC,EAAQa,UAG1DwD,EAAUrF,EAAMtB,EAAO2B,EAAgBiF,gBAAgBC,cAG3Db,EAAyBiB,qBAAqBhF,GAAgB,OAnC7C,UAATX,IAEI6E,IADJ/D,EAAUD,EAASA,EAASrQ,OAAS,IAClBb,EAAImR,EAAQnK,GAAKoK,GAC1BJ,EAAeC,WAAWO,OAAOU,UACvCwC,EAASuB,QAAQC,EAAA,QAAOC,0BAA2B,CAAEC,OAAQ/T,KAAMgU,YAAanB,UAlExFV,EAAaV,MAAM,IAAAwC,EAAA,QAAgBC,EAAA,QAAUC,iBAAkBD,EAAA,QAAUE,sBAoGjF,SAASf,EAAUrF,EAAMtB,EAAO6G,GAC5B,IAAMc,EAAWpC,EAAYqC,kBAAkBtG,KAC1CqG,GAAa3H,EAAMmG,IAAMwB,EAAS3H,MAAMmG,OACzChF,EAAOU,MAAM,sBAAwB7B,EAAM5B,MAAQ,MAAQ4B,EAAMmG,IAAM,KACvEZ,EAAYsC,WAAWvG,EAAMkE,EAAmBhB,UAAWqC,EAAc7G,IAKjF,SAAS8H,EAAaC,EAAQzG,GAI1B,IAHA,IAAI0G,EAAS,EACT7W,EAAI,EAEHA,EAAI,EAAGA,EAAI4W,EAAOE,MAAMnW,OAAQX,IAAK,CACtC,GAAI4W,EAAOE,MAAM9W,GAAGmQ,OAASA,EACzB,OAAO0G,EAEXA,GAAUD,EAAOE,MAAM9W,GAAG+W,KAE9B,OAAOF,EA4IX,OAPA9G,EAAW,CACPiH,gBAnIJ,SAAyBpX,EAAG4Q,GACxB,IAAIxQ,OAACgB,EAICiW,EAAUxC,EAASyC,YAAYtX,EAAE8T,UAEjCyD,EAAOF,EAAQG,MAAM,QAC3BD,EAAKE,SAAWzX,EAAEuR,QAAQe,UAAU3B,MAAQ,EAG5C,IAAIqE,EAAOqC,EAAQG,MAAM,QACnBE,EAAOL,EAAQG,MAAM,QACd,OAATxC,KACAA,EAAOH,EAAS8C,cAAc,OAAQD,EAAMH,IACvCK,QAAU,EACf5C,EAAK6C,MAAQ,EACb7C,EAAKW,oBAAsB/S,KAAKC,MAAM7C,EAAEuR,QAAQd,UAAYzQ,EAAEuR,QAAQD,YAG1E,IAAMwG,EAAOT,EAAQG,MAAM,QAIvBO,EAAOV,EAAQG,MAAM,QACrBO,IACAA,EAAKC,QAAQd,MAAMjB,OAAO8B,EAAKC,QAAQd,MAAM5I,QAAQyJ,GAAO,GAC5DA,EAAO,MAEX,IAAIhD,EAAOsC,EAAQG,MAAM,QACzB1C,EAAY9U,EAAEuR,QAASwD,EAAMC,EAAMpE,GAC/BmE,IACAA,EAAKiD,QAAQd,MAAMjB,OAAOlB,EAAKiD,QAAQd,MAAM5I,QAAQyG,GAAO,GAC5DA,EAAO,MAMX,IAAMkD,EAASZ,EAAQG,MAAM,UAC7B,GAAe,OAAXS,EAAiB,CACjBA,EAAO1H,KAAO,OACd0H,EAAOC,cAAW9W,EAElB,IAAI+W,EAAOd,EAAQG,MAAM,QACzB,GAAa,OAATW,EAAe,EAEfA,EAAOtD,EAAS8C,cAAc,OAAQD,IACjCE,QAAU,EACfO,EAAKN,MAAQ,EACbM,EAAKC,YAAc,EACnBD,EAAKlB,OAAS,CAAC,GAEf,IAAMoB,EAAOxD,EAAS8C,cAAc,OAAQD,GAO5C,GANAW,EAAKT,QAAU,EACfS,EAAKR,MAAQ,EACbQ,EAAKC,aAAeL,EAAOK,aAC3BD,EAAKE,yBAA2B,EAChCF,EAAKG,iBAAmB,GAEL,EAAfP,EAAOJ,MAEP,IAAKzX,EAAI,EAAGA,EAAI6X,EAAOK,aAAclY,GAAK,EAGtCiY,EAAKG,iBAAiBpY,GAAK,GAAM,EAAI6X,EAAO9C,MAAM/U,GAAGqY,qBAIzDJ,EAAKE,yBAA2B,GAK5ChB,EAAKM,OAAS,SACdN,EAAKM,OAAS,OACdC,EAAKD,OAAS,EAGd,IAAMa,EAAOrB,EAAQG,MAAM,QACvBzW,EAAS2X,EAAKC,YAClBb,EAAKc,YAAc7X,EAAS,EAG5B,IAEQ8X,EACAC,EAHJC,EAAO1B,EAAQG,MAAM,QACZ,OAATuB,IACIF,EAAgB9B,EAAa2B,EAAM,QACnCI,EAAgB/B,EAAaW,EAAM,QAEvCqB,EAAK9B,OAAO,GAAK4B,EAAgBC,EAAgB,IAIrD9Y,EAAE8T,SAAWuD,EAAQ2B,SAuCrBC,kBApCJ,SAA2BjZ,EAAG4Q,GAG1B,IAAK5Q,EAAE8T,SACH,MAAM,IAAIpT,MAAM,mCAGpB,IAAM2W,EAAUxC,EAASyC,YAAYtX,EAAE8T,UAEjCyD,EAAOF,EAAQG,MAAM,QAC3BD,EAAKE,SAAWzX,EAAEuR,QAAQe,UAAU3B,MAAQ,EAG5C,IAAIqE,EAAOqC,EAAQG,MAAM,QACrBE,EAAOL,EAAQG,MAAM,QACZ,OAATxC,KACAA,EAAOH,EAAS8C,cAAc,OAAQD,EAAMH,IACvCK,QAAU,EACf5C,EAAK6C,MAAQ,EACb7C,EAAKW,oBAAsB/S,KAAKC,MAAM7C,EAAEuR,QAAQd,UAAYzQ,EAAEuR,QAAQD,YAG1E,IAAIyD,EAAOsC,EAAQG,MAAM,QACzB1C,EAAY9U,EAAEuR,QAASwD,EAAMC,EAAMpE,GAC/BmE,IACAA,EAAKiD,QAAQd,MAAMjB,OAAOlB,EAAKiD,QAAQd,MAAM5I,QAAQyG,GAAO,GAC5DA,EAAO,OAWXzB,QAPJ,WACI,OAAO/C,IA7QPH,EAASU,EAAMoD,UAAU/D,GACzBI,EAAO,GAsRJJ,EAGXoE,EAAyBJ,sBAAwB,2B,UAClCC,OAAOC,aAAaC,gBAAgBC,G,mICnT5B,G,oCAOvB,SAAS2E,EAAyBvJ,GAE9B,IAAMwJ,EAAe,EACfC,EAAe,EACfC,GAHN1J,EAASA,GAAU,IAGM0J,UACnBxE,EAAWlF,EAAOkF,SAEpByE,EAAuB3J,EAAO2J,qBAE9B5H,OAAMtQ,EACNmY,OAAanY,EACb8P,OAAc9P,EACdoY,OAAiBpY,EACjBkQ,OAASlQ,EACTqY,OAAOrY,EAcX,SAASsY,EAAcrC,GAGnB,IA+EmBsC,EAEfC,EAjFAD,EAAO9E,EAASgF,UAAU,OAAQxC,GA+EnBsC,EA5ELA,GA8EVC,EAAO/E,EAAS8C,cAAc,OAAQgC,IAErC/B,QAAU,EAEfgC,EAAKE,cAAgB,EACrBF,EAAKG,kBAAoB,EACzBH,EAAKtI,UAAYA,EACjBsI,EAAKxH,SAAWxP,KAAKoT,MAAMtE,EAAOU,SAAWd,GAC7CsI,EAAKI,KAAO,EACZJ,EAAKK,OAAS,EACdL,EAAKM,UAAY,EACjBN,EAAKO,UAAY,CAAC,EAAK,GACvBP,EAAKQ,OAAS,CACV,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,OAEVR,EAAKS,YAAc,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACnCT,EAAKU,cAAgBb,EAAU,EA7F/B,IAkGmBc,EAEfC,EApGAD,EAAO1F,EAASgF,UAAU,OAAQF,GAkGnBY,EA/FLA,GAiGVC,EAAO3F,EAAS8C,cAAc,OAAQ4C,IAErC3C,QAAU,EACf4C,EAAK3C,MAAQ,EAIb2C,EAAKV,cAAgB,EACrBU,EAAKT,kBAAoB,EACzBS,EAAK/C,SAAWgC,EAChBe,EAAKN,UAAY,EACjBM,EAAKpI,SAAWxP,KAAKoT,MAAMtE,EAAOU,SAAWd,GAC7CkJ,EAAKL,UAAY,CAAC,EAAK,GACvBK,EAAKC,MAAQ,EACbD,EAAKE,gBAAkB,EACvBF,EAAKP,OAAS,EACdO,EAAKG,UAAY,EACjBH,EAAKJ,OAAS,CACV,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,OAEVI,EAAKI,MAAQ1J,EAAe0J,MAC5BJ,EAAKK,OAAS3J,EAAe2J,OArH7B,IA0HmBC,EAEfC,EA5HAD,EAAOjG,EAASgF,UAAU,OAAQU,GA0HnBO,EAvHLA,GAyHVC,EAAOlG,EAAS8C,cAAc,OAAQmD,IAErClD,QAAU,EAEfmD,EAAKjB,cAAgB,EACrBiB,EAAKhB,kBAAoB,EACzBgB,EAAKzJ,UAAYA,EACjByJ,EAAK3I,SAAWxP,KAAKoT,MAAMtE,EAAOU,SAAWd,GAC7CyJ,EAAKC,SAAWzB,EAAc0B,MAAQ,MACtCF,EAAKV,YAAc,EAKvB,SAAuBS,GAEnB,IAAII,EAAOrG,EAAS8C,cAAc,OAAQmD,GAG1C,OADAI,EAAKb,YAAc,EACXd,EAAchJ,MAClB,KAAK8I,EAAU8B,MACXD,EAAKE,aAAe,OACpB,MACJ,KAAK/B,EAAUgC,MACXH,EAAKE,aAAe,OACpB,MACJ,QACIF,EAAKE,aAAe,OAG5BF,EAAKI,KAAOpK,EAAewB,GAC3BwI,EAAKK,SAAW,CAAC,EAAG,EAAG,GArJvBC,CAAcV,GAGd,IAmKmBW,EAEfC,EAdeD,EAEfE,EAzJAF,EAAO5G,EAASgF,UAAU,OAAQiB,GAEtC,OAAQvB,EAAchJ,MAClB,KAAK8I,EAAU8B,MAoJAM,EAlJGA,GAoJlBE,EAAO9G,EAAS8C,cAAc,OAAQ8D,IAErC5D,MAAQ,EAEb8D,EAAKC,aAAe,EACpBD,EAAKE,QAAU,CAAC,EAAG,EAAG,GAxJd,MACJ,KAAKxC,EAAUgC,MA4JAI,EA1JGA,GA4JlBC,EAAO7G,EAAS8C,cAAc,OAAQ8D,IAErC5D,MAAQ,EAEb6D,EAAKI,QAAU,EACfJ,EAAKH,SAAW,GAKpB,SAAuBQ,GAEnB,IAAIC,EAAOnH,EAAS8C,cAAc,OAAQoE,GAE1CC,EAAK5D,YAAc,EACnB4D,EAAK1G,QAAU,GAEf,IAAI3C,EAAMkC,EAAS8C,cAAc,OAAQqE,GAAM,GAC/CrJ,EAAIsJ,SAAW,GACftJ,EAAIkF,MAAQ,EAEZmE,EAAK1G,QAAQxR,KAAK6O,GAvKlBuJ,CAHWrH,EAASgF,UAAU,OAAQ4B,IAMtC,IAAIU,EAAOtH,EAASgF,UAAU,OAAQ4B,GAM3B5G,EAAS8C,cAAc,OAAQwE,GACrCC,MAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGxBvH,EAAS8C,cAAc,OAAQwE,GACrCC,MAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGxBvH,EAAS8C,cAAc,OAAQwE,GACrCC,MAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGxBvH,EAAS8C,cAAc,OAAQwE,GACrCC,MAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAsJnD,SAAuBD,GAEnB,IAAIE,EAAOxH,EAAS8C,cAAc,OAAQwE,GAG1C,OADAE,EAAK/G,QAAU,GACPiE,EAAchJ,MAClB,KAAK8I,EAAU8B,MACf,KAAK9B,EAAUgC,MACXgB,EAAK/G,QAAQxR,KAUzB,SAA2BuY,GACvB,IAAIC,EAAQpL,EAAeqL,OAAOC,UAAU,EAAGtL,EAAeqL,OAAOjO,QAAQ,MAE7E,OAAQgO,GACJ,IAAK,OACD,OAcZ,SAAoCD,EAAMC,GACtC,IAAIG,OAAIrb,EAGJqb,EADAjD,EACO3E,EAASgF,UAAU,OAAQwC,GAAM,GAEjCxH,EAASgF,UAAU,OAAQwC,GAAM,GA0B5C,CAAA,IAEQK,EAxBRD,EAAKvC,UAAY,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,GAC3CuC,EAAKE,qBAAuB,EAG5BF,EAAKG,aAAe,EACpBH,EAAKtC,UAAY,EACjBsC,EAAKI,aAAe,CAAC,EAAG,EAAG,GAC3BJ,EAAK5B,OAAS3J,EAAe2J,OAC7B4B,EAAK7B,MAAQ1J,EAAe0J,MAC5B6B,EAAKK,gBAAkB,GACvBL,EAAKM,eAAiB,GACtBN,EAAK9B,UAAY,EACjB8B,EAAKO,YAAc,EACnBP,EAAKQ,eAAiB,CAClB,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAAM,IAC1C,IAAM,IAAM,IAAM,EAAM,EAAM,EAAM,EAAM,EAC1C,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAC1C,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAE9CR,EAAKS,MAAQ,GACbT,EAAKU,aAAe,MACpBV,EAAK9M,OAkBT,WAeI,IAbA,IAAIyN,EAAO,KACPC,EAAa,GAGbC,EAAM,GACNC,EAAM,GACNC,EAAuB,EACvBC,EAAqB,EACrBC,EAAwB,EAExBC,EAAQzM,EAAe0M,iBAAiBxP,MAAM,YAAY/F,MAAM,GAChEwV,OAASzc,EAEJ0c,EAAI,EAAGA,EAAIH,EAAM5c,OAAQ+c,IAK9B,OAJAD,EAAYE,EAAkBJ,EAAMG,IAEV,GAAfD,EAAU,IAGjB,KAAK1E,EACDmE,EAAIxZ,KAAK+Z,GACTR,GAAcQ,EAAU9c,OAAS,EACjC,MACJ,KAAKqY,EACDmE,EAAIzZ,KAAK+Z,GACTR,GAAcQ,EAAU9c,OAAS,EAQ5B,EAAbuc,EAAIvc,SACJyc,EAAuBF,EAAI,GAAG,GAC9BI,EAAwBJ,EAAI,GAAG,GAC/BG,EAAqBH,EAAI,GAAG,IAIhCF,EAAO,IAAIY,WAAWX,GAEtB,IAAIjd,EAAI,EAERgd,EAAKhd,MAAqB,WAAbid,IAA4B,GACzCD,EAAKhd,MAAqB,SAAbid,IAA4B,GACzCD,EAAKhd,MAAqB,MAAbid,IAA4B,EACzCD,EAAKhd,KAAqB,IAAbid,EACbD,EAAKa,IAAI,CAAC,GAAM,IAAM,GAAM,IAAO7d,GACnCA,GAAK,EACLgd,EAAKhd,KAAO,EACZgd,EAAKhd,KAAOod,EACZJ,EAAKhd,KAAOsd,EACZN,EAAKhd,KAAOqd,EACZL,EAAKhd,KAAO,IACZgd,EAAKhd,KAAO,IAAOkd,EAAIvc,OACvB,IAAK,IAAId,EAAI,EAAGA,EAAIqd,EAAIvc,OAAQd,IAC5Bmd,EAAKhd,MAAwB,MAAhBkd,EAAIrd,GAAGc,SAAoB,EACxCqc,EAAKhd,KAAwB,IAAhBkd,EAAIrd,GAAGc,OACpBqc,EAAKa,IAAIX,EAAIrd,GAAIG,GACjBA,GAAKkd,EAAIrd,GAAGc,OAEhBqc,EAAKhd,KAAOmd,EAAIxc,OAChB,IAASd,EAAI,EAAGA,EAAIsd,EAAIxc,OAAQd,IAC5Bmd,EAAKhd,MAAwB,MAAhBmd,EAAItd,GAAGc,SAAoB,EACxCqc,EAAKhd,KAAwB,IAAhBmd,EAAItd,GAAGc,OACpBqc,EAAKa,IAAIV,EAAItd,GAAIG,GACjBA,GAAKmd,EAAItd,GAAGc,OAGhB,OAAOqc,EA1FOc,GACV1E,IAKA2E,EAHIzB,EAAO7H,EAASgF,UAAU,OAAQ4C,GAGRH,GAG9B8B,EAAoB1B,GAGpB2B,EAA2B3B,IAG/B,OAAOD,EA5DQ6B,CAA2BjC,EAAMC,GAC5C,IAAK,OACD,OAwIZ,SAAmCD,EAAMC,GACrC,IAAIiC,OAAInd,EAGJmd,EADA/E,EACO3E,EAASgF,UAAU,OAAQwC,GAAM,GAEjCxH,EAASgF,UAAU,OAAQwC,GAAM,GAiB5C,CAAA,IAEQK,EAfR6B,EAAKrE,UAAY,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,GAC3CqE,EAAK5B,qBAAuB,EAG5B4B,EAAKpE,UAAY,CAAC,EAAK,GACvBoE,EAAKC,aAAetN,EAAeuN,cACnCF,EAAKG,WAAa,GAClBH,EAAKlE,YAAc,EACnBkE,EAAKI,WAAa,EAClBJ,EAAKK,WAAa1N,EAAe2N,mBAAqB,GAEtDN,EAAKO,KAmBT,WAGI,IAAIC,EAAsBhB,EAAkB7M,EAAe0M,kBAOvDoB,EAAa,GAAKD,EAAoBhe,OACtC+d,EAAO,IAAId,WAAWgB,GAEtB5e,EAAI,EAyCR,OAvCA0e,EAAK1e,MAAqB,WAAb4e,IAA4B,GACzCF,EAAK1e,MAAqB,SAAb4e,IAA4B,GACzCF,EAAK1e,MAAqB,MAAb4e,IAA4B,EACzCF,EAAK1e,KAAqB,IAAb4e,EACbF,EAAKb,IAAI,CAAC,IAAM,IAAM,IAAM,KAAO7d,GACnCA,GAAK,EACL0e,EAAKb,IAAI,CAAC,EAAG,EAAG,EAAG,GAAI7d,GACvBA,GAAK,EAEL0e,EAAK1e,KAAO,EACZ0e,EAAK1e,KAAO,GAAK2e,EAAoBhe,OACrC+d,EAAK1e,MAAkB,MAAVqZ,IAAqB,EAClCqF,EAAK1e,KAAkB,IAAVqZ,EACbqF,EAAK1e,KAAO,EAGZ0e,EAAK1e,KAAO,EACZ0e,EAAK1e,KAAO,GAAK2e,EAAoBhe,OACrC+d,EAAK1e,KAAO,GACZ0e,EAAK1e,GAAK,GACV0e,EAAK1e,IAAM,EACX0e,EAAK1e,MAAQ,EACb0e,EAAK1e,KAAO,IACZ0e,EAAK1e,KAAO,IACZ0e,EAAK1e,KAAO,IACZ0e,EAAK1e,MAAmC,WAA3B8Q,EAAe8B,YAA2B,GACvD8L,EAAK1e,MAAmC,SAA3B8Q,EAAe8B,YAA2B,GACvD8L,EAAK1e,MAAmC,MAA3B8Q,EAAe8B,YAA2B,EACvD8L,EAAK1e,KAAmC,IAA3B8Q,EAAe8B,UAC5B8L,EAAK1e,MAAmC,WAA3B8Q,EAAe8B,YAA2B,GACvD8L,EAAK1e,MAAmC,SAA3B8Q,EAAe8B,YAA2B,GACvD8L,EAAK1e,MAAmC,MAA3B8Q,EAAe8B,YAA2B,EACvD8L,EAAK1e,KAAmC,IAA3B8Q,EAAe8B,UAG5B8L,EAAK1e,KAAO,EACZ0e,EAAK1e,KAAO2e,EAAoBhe,OAChC+d,EAAKb,IAAIc,EAAqB3e,GAEvB0e,EAzEKG,GAERzF,IAKA2E,EAHIzB,EAAO7H,EAASgF,UAAU,OAAQ0E,GAGRjC,GAG9B8B,EAAoB1B,GAGpB2B,EAA2B3B,IAG/B,OAAO6B,EA7KQW,CAA0B7C,EAAMC,GAC3C,QACI,KAAM,CACF3b,KAAM8V,EAAA,QAAU0I,2BAChBC,QAAS3I,EAAA,QAAU4I,8BACnBC,KAAM,CACFhD,MAAOA,KAvBGiD,CAAkBlD,IAM5CA,EAAKjE,YAAciE,EAAK/G,QAAQvU,OAjKhCye,CAAcrD,GAGd,IAqcmBxC,EACf8F,EAtcAC,EAAO7K,EAASgF,UAAU,OAAQF,GAqcnBA,EAlcL+F,GAmcVD,EAAO5K,EAAS8C,cAAc,OAAQgC,IAErClC,SAAWgC,EAChBgG,EAAKE,iCAAmC,EACxCF,EAAKG,wBAA0B,EAC/BH,EAAKI,oBAAsB,EAC3BJ,EAAKK,qBAAuB,EAvcxBtG,GAAqBF,GAka7B,SAAiDK,EAAMoG,GACnD,IAAIC,OAAU5e,EACV6e,OAAI7e,EACJhB,OAACgB,EACD8e,OAAY9e,EAEhB,IAAKhB,EAAI,EAAGA,EAAI2f,EAAWhf,OAAQX,GAAK,GACpC4f,EAAaD,EAAW3f,GAAG+f,YAEvBD,EAAerL,EAASyC,YAAY0I,IACpCC,EAAOC,EAAa1I,MAAM,UAEtB3C,EAASuL,MAAMC,UAAU1G,EAAMsG,IA5avCK,CAAwC3G,EADtBL,EAAqBiH,4CAA4C/G,IA4Y3F,SAAS2E,EAAwBzB,EAAMJ,GACxBzH,EAASgF,UAAU,OAAQ6C,GACjC8D,YAuET,SAA0B9R,GACtB,IAAI/N,EAAO,EACPP,OAACgB,EAEL,IAAKhB,EAAI,EAAGA,EAAIsO,EAAI3N,OAAQX,GAAK,EAC7BO,GAAQ+N,EAAI+R,WAAWrgB,IAA8B,GAAtBsO,EAAI3N,OAASX,EAAI,GAEpD,OAAOO,EA9EY+f,CAAiBpE,GAGxC,SAAS8B,EAAoB1B,GACzB,IAAIiE,EAAO9L,EAAS8C,cAAc,OAAQ+E,GAE1CiE,EAAK9I,MAAQ,EACb8I,EAAK/I,QAAU,EACf+I,EAAKC,YAAc,WACnBD,EAAKE,eAAiB,MAG1B,SAASxC,EAA2B3B,GAChC,IAwB8BoE,EAC1BC,EAzBAD,EAAOjM,EAASgF,UAAU,OAAQ6C,GAwBRoE,EArBLA,GAsBrBC,EAAOlM,EAAS8C,cAAc,OAAQmJ,IAErCjJ,MAAQ,EACbkJ,EAAKnJ,QAAU,EAEfmJ,EAAKC,oBAAsB,EAC3BD,EAAKE,gBAAkB,EACvBF,EAAKG,YAAc1H,GAAmD,EAA7BA,EAAmBzY,QAAeyY,EAAkB,GAAG,oBAC5FA,EAAkB,GAAG,oBAAsB,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAe/H,SAASuE,EAAkBrP,GAIvB,IAHA,IAAIyS,EAAM,IAAInD,WAAWtP,EAAI3N,OAAS,GAClCX,OAACgB,EAEAhB,EAAI,EAAGA,EAAIsO,EAAI3N,OAAS,EAAGX,GAAK,EACjC+gB,EAAI/gB,GAAKwO,SAAS,GAAKF,EAAQ,EAAJtO,GAASsO,EAAQ,EAAJtO,EAAQ,GAAI,IAExD,OAAO+gB,EA2CX,MAJW,CACPC,aA3BJ,SAAsBC,GAClB,GAAKA,GAAQA,EAAIlQ,WAAjB,CAIA,IA7jBmBkG,EACfiK,EA4jBAjK,OAAOjW,EAkBX,OAdAmY,GADArI,EAAiBmQ,GACclQ,WAE/BO,EAAS6H,EAAc7H,OACvB+H,EAAUF,EAAc5I,MAAQ,EAChC6I,EAAoB9H,EAAOC,IAAIC,SAASC,eAAeH,EAAOf,OAAOmB,sBAAsByH,EAAc5I,OAAO4Q,kBAEhHjQ,EAAYI,EAAOC,IAAIC,SAASC,eAAeH,EAAOf,OAAOmB,sBAAsByH,EAAc5I,OAAOoB,gBAAgBT,UAExH+F,EAAUxC,EAAS2M,aAzkBAnK,EA0kBLA,GAzkBViK,EAAOzM,EAASgF,UAAU,OAAQxC,IACjCoK,YAAc,OACnBH,EAAKI,cAAgB,EACrBJ,EAAKK,kBAAoB,GACzBL,EAAKK,kBAAkB,GAAK,OAC5BL,EAAKK,kBAAkB,GAAK,OAC5BL,EAAKK,kBAAkB,GAAK,OAokB5BjI,EAAcrC,GAEAA,EAAQ2B,WAY9BE,EAAyB/E,sBAAwB,2B,UAClCC,OAAOC,aAAaC,gBAAgB4E,G,0KChnBd,I,MACA,IAIrC,SAAS0I,EAAWC,EAAMC,GACtB,OAAOD,EAAM9gB,SAAW+gB,EAAK/gB,QAAW8gB,EAAKE,MAAM,SAAUC,EAASrR,GAClE,OAAOqR,IAAYF,EAAKnR,KAIhC,SAASsR,IACL1f,KAAK2f,eACY,EAAb3f,KAAKsV,QACLtV,KAAK4f,WAAW,gBAAiB,OAAQ,IACzC5f,KAAK4f,WAAW,0BAA2B,OAAQ,KAEvD5f,KAAK4f,WAAW,cAAe,OAAQ,IACvC5f,KAAK6f,gBAAgB,SAAU7f,KAAK6V,YAAa,OAA0B,IAAlB7V,KAAMqV,QAAiB,GAAK,IAGzF,SAASyK,IACL9f,KAAK2f,eACY,EAAb3f,KAAKsV,QACLtV,KAAK4f,WAAW,gBAAiB,OAAQ,IACzC5f,KAAK4f,WAAW,0BAA2B,OAAQ,KAEvD5f,KAAK4f,WAAW,2BAA4B,OAAQ,GACpD5f,KAAK4f,WAAW,eAAgB,OAAQ,IACF,IAAlC5f,KAAKgW,0BACLhW,KAAK6f,gBAAgB,mBAAoB7f,KAAK+V,aAAc,OAAQ,GAI5E,SAASgK,IACL/f,KAAK2f,eACL3f,KAAK4f,WAAW,eAAgB,OAAQ,IACvB,EAAb5f,KAAKsV,OACLtV,KAAK4f,WAAW,UAAW,OAAQ,GAEvC5f,KAAKggB,aAAa,QAAShgB,KAAK+V,aAAc,SAAUnD,GACpD5S,KAAKigB,gBAAgBrN,EAAO,uBAAwB,OAAQ,GAC3C,EAAb5S,KAAKsV,QACLtV,KAAKigB,gBAAgBrN,EAAO,kBAAmB,OAAQ,IACvD5S,KAAKkgB,gBAAgBtN,EAAO,sBAAuBA,EAAMsD,gBAAiB,SAAUiK,GAChFngB,KAAKigB,gBAAgBE,EAAqB,mBAAoB,OAAQ,IACtEngB,KAAKigB,gBAAgBE,EAAqB,uBAAwB,OAAQ,SAM1F,SAASC,IAKDf,EAAWrf,KAAK2V,SAJD,CAAC,IAAM,GAAM,IAAM,EAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,QAK1G3V,KAAK2f,eACD3f,KAAKqgB,WACLrgB,KAAKgO,KAAO,QAEhBhO,KAAK4f,WAAW,yBAA0B,OAA0B,IAAlB5f,KAAMqV,QAAiB,GAAK,IAC9ErV,KAAK4f,WAAW,oBAAqB,OAA0B,IAAlB5f,KAAMqV,QAAiB,GAAK,KAGzEgK,EAAWrf,KAAK2V,SAZD,CAAC,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,QAa1G3V,KAAK2f,eACD3f,KAAKqgB,WACLrgB,KAAKgO,KAAO,QAEhBhO,KAAK4f,WAAW,iBAAkB,OAAQ,GAC1C5f,KAAKggB,aAAa,QAAShgB,KAAKsgB,eAAgB,SAAU1N,GACtD5S,KAAKigB,gBAAgBrN,EAAO,yBAA0B,OAA0B,IAAlB5S,KAAMqV,QAAiB,GAAK,IAC1FrV,KAAKigB,gBAAgBrN,EAAO,oBAAqB,OAA0B,IAAlB5S,KAAMqV,QAAiB,GAAK,OAIzFgK,EAAWrf,KAAK2V,SAvBC,CAAC,IAAM,GAAM,GAAM,GAAM,GAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,QAwBxG3V,KAAKqgB,WACLrgB,KAAKgO,KAAO,UAEhB+R,EAAcxhB,KAAKyB,OAI3B,SAASugB,EAAqBnT,GAE1BA,EAASA,GAAU,GACnB,IASIQ,EATE4S,EAAUxgB,KAAKwgB,QACfvO,EAAc7E,EAAO6E,YACrBC,EAAqB9E,EAAO8E,mBAC5BG,EAAWjF,EAAOiF,SAClB0E,EAAuB3J,EAAO2J,qBAC9BzE,EAAWlF,EAAOkF,SAClB/D,EAAQnB,EAAOmB,MACjBkS,OAAwB5hB,EACxB6hB,OAAwB7hB,EAqD5B,OAPA+O,EAAW,CACPiR,aAvBJ,SAAsBC,GAClB,OAAO2B,EAAyB5B,aAAaC,IAuB7C6B,gBApBJ,SAAyBljB,EAAG4Q,GACxB,IAAK5Q,IAAMA,EAAEuR,UAAYvR,EAAE8T,SACvB,MAAM,IAAIpT,MAAM,uCAGG,iBAAnBV,EAAEuR,QAAQhB,KAEV0S,EAAyB7L,gBAAgBpX,EAAG4Q,GAElB,wBAAnB5Q,EAAEuR,QAAQhB,OAEjB0S,EAAyBhK,kBAAkBjZ,EAAG4Q,GAG9C5Q,EAAEsW,OAAS,QAtCfzB,EAASsO,gBAAgB,OAAQR,GACjC9N,EAASsO,gBAAgB,OAAQlB,GACjCpN,EAASsO,gBAAgB,OAAQd,GACjCxN,EAASsO,gBAAgB,OAAQb,GAEjCU,GAA2B,EAAAI,EAAA,SAAyBL,GAASrb,OAAO,CAChE4R,qBAAsBA,EACtBD,UAAW1J,EAAO0J,UAClBxE,SAAUA,IAEdoO,GAA2B,EAAAI,EAAA,SAAyBN,GAASrb,OAAO,CAChE8M,YAAaA,EACbC,mBAAoBA,EACpBI,SAAUA,EACVD,SAAUA,EACV9D,MAAOA,EACP6D,WAAYhF,EAAOgF,aAiCpBxE,EAGX2S,EAAqB3O,sBAAwB,uB,UAC9BC,OAAOC,aAAaC,gBAAgBwO,G,8KC1J7B,K,MACM,K,MACU,I,MACL,I,MACX,K,MACA,I,MACE,KAExB,SAASQ,EAAW3T,GAEhBA,EAASA,GAAU,GACnB,IAAIoT,EAAUxgB,KAAKwgB,QACfnO,EAAWjF,EAAOiF,SAChB5E,EAASL,EAAOK,OAChBqJ,EAAY1J,EAAO0J,UACnBkK,EAAkB5T,EAAO4T,gBAC3B/O,EAAc7E,EAAO6E,YACrBC,EAAqB9E,EAAO8E,mBAC5B+O,EAAmB7T,EAAO6T,iBAC1BlK,EAAuB3J,EAAO2J,qBAC9BmK,GAAuB,EAAAC,EAAA,SAAqBX,GAASrb,OAAO,CAC5D8M,YAAaA,EACbC,mBAAoBA,EACpB6E,qBAAsBA,EACtBkK,iBAAkBA,EAClB5O,SAAUA,EACVyE,UAAWA,EACXxE,SAAUlF,EAAOkF,SACjB/D,MAAOnB,EAAOmB,MACd6D,WAAYhF,EAAOgF,aAGnBgP,OAAuBviB,EACvB+O,OAAQ/O,EAMZ,SAASwiB,EAAmBrT,GACxB,OAAOiT,EAAiBK,4BAA4BC,OAAO,SAAAC,GACvD,OAAOA,EAAUzQ,YAAc/C,IAChC,GAGP,SAASyT,EAA0BzT,GAC/B,OAAOoT,EAAwBG,OAAO,SAAAG,GAClC,OAAQA,EAAW3Q,YAAc/C,IAClC,GAoBP,SAAS2T,IAGYV,EAAiBK,4BACvBM,QAAQ,SAAUJ,GACzB,IAIQK,EAJJL,EAAUzQ,YAAc+F,EAAU8B,OAClC4I,EAAUzQ,YAAc+F,EAAUgC,OAClC0I,EAAUzQ,YAAc+F,EAAUgL,mBAE9BD,EAAyBJ,EAA0BD,EAAUzQ,eAE7D8Q,GAAyB,EAAAE,EAAA,SAA0BvB,GAASrb,OAAO,CAC/DkJ,gBAAiBmT,EACjBlT,kBAAmBlB,EAAOkB,kBAC1BC,MAAOnB,EAAOmB,SAEKuC,aACvBsQ,EAAwB7f,KAAKsgB,IAEjCA,EAAuB/W,WAYnC,SAASkX,EAA0BvkB,GAC/B,IAAI4Q,EAAkBgT,EAAmB5jB,EAAEmS,WAC3C,GAAKvB,EAAL,CAGA,IACIM,EAD2BN,EAAgBY,8BACDC,2BAC1Ca,EAAY1B,EAAgB2B,eAE5BhB,EAAU,IAAAW,EAAA,QACdX,EAAQY,UAAYjB,EAAeC,WAAWZ,KAC9CgB,EAAQhB,KAAOgT,EACfhS,EAAQtC,MAAQiC,EAAejC,MAC/BsC,EAAQc,QAAUnB,EAAeP,MACjCY,EAAQe,UAAYA,EACpBf,EAAQkB,iBAAmBvB,EAAewB,GAE1C,IAjEqBnB,EAASiT,EAAUC,EAClCC,EAgEAA,GAjEenT,EAiESA,EAjEAiT,EAiESlS,EAAUqS,WAAWjS,GAjEpB+R,EAiEwBzkB,EAAEuQ,OAASP,EAAO4U,2BAhE5EF,EAAQ,IAAAG,EAAA,SAERL,SAAWA,EACjBE,EAAMpS,UAAYf,EAAQe,UAC1BoS,EAAMI,YAAcvT,EAAQhB,KAC5BmU,EAAMrX,MAAQkE,EAAQd,UACtBiU,EAAMtS,SAAWb,EAAQa,SACzBsS,EAAMtP,IAAMsP,EAAMrX,MAAQqX,EAAMtS,SAChCsS,EAAM/T,MAAQY,EAAQZ,MACtB+T,EAAMrS,QAAUd,EAAQc,QACxBqS,EAAMjS,iBAAmBlB,EAAQkB,iBACjCiS,EAAMD,YAAcA,EAEbC,GAqDP,IAEIA,EAAMK,MAAQtB,EAAqBrC,aAAalQ,GAGhD0D,EAASuB,QAAQnG,EAAOgV,qBAAsB,CAC1CN,MAAOA,IAEb,MAAO1kB,GACL2P,EAAOgF,WAAWX,MAAM,IAAAwC,EAAA,QAAgBxW,EAAEW,KAAMX,EAAEof,QAASpf,EAAEsf,OAIjEtf,EAAEsW,OAAS,MAGf,SAAS2O,EAAqBjlB,GAC1B,IAEI4Q,EAQIwT,EAOJtO,EAjBA9V,EAAEgU,QAEFpD,EAAkBgT,EAAmB5jB,EAAEuR,QAAQY,cAInDsR,EAAqBP,gBAAgBljB,EAAG4Q,GAEjB,wBAAnB5Q,EAAEuR,QAAQhB,OAEN6T,EAAyBJ,EAA0BhkB,EAAEuR,QAAQY,aAE7DiS,EAAuB1Q,mBAAmB1T,IAK9C8V,EAAe9V,EAAEuR,QAAQe,UAAUqS,WAAW7O,cAChCoP,WAAapP,EAAaqP,gBAAkB3b,EAAAA,GAC1D0a,KAIR,SAASkB,IACD3Q,EAAmB4Q,gBAAmD,IAAjC5Q,EAAmBhB,WACxDyQ,IAIR,SAASoB,IACD7Q,EAAmB4Q,gBAAmD,IAAjC5Q,EAAmBhB,WACxDyQ,IAIR,SAASqB,EAAiBC,GACjBA,GAAkBA,EAAclG,OAIrCkG,EAAclG,KAAOkG,EAAclG,KAAKvM,QAAQ,yCAA0C,8BAmC9F,OARA5C,EAAW,CACP8D,MAjBJ,WACIW,EAAS6Q,IAAIzV,EAAO0V,eAAgBnB,EAA2BhiB,MAC/DqS,EAAS6Q,IAAIzV,EAAO2V,gBAAiBP,EAAkB7iB,MACvDqS,EAAS6Q,IAAIzV,EAAO4V,oBAAqBN,EAAqB/iB,MAC9DqS,EAAS6Q,IAAIzV,EAAO6V,2BAA4BZ,EAAsB1iB,MACtEqS,EAAS6Q,IAAIzV,EAAO8V,cAAeP,EAAkBhjB,MAlGrDohB,EAAwBQ,QAAQ,SAAA7jB,GAC5BA,EAAE2T,UAEN0P,EAA0B,IA4G1BoC,gBAPJ,WAEI,OADY,EAAAC,EAAA,SAAUjD,GAASrb,OAAOiI,IAOtCsW,eA3BJ,WACIrR,EAASsR,GAAGlW,EAAO0V,eAAgBnB,EAA2BpU,EAAUiE,OAAOC,aAAa8R,0BAA0BvR,EAASwR,gBAAgBC,qBAC/IzR,EAASsR,GAAGlW,EAAO2V,gBAAiBP,EAAkBjV,EAAUiE,OAAOC,aAAa8R,0BAA0BvR,EAASwR,gBAAgBC,qBACvIzR,EAASsR,GAAGlW,EAAO4V,oBAAqBN,EAAqBnV,EAAUiE,OAAOC,aAAa8R,0BAA0BvR,EAASwR,gBAAgBC,qBAC9IzR,EAASsR,GAAGlW,EAAO6V,2BAA4BZ,EAAsB9U,EAAUiE,OAAOC,aAAa8R,0BAA0BvR,EAASwR,gBAAgBC,qBACtJzR,EAASsR,GAAGlW,EAAO8V,cAAeP,EAAkBpV,KAnJpDwT,EAA0B,GA8KvBxT,EAGXmT,EAAWnP,sBAAwB,aACnC,IAAMmS,EAAUlS,OAAOC,aAAaC,gBAAgBgP,GACpDgD,EAAQ5W,OAAM+G,EAAA,QACdrC,OAAOC,aAAakS,mBAAmBjD,EAAWnP,sBAAuBmS,G,UAC1DA,E,8cC1NQ,GAMV,SADPE,K,kGAAAA,GAEEC,EAAAhf,OAAAif,eAFFF,EAAShf,WAAA,cAAAjF,MAAAzB,KAAAyB,MAMPA,KAAKmU,iBAAmB,IAKxBnU,KAAK4c,2BAA6B,IAElC5c,KAAKoU,oBAAsB,qCAC3BpU,KAAK8c,8BAAgC,oBAI7C,IAAIsH,EAAY,I,0TAlBVH,I,2CAAAA,G,UAmBSG,E,qICvBQ,G,oCAGnB5D,EAA6B,oBAAX6D,QAA0BA,QAAWC,EAEvDzS,EAAS2O,EAAQ3O,QAEjBA,EADCA,IACQ2O,EAAQ3O,OAAS,KAGvBkP,WAAUwD,EAAA,Q,UAEF1S,E,EACNkP,WAAUwD,EAAA,U,oNCPA,G,oCAEnB,SAASC,EAAUpX,GAEf,IAuCIQ,EAvCE6W,GADNrX,EAASA,GAAU,IACGqX,OAChBlW,EAAQnB,EAAOmB,MACfuI,EAAY1J,EAAO0J,UACnB4N,EAAgBtX,EAAOsX,cACvBC,EAAmBvX,EAAOuX,iBAC1BC,EAAWxX,EAAOwX,SAElBC,EAAqB,IACrBC,EAAmB,CAAC,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,QAE3DC,EAAO,CACTC,KAAQ,OACRC,KAAQ,YACRC,KAAQ,QAENC,EAAgB,CAClBD,KAAQ,KAENE,EAAyB,CAC3BC,KAAO,EACPC,MAAO,EACPC,KAAO,EACPC,KAAO,EACPC,MAAO,EACPC,KAAO,EACPC,KAAO,EACPC,MAAO,EACPC,KAAO,EACPC,KAAO,EACPC,MAAO,GACPC,IAAM,GACNC,KAAM,IAEJC,EAAc,CAChBC,MAAS,YACTC,MAAS,YACT3b,KAAQ,mBAIRoD,OAAMhP,EAOV,SAASwnB,EAAUC,EAAsBvX,GACrC,IACIwX,EADEpX,EAAS,GAEXP,OAAU/P,EAGdsQ,EAAOI,sBAAwB,GAC/BgX,EAAUD,EAAqBE,qBAAqB,eACpD,IAAK,IAAI3oB,EAAI,EAAGA,EAAI0oB,EAAQ/nB,OAAQX,IAEb,QADnB+Q,EAaR,SAA0B6X,EAAa1X,GACnC,IAEI2X,EAFE1P,EAAgB,GAChB2P,EAAkB,GAEpBC,OAAa/nB,EACb8P,OAAc9P,EAEdhB,OAACgB,EAECka,EAAO0N,EAAYI,aAAa,QAChC7Y,EAAOyY,EAAYI,aAAa,QAChCnO,EAAO+N,EAAYI,aAAa,YAChCC,EAAapO,EAAO1K,EAAO,IAAM0K,EAAO1K,EAW9C,CAAA,IAEY+Y,EAQAC,EAnBZhQ,EAAc7G,GAAK4I,GAAQ+N,EAC3B9P,EAAciQ,YAAcjZ,EAC5BgJ,EAAc0B,KAAOA,GAAQ,MAC7B1B,EAAckQ,SAAWhB,EAAYlY,GACrCgJ,EAAcmQ,QAAUV,EAAYI,aAAa,WACjD7P,EAAcoQ,SAAWX,EAAYI,aAAa,YAClD7P,EAAcqQ,UAAYZ,EAAYI,aAAa,aAG/C7P,EAAcmQ,UACVpC,EAAK/N,EAAcmQ,WACfJ,EAAO,CACPO,YAAa,0BACbxnB,MAAOilB,EAAK/N,EAAcmQ,UAE9BnQ,EAAcuQ,KAAOR,EACrB/P,EAAcwQ,aAAe,CAACT,IAE9B5B,EAAcnO,EAAcmQ,WACxBH,EAAgB,CAChBM,YAAa,0CACbxnB,MAAOqlB,EAAcnO,EAAcmQ,UAEvCnQ,EAAcyQ,cAAgBT,EAC9BhQ,EAAc0Q,sBAAwB,CAACV,KAS/C,IAJAN,EAyKJ,SAA4BD,EAAa1X,GACrC,IAAM2X,EAAkB,GACpBiB,OAAQ9oB,EACR+oB,OAAoB/oB,EACpBuR,OAAGvR,EAcP,OAZAuR,EAAMqW,EAAYI,aAAa,OAE/Bc,GADAA,EAAWvX,EAAMA,EAAII,QAAQ,YAAa,eAAiB,MACrCmX,EAASnX,QAAQ,eAAgB,UAAY,KAGnEoX,GADAA,EAAuBnB,EAAYI,aAAa,cACF3T,WAAW0U,GAAwB7Y,EAEjF2X,EAAgBnW,MAAQoX,EACxBjB,EAAgB3X,UAAY6Y,EAE5BlB,EAAgBjX,gBAKpB,SAA4BgX,EAAa1X,GACrC,IAAM8Y,EAAkB,GAClBC,EAASrB,EAAYD,qBAAqB,KAC1C3X,EAAW,GACbC,OAAOjQ,EACPkpB,OAAWlpB,EACX6R,OAAS7R,EACThB,OAACgB,EAACuD,OAACvD,EAACrB,OAACqB,EACLgR,EAAW,EAEf,IAAKhS,EAAI,EAAGA,EAAIiqB,EAAOtpB,OAAQX,IAoD3B,GAnDAiR,EAAU,IAGV4B,EAAYoX,EAAOjqB,GAAGgpB,aAAa,QAIlB,EAAAmB,EAAA,SAAOtX,GAAWpJ,SAAQ,EAAA0gB,EAAA,SAAO1c,OAAO2c,qBACrDnZ,EAAQ4B,UAAYA,GAExB5B,EAAQnR,EAAIuV,WAAWxC,GAGvB5B,EAAQnK,EAAIuO,WAAW4U,EAAOjqB,GAAGgpB,aAAa,MAGnC,IAAPhpB,GAAciR,EAAQnR,IACtBmR,EAAQnR,EAAI,GAGR,EAAJE,KACAkqB,EAAclZ,EAASA,EAASrQ,OAAS,IAExBmG,IACTojB,EAAYrX,UACZqX,EAAYpjB,GAAI,EAAAqjB,EAAA,SAAOtX,GAAW/O,UAAS,EAAAqmB,EAAA,SAAOD,EAAYrX,YAAYxI,aAE1E6f,EAAYpjB,EAAImK,EAAQnR,EAAIoqB,EAAYpqB,EAE5CkS,GAAYkY,EAAYpjB,GAGvBmK,EAAQnR,IACLoqB,EAAYrX,WACZ5B,EAAQ4B,WAAY,EAAAsX,EAAA,SAAOD,EAAYrX,WAAW1P,KAAI,EAAAgnB,EAAA,SAAOD,EAAYpjB,IAAI2B,WAC7EwI,EAAQnR,EAAIuV,WAAWpE,EAAQ4B,YAE/B5B,EAAQnR,EAAIoqB,EAAYpqB,EAAIoqB,EAAYpjB,IAKhDmK,EAAQnK,IACRkL,GAAYf,EAAQnK,GAIxBkK,EAAStN,KAAKuN,GAGdtR,EAAI0V,WAAW4U,EAAOjqB,GAAGgpB,aAAa,MAGlC,IAAKzkB,EAAI,EAAGA,EAAK5E,EAAI,EAAI4E,IACrB2lB,EAAclZ,EAASA,EAASrQ,OAAS,IACzCsQ,EAAU,IACFnR,EAAIoqB,EAAYpqB,EAAIoqB,EAAYpjB,EACxCmK,EAAQnK,EAAIojB,EAAYpjB,EACpBojB,EAAYrX,YACZ5B,EAAQ4B,WAAa,EAAAsX,EAAA,SAAOD,EAAYrX,WAAW1P,KAAI,EAAAgnB,EAAA,SAAOD,EAAYpjB,IAAI2B,YAElFuJ,GAAYf,EAAQnK,EACpBkK,EAAStN,KAAKuN,GAS1B,OAJA+Y,EAAgB/U,EAAIjE,EACpBgZ,EAAgBnY,UAAYb,EAC5BgZ,EAAgBhY,SAAWA,EAAWd,EAE/B8Y,EAvF2BK,CAAmBzB,EAAaC,EAAgB3X,WAE3E2X,EA3LWyB,CAAmB1B,EAAa1X,GAElD6X,EAAgBH,EAAYD,qBAAqB,gBAE5C3oB,EAAI,EAAGA,EAAI+oB,EAAcpoB,OAAQX,IAElC+oB,EAAc/oB,GAAGuqB,QAAUpR,EAAcoR,QACzCxB,EAAc/oB,GAAGqpB,SAAWlQ,EAAckQ,SAG1CN,EAAc/oB,GAAGwqB,GAAKrR,EAAc7G,GAAK,IAAMyW,EAAc/oB,GAAGgpB,aAAa,SAKtD,QAFvBlY,EAyBR,SAA2B2Z,EAAc7B,GACrC,IAAM9X,EAAiB,GACjBX,EAAOyY,EAAYI,aAAa,QAClC0B,EAAc,KAElB5Z,EAAewB,GAAKmY,EAAaD,GACjC1Z,EAAe8B,UAAYpE,SAASic,EAAazB,aAAa,WAAY,IAC1ElY,EAAeuY,SAAWoB,EAAapB,SACvCvY,EAAe0J,MAAQhM,SAASic,EAAazB,aAAa,YAAa,IACvElY,EAAe2J,OAASjM,SAASic,EAAazB,aAAa,aAAc,IAKrD,QAHpB0B,EAAcD,EAAazB,aAAa,YAGI,KAAhB0B,IACxBA,EAAc9B,EAAYI,aAAa,WAK3C,GAAoB,OAAhB0B,GAAwC,KAAhBA,EACxB,GAAIva,IAAS8I,EAAUgC,MACnByP,EAAc,WACX,GAAIva,IAAS8I,EAAU8B,MAE1B,OADA/K,EAAOU,MAAM,6GACN,KAKf,IAA6D,IAAzDuW,EAAiB/Y,QAAQwc,EAAYC,eAGrC,OADA3a,EAAO4a,KAAK,wBAA0BF,GAC/B,KAIS,SAAhBA,GAA0C,SAAhBA,EAC1B5Z,EAAeqL,OAevB,SAAsBsO,GAClB,IACII,EADArN,EAAmBiN,EAAazB,aAAa,oBAAoBvgB,WAYrE,OAJAoiB,EAAY,iBAAiBC,KAAKtN,GAI3B,SAFEqN,GAAaA,EAAU,GAAMrN,EAAiBuN,OAAOvN,EAAiBtP,QAAQ2c,EAAU,IAAM,GAAI,QAAM7pB,GA1BrFgqB,CAAaP,GACA,GAA9BC,EAAYxc,QAAQ,QAC3B4C,EAAeqL,OA6BvB,SAAqBsO,EAAcC,GAC/B,IAAMO,EAAezc,SAASic,EAAazB,aAAa,gBAAiB,IACrExL,EAAmBiN,EAAazB,aAAa,oBAAoBvgB,WACjEyiB,EAAa,EAEbC,OAAKnqB,EACLoqB,OAASpqB,EACTqqB,OAA+BrqB,EAIf,SAAhB0pB,IACAQ,EAAa,QAGQlqB,IAArBwc,GAAuD,KAArBA,GAClC0N,EAAa,EACbE,EAAY7D,EAAuB0D,GAoCnCzN,GADAA,EAAmB,IAlCC,SAAhBkN,GAGAQ,EAAa,EACb1N,EAAmB,IAAII,WAAW,GAClCyN,EAAkC9D,EAAsC,EAAf0D,GAGzDzN,EAAiB,GAAK0N,GAAe,EAAME,GAAa,EACxD5N,EAAiB,GAAK4N,GAAc,EAAMX,EAAaa,UAAY,EAAMD,GAAmC,EAC5G7N,EAAiB,GAAK6N,GAAoC,EAAM,EAChE7N,EAAiB,GAAK,GAEtB2N,EAAQ,IAAII,YAAY,IAClB,IAAM/N,EAAiB,IAAM,GAAKA,EAAiB,GACzD2N,EAAM,IAAM3N,EAAiB,IAAM,GAAKA,EAAiB,GAEnC2N,EAAM,GAAG1iB,SAAS,IAClB0iB,EAAM,GAAG1iB,SAAS,IAAM0iB,EAAM,GAAG1iB,SAAS,OAKhE+U,EAAmB,IAAII,WAAW,IAEjB,GAAKsN,GAAe,EAAME,GAAa,EACxD5N,EAAiB,GAAK4N,GAAc,EAAM5c,SAASic,EAAazB,aAAa,YAAa,KAAO,GAEjGmC,EAAQ,IAAII,YAAY,IAClB,IAAM/N,EAAiB,IAAM,GAAKA,EAAiB,GAEnC2N,EAAM,GAAG1iB,SAAS,OAIRkiB,cACpCF,EAAae,aAAa,mBAAoBhO,IACxB,IAAf0N,IACPA,GAA4D,IAA9C1c,SAASgP,EAAiBuN,OAAO,EAAG,GAAI,MAAe,GAGzE,MAAO,WAAaG,EAxFQO,CAAYhB,EAAcC,GAClD5Z,EAAe2N,kBAAoBjQ,SAASic,EAAazB,aAAa,gBAAiB,IACvFlY,EAAeuN,cAAgB7P,SAASic,EAAazB,aAAa,YAAa,MACxE0B,EAAYxc,QAAQ,SAAWwc,EAAYxc,QAAQ,WAC1D4C,EAAeqL,OAASlD,EAAUyS,MAMtC,OAHA5a,EAAe0M,iBAAmB,GAAKiN,EAAazB,aAAa,oBACjElY,EAAeyZ,QAAUE,EAAaF,QAE/BzZ,EA3Ec6a,CAAkB5C,EAAc/oB,GAAI4oB,MAIjD9X,EAAea,gBAAkBkX,EAEjCC,EAAgBplB,KAAKoN,IAI7B,OAA+B,IAA3BgY,EAAgBnoB,QAIpBwY,EAAcyS,eAA2C,EAA1B9C,EAAiBnoB,OAAcmoB,EAAkBA,EAAgB,GAChG3P,EAAc0S,uBAAyB/C,EAGvC3P,EAAcxH,gBAAkBkX,EAErBA,EAAgBjX,gBAAgBC,UAEpCsH,GAXI,KAhFM2S,CAAiBpD,EAAQ1oB,GAAIkR,KAEtCI,EAAOI,sBAAsBhO,KAAKqN,GAQ1C,OAJ0C,EAAtCO,EAAOI,sBAAsB/Q,SAC7B2Q,EAAOya,cAAuD,EAAvCza,EAAQI,sBAAsB/Q,OAAc2Q,EAAOI,sBAAwBJ,EAAOI,sBAAsB,IAG5HJ,EAiUX,SAAS0a,EAA2BC,GAChC,IAyE2BC,EAxEvBC,OAASnrB,EAETorB,OAAGprB,EA0BP,OApBAmrB,EAuBJ,SAAkCE,GAC9B,IAEIC,OAAUtrB,EACVurB,OAAYvrB,EACZwrB,OAAWxrB,EACXhB,EAAI,EAKEqsB,EAASrsB,EAAI,GAAaqsB,EAASrsB,EAAI,GAAaqsB,EAASrsB,EAAI,GAAWqsB,EAASrsB,GAIhFqsB,GAHfrsB,GAAK,GAGuB,GAAWqsB,EAASrsB,GAChDA,GAAK,EAGL,KAAOA,EAAIqsB,EAAS1rB,QAMhB,GAJA2rB,GAAcD,EAASrsB,EAAI,IAAM,GAAKqsB,EAASrsB,GAC/CA,GAAK,EAGc,IAAfssB,EASA,OANAC,GAAgBF,EAASrsB,EAAI,IAAM,GAAKqsB,EAASrsB,GACjDA,GAAK,GAGLwsB,EAAc,IAAI5O,WAAW2O,IACjB1O,IAAIwO,EAASI,SAASzsB,EAAGA,EAAIusB,IAClCC,EAIf,OAAO,KA7DKE,CAHD9F,EAAO+F,YAAYV,EAAiBW,WAAW1N,UAOtDiN,EAAY,IAAIZ,YAAYY,EAAUU,QAGtCV,EAAYpgB,OAAO+gB,aAAazf,MAAM,KAAM8e,GAI5CC,GADY,IAAKW,WAAaC,gBAAgBb,EAAW,mBACzCc,cAAc,OAAOC,YAGrCd,EAAMxF,EAAO+F,YAAYP,GAmD7Be,EAD2BjB,EA/CDE,EAgDV,EAAG,GACnBe,EAAUjB,EAAM,EAAG,GACnBiB,EAAUjB,EAAM,EAAG,GACnBiB,EAAUjB,EAAM,EAAG,IAhDZE,EAmDX,SAASe,EAAUxI,EAAOyI,EAAMC,GAC5B,IAAMC,EAAO3I,EAAMyI,GACnBzI,EAAMyI,GAAQzI,EAAM0I,GACpB1I,EAAM0I,GAAQC,EAmElB,SAASC,EAAgBC,EAAQC,GAC7B,IAYIvc,EAZEM,EAAW,GACXkc,EAAqB,GACrBjF,EAAuB+E,EAAO7E,qBAAqB,wBAAwB,GAC3EgF,EAAaH,EAAO7E,qBAAqB,cAAc,GACzDsD,EAAmB,KACnB3a,OAAMtQ,EACN4sB,OAAW5sB,EACXoY,OAAiBpY,EACjBorB,OAAGprB,EACH6sB,OAAe7sB,EACfqP,OAASrP,EACTgQ,OAAQhQ,EAER8sB,OAAe9sB,EACfhB,OAACgB,EAAEuD,OAACvD,EAGRwQ,EAASuc,SAAW,MACpBvc,EAASwc,SAAW,wCACpBxc,EAASrB,KAAuD,SAAhDsY,EAAqBO,aAAa,UAAuB,UAAY,SACrF9X,EAAauX,EAAqBO,aAAa,aAC/CxX,EAASN,UAAYA,EAAYmE,WAAWnE,GAAa8V,EACzD,IAAIiH,EAAkB5Y,WAAWoT,EAAqBO,aAAa,oBAE7C,YAAlBxX,EAASrB,MAA2C,IAApB8d,IAAyBC,MAAMD,KAC/DA,EAAkB7kB,EAAAA,GAGE,IAApB6kB,GAA0E,SAAjDxF,EAAqBO,aAAa,aAC3DiF,EAAkB7kB,EAAAA,GAGA,EAAlB6kB,IACAzc,EAASsD,qBAAuBmZ,EAAkBzc,EAASN,WAG/D,IAnGIid,EAkLYC,EAuBRC,EAEAC,EACAC,EAEAC,EA3GJxc,EAAWqD,WAAWoT,EAAqBO,aAAa,aA8D5D,IA7DAxX,EAASid,0BAA0C,IAAdzc,EAAmB5I,EAAAA,EAAW4I,EAAWR,EAASN,UAEvFM,EAASkd,cAAgB,EACzBld,EAASmd,oBAAqB,EAGR,YAAlBnd,EAASrB,MAAiC,EAAX6B,IAC/BR,EAASrB,KAAO,SAEhBqB,EAASsD,qBAAuB9C,EAAWR,EAASN,WAIlC,YAAlBM,EAASrB,MAAuBqB,EAASsD,qBAAuB1L,EAAAA,IAChEoI,EAASod,8BAA+B,EACxCpd,EAASqd,qCAAsC,EAC/Crd,EAASsd,0BAA2B,GAIxCtd,EAASud,OAASvG,EAAUC,EAAsBjX,EAASN,WAC3DM,EAASC,eAAiB,CAACD,EAASud,cAGpCzd,EAASE,EAASud,QACX9hB,MAAQ,KAUX0gB,KACA1B,EAAmBuB,EAAO7E,qBAAqB,oBAAoB,IAIlDiE,WAAW1N,KAAO+M,EAAiBW,WAAW1N,KAAKvM,QAAQ,SAAU,IAGtFyZ,EAAMJ,EAA2BC,IAGjC7S,EA9IG,CACHqQ,YAAa,gDACbxnB,MAAO,0BACPksB,IAPAA,EAAM,CACNa,OAiJ8C/C,EAjJrBW,WAAW1N,KACpC+P,SAAU,QAMVC,YAAaf,IA2IK,oBAAsB/B,EACxCsB,EAAmBhqB,KAAK0V,IAGxBA,EA3IR,SAAyCgT,GACrC,IAAI+C,EAAa,CACb1F,YAAa,gDACbxnB,MAAO,sBAEX,IAAKmqB,EACD,OAAO+C,EAEX,IAAMC,EAAe,IAAIxR,WAAW,EAAIwO,EAAIzrB,QAC5CyuB,EAAa,GAAK,GAClBA,EAAa,GAAK,GAClBA,EAAavR,IAAIuO,EAAK,GAGtB,IAAMzrB,EAAS,GAAyFyuB,EAAazuB,OACjHkf,EAAO,IAAIjC,WAAWjd,GACtBX,EAAI,EA+BR,OA5BA6f,EAAK7f,MAAiB,WAATW,IAAwB,GACrCkf,EAAK7f,MAAiB,SAATW,IAAwB,GACrCkf,EAAK7f,MAAiB,MAATW,IAAwB,EACrCkf,EAAK7f,KAAiB,IAATW,EAGbkf,EAAKhC,IAAI,CAAC,IAAM,IAAM,IAAM,IAAM,EAAM,EAAM,EAAM,GAAO7d,GAC3DA,GAAK,EAGL6f,EAAKhC,IAAI,CAAC,IAAM,IAAM,IAAM,IAAO,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,GAAM,KAAO7d,GAC5GA,GAAK,GAGL6f,EAAK7f,MAA8B,WAAtBovB,EAAazuB,SAAwB,GAClDkf,EAAK7f,MAA8B,SAAtBovB,EAAazuB,SAAwB,GAClDkf,EAAK7f,MAA8B,MAAtBovB,EAAazuB,SAAwB,EAClDkf,EAAK7f,KAA8B,IAAtBovB,EAAazuB,OAG1Bkf,EAAKhC,IAAIuR,EAAcpvB,GAGvB6f,EAAO9T,OAAO+gB,aAAazf,MAAM,KAAMwS,GACvCA,EAAO+G,EAAOyI,YAAYxP,GAE1BsP,EAAWtP,KAAO,CAAEmP,OAAQnP,GAErBsP,EA4FiBG,CAAgClD,IAClC,oBAAsBA,EACxCsB,EAAmBhqB,KAAK0V,GAExB5H,EAAS2P,kBAAoBuM,EAC7Blc,EAAS+d,0BAA4B7B,GAGzCE,EAActc,EAAOI,sBAEhB1R,EAAI,EAAGA,EAAI4tB,EAAYjtB,OAAQX,GAAK,EAAG,CACxC4tB,EAAY5tB,GAAG2R,gBAAgB6d,eAAiB,mBAEbxuB,IAA/BwQ,EAAS2P,oBACTyM,EAAY5tB,GAAGmhB,kBAAoB3P,EAAS2P,kBAC5CyM,EAAY5tB,GAAGuvB,0BAA4B/d,EAAS+d,2BAGrB,UAA/B3B,EAAY5tB,GAAGopB,cAEf0E,EAAkBF,EAAY5tB,GAAG2R,gBAAgBC,gBAAgBC,UAAU,GAAG/K,EAAI8mB,EAAY5tB,GAAG2R,gBAAgBT,UAEjHM,EAASkd,cAAkC,EAAlBZ,EAEH,YAAlBtc,EAASrB,OAGLie,IADJpd,EAAW4c,EAAY5tB,GAAG2R,gBAAgBC,gBAAgBC,WAClCb,EAASrQ,OAAS,GAAGb,EAAIkR,EAASA,EAASrQ,OAAS,GAAGmG,GAAK8mB,EAAY5tB,GAAG2R,gBAAgBT,UAAY,IAC/HM,EAAS4D,sBAAwB,IAAIhC,KAAKqa,EAAmBpa,UAAY+a,GAGrC,EAAhC5c,EAASsD,sBACTtD,EAASsD,uBAAyB1L,EAAAA,GAClCoI,EAASsD,qBAAuB8Y,EAAY5tB,GAAG2R,gBAAgBC,gBAAgBI,WAC/ER,EAASsD,qBAAuB8Y,EAAY5tB,GAAG2R,gBAAgBC,gBAAgBI,YAuC/F,GAhCAR,EAASkd,cAAgBlsB,KAAKgK,IAAIgF,EAASkd,cAAgBld,EAASsD,qBAAuBtD,EAASsD,qBAAuB1L,EAAAA,GAKrG,YAAlBoI,EAASrB,OAILke,GAHAA,EAAkBvH,EAAiB2I,iBAGjB3B,GADiE,OAApD/G,EAAS2I,MAAMC,UAAUC,wBAAoC1B,MAAMnH,EAAS2I,MAAMC,UAAUC,wBAA4E,EAAlD7I,EAAS2I,MAAMC,UAAUC,wBAG9KtB,EAAqB9rB,KAAKwF,IAAIwJ,EAASsD,qBAAuB,GAA+BtD,EAASsD,qBAAuB,GAG7H0Z,GAFAD,EAAY/rB,KAAKgK,IAAI8hB,EAAoBD,IAEhBP,EAC7B/G,EAAS8I,OAAO,CACZF,UAAa,CACTpB,UAAaA,EACbuB,iBAAoBtB,EACpBuB,uBAA0BvB,EAC1BwB,+BAAkCxB,aAMvChd,EAAS2P,yBACT3P,EAAS+d,0BAKM,WAAlB/d,EAASrB,KAAmB,CAG5B,IAAI8f,EAAepJ,EAAcqJ,WACjC,GAAID,GAAgBA,EAAapC,gBAC7BA,EAAkBoC,EAAapC,qBAE/B,IAAK7tB,EAAI,EAAGA,EAAI4tB,EAAYjtB,OAAQX,IAC5B4tB,EAAY5tB,GAAGopB,cAAgBnQ,EAAUgC,OAAS2S,EAAY5tB,GAAGopB,cAAgBnQ,EAAU8B,QAE3F1K,GADAW,EAAW4c,EAAY5tB,GAAG2R,gBAAgBC,gBAAgBC,WACrC,GAAG/R,EAAI8tB,EAAY5tB,GAAG2R,gBAAgBT,eACnClQ,IAApB6sB,IACAA,EAAkBxd,GAEtBwd,EAAkBrrB,KAAKgK,IAAIqhB,EAAiBxd,GAG5CmB,EAASid,0BAA4BjsB,KAAKgK,IAAIgF,EAASid,0BAA2Bb,EAAY5tB,GAAG2R,gBAAgBC,gBAAgBI,WAK7I,GAAsB,EAAlB6b,EAAqB,CAErB,IADArc,EAASqc,gBAAkBA,EACtB7tB,EAAI,EAAGA,EAAI4tB,EAAYjtB,OAAQX,IAAK,CAErC,IADAgR,EAAW4c,EAAY5tB,GAAG2R,gBAAgBC,gBAAgBC,UACrDtN,EAAI,EAAGA,EAAIyM,EAASrQ,OAAQ4D,IACxByM,EAASzM,GAAGsO,YACb7B,EAASzM,GAAGsO,UAAY7B,EAASzM,GAAGzE,GAExCkR,EAASzM,GAAGzE,GAAM+tB,EAAkBD,EAAY5tB,GAAG2R,gBAAgBT,UAEnE0c,EAAY5tB,GAAGopB,cAAgBnQ,EAAUgC,OAAS2S,EAAY5tB,GAAGopB,cAAgBnQ,EAAU8B,QAC3FzJ,EAAOrE,MAAQzK,KAAKwF,IAAIgJ,EAAS,GAAGlR,EAAGwR,EAAOrE,OAC9C2gB,EAAY5tB,GAAG2R,gBAAgBwe,uBAAyB7e,EAAOrE,OAGvEqE,EAAOrE,OAASuE,EAASN,WASjC,OAHAM,EAASid,0BAA4BjsB,KAAKC,MAA2C,IAArC+O,EAASid,2BAAoC,IAC7Fnd,EAAOU,SAAWR,EAASid,0BAEpBjd,EA2DX,OARAzB,EAAW,CACPqgB,MA1BJ,SAAuBlR,GACnB,IACI1N,EAEEnB,EAAYmW,OAAO6J,YAAYC,MAGrC9C,EA9BJ,SAAkBtO,GACd,IAAIsO,EAAS,KAEb,GAAIhH,OAAOuG,WAIiD,GADxDS,GAFe,IAAIhH,OAAOuG,WAEVC,gBAAgB9N,EAAM,aAC3ByJ,qBAAqB,eAAehoB,OAC3C,MAAM,IAAIL,MAAM,+BAIxB,OAAOktB,EAkBE+C,CAASrR,GAEZsR,EAAehK,OAAO6J,YAAYC,MAExC,GAAe,OAAX9C,EACA,OAAO,KAIXhc,EAAW+b,EAAgBC,EAAQ,IAAIpa,MAEvC,IAAMqd,EAAejK,OAAO6J,YAAYC,MAIxC,OAFAtgB,EAAO0gB,KAAK,mCAAqCF,EAAengB,GAAWsgB,YAAY,GAAK,kBAAoBF,EAAeD,GAAcG,YAAY,GAAK,gBAAkBF,EAAepgB,GAAa,KAAMsgB,YAAY,GAAK,MAE5Nnf,GAKPof,YAnCJ,WACI,OAAO,MAmCPC,QAhCJ,WACI,OAAO,OArtBP7gB,EAASU,EAAMoD,UAAU/D,GAyvBtBA,EAGX4W,EAAU5S,sBAAwB,Y,UACnBC,OAAOC,aAAaC,gBAAgByS,G,+aCpzB5B,GAUR,SALTmK,K,kGAAAA,GAMEzK,EAAAhf,OAAAif,eANFwK,EAAiB1pB,WAAA,cAAAjF,MAAAzB,KAAAyB,MAafA,KAAK4uB,cAAgB,cAOrB5uB,KAAK6uB,aAAe,gBAOpB7uB,KAAK8uB,cAAgB,eAMrB9uB,KAAK+uB,2BAA6B,qBAMlC/uB,KAAKgvB,MAAQ,QAKbhvB,KAAKsjB,2BAA6B,2BAMlCtjB,KAAKqiB,0BAA4B,0BAKjCriB,KAAKivB,yBAA2B,yBAMhCjvB,KAAKkvB,2BAA6B,2BAMlClvB,KAAKmvB,IAAM,MAOXnvB,KAAKovB,gBAAkB,iBAMvBpvB,KAAKqvB,gBAAkB,iBAMvBrvB,KAAKsvB,eAAiB,gBAMtBtvB,KAAKuvB,aAAe,cAMpBvvB,KAAKwvB,eAAiB,gBAMtBxvB,KAAKyvB,wBAA0B,wBAM/BzvB,KAAK0vB,sBAAwB,sBAM7B1vB,KAAK2vB,yBAA2B,yBAMhC3vB,KAAK4vB,wBAA0B,wBAM/B5vB,KAAK6vB,sBAAwB,sBAM7B7vB,KAAK8vB,mBAAqB,oBAM1B9vB,KAAK+vB,oBAAsB,qBAM3B/vB,KAAKgwB,mBAAqB,oBAM1BhwB,KAAKiwB,yBAA2B,yBAMhCjwB,KAAKkwB,kBAAoB,qBAMzBlwB,KAAKmwB,iBAAmB,iBAMxBnwB,KAAKowB,YAAc,aAMnBpwB,KAAKujB,cAAgB,cAMrBvjB,KAAKqwB,iBAAmB,kBAMxBrwB,KAAKswB,yBAA2B,yBAQhCtwB,KAAKuwB,SAAW,UAMhBvwB,KAAKwwB,eAAiB,gBAOtBxwB,KAAKywB,eAAiB,gBAMtBzwB,KAAK0wB,qBAAuB,qBAO5B1wB,KAAK2wB,yBAA2B,yBAMhC3wB,KAAKojB,gBAAkB,iBAQvBpjB,KAAK4wB,iBAAmB,kBAQxB5wB,KAAK6wB,kBAAoB,mBAMzB7wB,KAAK8wB,sBAAwB,sBAM7B9wB,KAAK+wB,gBAAkB,iBAMvB/wB,KAAKgxB,iBAAmB,kBAMxBhxB,KAAKqjB,oBAAsB,oBAM3BrjB,KAAKixB,iBAAmB,kBAQxBjxB,KAAKkxB,iBAAmB,kBAMxBlxB,KAAKmxB,sBAAwB,sBAO7BnxB,KAAKoxB,iBAAmB,kBAMxBpxB,KAAK8T,0BAA4B,0BAIzC,IAAIud,EAAoB,I,0TAjTlB1C,I,2CAAAA,G,UAkTS0C,E,wHClTA,SADTC,EACUlzB,EAAMye,EAASE,I,kGADzBuU,GAEEtxB,KAAK5B,KAAOA,GAAQ,KACpB4B,KAAK6c,QAAUA,GAAW,KAC1B7c,KAAK+c,KAAOA,GAAQ,M,qHCDb,SAFTwU,K,kGAAAA,GAGEvxB,KAAKiiB,SAAW,KAChBjiB,KAAK+P,UAAY,KACjB/P,KAAKuiB,YAAc,KACnBviB,KAAK8P,QAAU0hB,IACfxxB,KAAKoO,MAAQojB,IACbxxB,KAAKwiB,MAAQ,KACbxiB,KAAK8K,MAAQ0mB,IACbxxB,KAAK6S,IAAM2e,IACXxxB,KAAK6P,SAAW2hB,IAChBxxB,KAAKkQ,iBAAmB,KACxBlQ,KAAKkiB,YAAc,M,uVCjBC,IAMtBuP,G,EAAAA,EAAe,CAAA,C,oCA2BM,WACnB,OAAQzxB,KAAKgO,MAAQhO,KAAKgO,OAAS0jB,EAAAC,YAAYC,oB,qBAG5C,SAACrD,GACJvuB,KAAKgO,KAAOugB,GAAQA,EAAKsD,KAAOH,EAAAC,YAAYC,kBAAoBF,EAAAC,YAAYG,mBAC5E9xB,KAAKoQ,IAAMme,GAAQA,EAAKne,IAAMme,EAAKne,IAAM,KACzCpQ,KAAK0M,MAAQ6hB,GAAQA,EAAK7hB,MAAQ6hB,EAAK7hB,MAAM5B,MAAQ,IAAMyjB,EAAK7hB,MAAMmG,IAAM,KAC5E7S,KAAK4P,UAAY2e,GAAQA,EAAK3e,UAAY2e,EAAK3e,UAAY,SAnC7D6hB,GACS,SADTA,EACUrhB,I,kGADVqhB,GAEEzxB,KAAK+xB,OAASN,EAAgBO,gBAC9BhyB,KAAKkO,UAAYsjB,IACjBxxB,KAAK4P,UAAY,KACjB5P,KAAK+P,UAAY,KACjB/P,KAAKgO,KAAO,KACZhO,KAAK6P,SAAW2hB,IAChBxxB,KAAK+O,UAAYyiB,IACjBxxB,KAAK0M,MAAQ,KACb1M,KAAKoQ,IAAMA,GAAO,KAClBpQ,KAAKiyB,gBAAkB,KACvBjyB,KAAKkyB,iBAAmB,KACxBlyB,KAAKmyB,cAAgB,KACrBnyB,KAAKoyB,eAAiB,KACtBpyB,KAAK8P,QAAU0hB,IACfxxB,KAAKoO,MAAQojB,IACbxxB,KAAKiT,sBAAwB,KAC7BjT,KAAKqyB,oBAAsB,KAC3BryB,KAAKsyB,cAAgB,KACrBtyB,KAAKuyB,YAAcf,IACnBxxB,KAAKwyB,WAAahB,IAClBxxB,KAAKyyB,iBAAmBjB,IACxBxxB,KAAK0yB,aAAe,cACpB1yB,KAAKkQ,iBAAmB,KAehCuhB,EAAgBO,gBAAkB,WAClCP,EAAgBkB,gBAAkB,W,UAEnBlB,E,8MCvCA,SAJTE,I,OAAAA,GASE3xB,KAAK4yB,MAAQ,KAab5yB,KAAKgO,KAAO,KAKZhO,KAAKoQ,IAAM,KAKXpQ,KAAK6yB,UAAY,KAKjB7yB,KAAK0M,MAAQ,KAKb1M,KAAK8yB,SAAW,KAKhB9yB,KAAK+yB,UAAY,KAKjB/yB,KAAKgzB,aAAe,KAKpBhzB,KAAKizB,SAAW,KAKhBjzB,KAAKkzB,MAAQ,GAMblzB,KAAKmzB,QAAU,KAKfnzB,KAAKozB,SAAW,KAKhBpzB,KAAKqzB,eAAiB,KAKtBrzB,KAAKszB,SAAW,KAKhBtzB,KAAKuzB,iBAAmB,KAKxBvzB,KAAKwzB,iBAAmB,KA+BhC7B,EAAY8B,IAAM,MAClB9B,EAAY+B,KAAO,OACnB/B,EAAYgC,SAAW,MACvBhC,EAAYiC,qBAAuB,iBACnCjC,EAAYC,kBAAoB,wBAChCD,EAAYkC,mBAAqB,eACjClC,EAAYG,mBAAqB,eACjCH,EAAYmC,iCAAmC,4BAC/CnC,EAAYoC,WAAa,Q,EAEhBpC,YAAAA,E,EAAaqC,iBA7BP,SAJTA,I,OAAAA,GASEh0B,KAAKi0B,EAAI,KAKTj0B,KAAK2E,EAAI,KAKT3E,KAAKiB,EAAI"}