{"version":3,"sources":["../../../../../src/core/errors/Errors.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;22CA8BuB,cAAc;;;OAK/B,MAAM,kCAAN,MAAM,cACI,SADV,MAAM,EACO,sBADb,MAAM,EAEJ,2BAFF,MAAM,2CAEI;;WAIR,IAAI,CAAC,0CAA0C,GAAG,EAAE,CAAC;;WAIrD,IAAI,CAAC,0CAA0C,GAAG,EAAE,CAAC;;WAIrD,IAAI,CAAC,uCAAuC,GAAG,EAAE,CAAC;;WAIlD,IAAI,CAAC,iCAAiC,GAAG,EAAE,CAAC,AAC5C,IAAI,CAAC,+BAA+B,GAAG,EAAE,CAAC,AAC1C,IAAI,CAAC,8BAA8B,GAAG,EAAE,CAAC,AACzC,IAAI,CAAC,2BAA2B,GAAG,EAAE,CAAC,AACtC,IAAI,CAAC,0CAA0C,GAAG,EAAE,CAAC,AACrD,IAAI,CAAC,uCAAuC,GAAG,EAAE,CAAC,AAClD,IAAI,CAAC,wCAAwC,GAAG,EAAE,CAAC,AACnD,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC,AAC5B,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC,AAC5B,IAAI,CAAC,6BAA6B,GAAG,EAAE,CAAC;;WAIxC,IAAI,CAAC,iCAAiC,GAAG,EAAE,CAAC;;WAI5C,IAAI,CAAC,+BAA+B,GAAK,EAAE,CAAC,AAE5C,IAAI,CAAC,+BAA+B,GAAK,EAAE,CAAC;;WAI5C,IAAI,CAAC,0BAA0B,GAAU,UAAU,CAAC,AACpD,IAAI,CAAC,2BAA2B,GAAc,EAAE,CAAC,AACjD,IAAI,CAAC,8BAA8B,GAAW,EAAE,CAAC;;WAKjD,IAAI,CAAC,yBAAyB,GAAW,SAAS,CAAC,AACnD,IAAI,CAAC,qCAAqC,GAAI,EAAE,CAAC;;WAIjD,IAAI,CAAC,gCAAgC,GAAI,gBAAgB,CAAC,AAC1D,IAAI,CAAC,4BAA4B,GAAa,EAAE,CAAC;;WAIjD,IAAI,CAAC,uBAAuB,GAAa,OAAO,CAAC,AAGjD,IAAI,CAAC,4BAA4B,GAAa,EAAE,CAAC,AACjD,IAAI,CAAC,4BAA4B,GAAa,EAAE,CAAC;;WAKjD,IAAI,CAAC,gCAAgC,GAAS,EAAE,CAAC;;WAIjD,IAAI,CAAC,8BAA8B,GAAW,EAAE,CAAC;;WAIjD,IAAI,CAAC,kCAAkC,GAAO,EAAE,CAAC;;WAIjD,IAAI,CAAC,iCAAiC,GAAG,EAAE,CAAC,AAE5C,IAAI,CAAC,6CAA6C,GAAG,qBAAqB,CAAC,AAC3E,IAAI,CAAC,6CAA6C,GAAG,2BAA2B,CAAC,AACjF,IAAI,CAAC,0CAA0C,GAAG,gCAAgC,CAAC,AACnF,IAAI,CAAC,oCAAoC,GAAG,wBAAwB,CAAC,AACrE,IAAI,CAAC,kCAAkC,GAAG,+BAA+B,CAAC,AAC1E,IAAI,CAAC,iCAAiC,GAAG,wBAAwB,CAAC,AAClE,IAAI,CAAC,8BAA8B,GAAG,4BAA4B,CAAC,AACnE,IAAI,CAAC,0CAA0C,GAAG,iBAAiB,CAAC,AACpE,IAAI,CAAC,2CAA2C,GAAG,+BAA+B,CAAC,AACnF,IAAI,CAAC,oBAAoB,GAAG,sBAAsB,CAAC,AACnD,IAAI,CAAC,oBAAoB,GAAG,uBAAuB,CAAC,AACpD,IAAI,CAAC,gCAAgC,GAAG,oBAAoB,CAAC,AAE7D,IAAI,CAAC,oCAAoC,GAAG,8BAA8B,CAAC,AAC3E,IAAI,CAAC,kCAAkC,GAAG,4BAA4B,CAAC,AACvE,IAAI,CAAC,8BAA8B,GAAG,iBAAiB,CAAC,AACxD,IAAI,CAAC,oCAAoC,GAAG,yCAAyC,CAAC,CACzF,OAlGC,MAAM,6BAqGZ,IAAI,MAAM,CAAG,IAAI,MAAM,EAAE,CAAC,qBACX,MAAM","file":"Errors.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport ErrorsBase from './ErrorsBase';\n/**\n * Errors declaration\n * @class\n */\nclass Errors extends ErrorsBase {\n    constructor () {\n        super();\n        /**\n         * Error code returned when a manifest parsing error occurs\n         */\n        this.MANIFEST_LOADER_PARSING_FAILURE_ERROR_CODE = 10;\n        /**\n         * Error code returned when a manifest loading error occurs\n         */\n        this.MANIFEST_LOADER_LOADING_FAILURE_ERROR_CODE = 11;\n        /**\n         * Error code returned when a xlink loading error occurs\n         */\n        this.XLINK_LOADER_LOADING_FAILURE_ERROR_CODE = 12;\n        /**\n         * Error code returned when the update of segments list has failed\n         */\n        this.SEGMENTS_UPDATE_FAILED_ERROR_CODE = 13;\n        this.SEGMENTS_UNAVAILABLE_ERROR_CODE = 14;\n        this.SEGMENT_BASE_LOADER_ERROR_CODE = 15;\n        this.TIME_SYNC_FAILED_ERROR_CODE = 16;\n        this.FRAGMENT_LOADER_LOADING_FAILURE_ERROR_CODE = 17;\n        this.FRAGMENT_LOADER_NULL_REQUEST_ERROR_CODE = 18;\n        this.URL_RESOLUTION_FAILED_GENERIC_ERROR_CODE = 19;\n        this.APPEND_ERROR_CODE = 20;\n        this.REMOVE_ERROR_CODE = 21;\n        this.DATA_UPDATE_FAILED_ERROR_CODE = 22;\n        /**\n         * Error code returned when MediaSource is not supported by the browser\n         */\n        this.CAPABILITY_MEDIASOURCE_ERROR_CODE = 23;\n        /**\n         * Error code returned when Protected contents are not supported\n         */\n        this.CAPABILITY_MEDIAKEYS_ERROR_CODE   = 24;\n\n        this.DOWNLOAD_ERROR_ID_MANIFEST_CODE   = 25;\n        /*\n         *@deprecated\n         */\n        this.DOWNLOAD_ERROR_ID_MANIFEST        = 'manifest';\n        this.DOWNLOAD_ERROR_ID_SIDX_CODE            = 26;\n        this.DOWNLOAD_ERROR_ID_CONTENT_CODE         = 27;\n\n        /*\n         *@deprecated\n         */\n        this.DOWNLOAD_ERROR_ID_CONTENT         = 'content';\n        this.DOWNLOAD_ERROR_ID_INITIALIZATION_CODE  = 28;\n        /*\n         *@deprecated\n         */\n        this.DOWNLOAD_ERROR_ID_INITIALIZATION  = 'initialization';\n        this.DOWNLOAD_ERROR_ID_XLINK_CODE           = 29;\n        /*\n         *@deprecated\n         */\n        this.DOWNLOAD_ERROR_ID_XLINK           = 'xlink';\n\n\n        this.MANIFEST_ERROR_ID_CODEC_CODE           = 30;\n        this.MANIFEST_ERROR_ID_PARSE_CODE           = 31;\n\n        /**\n         * Error code returned when no stream (period) has been detected in the manifest\n         */\n        this.MANIFEST_ERROR_ID_NOSTREAMS_CODE       = 32;\n        /**\n         * Error code returned when something wrong has append during subtitles parsing (TTML or VTT)\n         */\n        this.TIMED_TEXT_ERROR_ID_PARSE_CODE         = 33;\n        /**\n         * Error code returned when a 'muxed' media type has been detected in the manifest. This type is not supported\n         */\n        this.MANIFEST_ERROR_ID_MULTIPLEXED_CODE     = 34;\n        /**\n         * Error code returned when a media source type is not supported\n         */\n        this.MEDIASOURCE_TYPE_UNSUPPORTED_CODE = 35;\n\n        this.MANIFEST_LOADER_PARSING_FAILURE_ERROR_MESSAGE = 'parsing failed for ';\n        this.MANIFEST_LOADER_LOADING_FAILURE_ERROR_MESSAGE = 'Failed loading manifest: ';\n        this.XLINK_LOADER_LOADING_FAILURE_ERROR_MESSAGE = 'Failed loading Xlink element: ';\n        this.SEGMENTS_UPDATE_FAILED_ERROR_MESSAGE = 'Segments update failed';\n        this.SEGMENTS_UNAVAILABLE_ERROR_MESSAGE = 'no segments are available yet';\n        this.SEGMENT_BASE_LOADER_ERROR_MESSAGE = 'error loading segments';\n        this.TIME_SYNC_FAILED_ERROR_MESSAGE = 'Failed to synchronize time';\n        this.FRAGMENT_LOADER_NULL_REQUEST_ERROR_MESSAGE = 'request is null';\n        this.URL_RESOLUTION_FAILED_GENERIC_ERROR_MESSAGE = 'Failed to resolve a valid URL';\n        this.APPEND_ERROR_MESSAGE = 'chunk is not defined';\n        this.REMOVE_ERROR_MESSAGE = 'buffer is not defined';\n        this.DATA_UPDATE_FAILED_ERROR_MESSAGE = 'Data update failed';\n\n        this.CAPABILITY_MEDIASOURCE_ERROR_MESSAGE = 'mediasource is not supported';\n        this.CAPABILITY_MEDIAKEYS_ERROR_MESSAGE = 'mediakeys is not supported';\n        this.TIMED_TEXT_ERROR_MESSAGE_PARSE = 'parsing error :';\n        this.MEDIASOURCE_TYPE_UNSUPPORTED_MESSAGE = 'Error creating source buffer of type : ';\n    }\n}\n\nlet errors = new Errors();\nexport default errors;"]}